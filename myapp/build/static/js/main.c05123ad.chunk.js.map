{"version":3,"sources":["net/netDownloadFile.tsx","component/watchJobInfoPanel.tsx","button/userDeliverButton.tsx","component/fillSelfInfoPanel.tsx","component/uploadResumeFilePanel.tsx","component/uploadHeadImgPanel.tsx","adminComponent/mangeJobInfoPanel.tsx","adminComponent/mangeDeliverInfoPanel.tsx","net/netConfig.tsx","global/userInfo.tsx","adminComponent/releaseJobInfoPanel.tsx","serviceWorker.ts","component/checkStatus.tsx","component/previewResumeFilePanel.tsx","component/mainPanel.tsx","component/logInPanel.tsx","component/signInPanel.tsx","adminComponent/adminLogInPanel.tsx","adminComponent/adminMainPanel.tsx","component/RouteControl.tsx","index.tsx","net/netUser.tsx","net/netDealResp.tsx","net/netDoRequest.tsx","net/netJob.tsx","net/netAdmin.tsx"],"names":["doGetRequestDownFile","url","queryData","a","resq","axios","get","Gproxy","params","data","JSON","stringify","timeout","Gtimeout","responseType","console","log","fileName","_","split","length","decodeURI","replace","fileurl","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","message","info","downNginxFiles","downloadResByFileName","uuid","file_name","downloadUrl","nginx_download_url","toString","Option","Select","resume_info_status_view","f","select_list","map","item","key","value","dashed","type","color","defaultValue","style","width","onChange","WatchJobInfoPanel","useState","dataS","setDataS","job_name","set_job_name","job_category","set_job_category","min_education","set_min_education","company_name","set_company_name","min_salary","set_min_salary","max_salary","set_max_salary","job_create_time","set_job_create_time","job_status","set_job_status","page_index","set_page_index","sum_page_index","set_sum_page_index","loadData","select_job_api","useEffect","parseInt","error","input_type_view","column_name","addonBefore","name_chinese","eval","event","textValue","target","filiter_inpus_view","gutter","justify","min_education_view","onClick","columns","title","dataIndex","render","text","record","index","show_text","trigger","placement","content","icon","job_uuid","user_uuid","global_var","UserDeliverButton","page_index_view","fontSize","index_","e","rowKey","dataSource","pagination","hideOnSinglePage","rowClassName","button_text","set_button_text","resume_is_full","set_resume_is_full","resume_file_is_upload","set_resume_file_is_upload","get_job_status","get_deliver_status_api","res","get_user_resume_info","get_user_resume_info_api","get_file_name","get_resume_file_name_api","change_fill_all_info_status","Object","keys","i","change_resume_file_status","resume_file_name","check_resume","resume_info","history","useHistory","deliver_job_api","setTimeout","disabled","TextArea","Input","resume_name","resume_school","resume_tele","resume_email","resume_age","resume_highest_degree","resume_location","resume_late_major","resume_birthday","resume_expected_arrival_time","resume_skill","resume_award","resume_graduation_date","resume_self_description","resume_project_experience","resume_internship","resume_job_intension","resume_sex","FillSelfInfoPanel","get_std_month_str","moment","format","set_resume_name","set_resume_school","set_resume_tele","set_resume_highest_degree","set_resume_location","set_resume_late_major","set_resume_skill","set_resume_award","set_resume_self_description","set_resume_project_experience","set_resume_internship","set_resume_job_intension","set_resume_sex","set_resume_email","set_resume_graduation_date","set_resume_birthday","set_resume_expected_arrival_time","fill_all_info","set_fill_all_info","get_user_info","set_user_info","d_","select_education_view","c_name","min_education_selects","select_sex_view","input_from_column","text_area_from_column","auto_config","minRows","autoSize","default_len","config","duration","time_picker_from_column","temp_date","locale","date","datestring","picker","left_name_list","text_area_name_list","time_picker_name_list","leftInputView","left_view_list","textAreaInputAreaView","view_list","timePickerView","fill_info_view","user_upload_resume_api","success","flex","Dragger","Upload","UploadResumeFilePanel","fn","set_fn","set_f_size","resume_file","set_resume_file","remote_file_name","set_remote_file_name","props","name","accept","beforeUpload","file","fileList","file_size","formData","FormData","set","upload_resume_file_api","async_upload","showUploadList","status","className","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","UploadHeadImgPanel","image_url","set_image_url","get_headimg_name_api","file_url","upload_headimg_api","isJpgOrPng","isLt2M","size","check_head_img","uploadButton","height","padding","margin","src","alt","upload_headimg_file","MangeJobInfoPanel","maxHeight","clientHeight","set_job_status_api","admin_info","query_job_id","minHeight","display","justifyContent","select_job_id","candidate_detail","MangeDeliverInfoPanel","set_query_job_id","deliver_status","set_deliver_status","get_candidate_info_api","time0","setInterval","query_id","clearInterval","job_id","select_job_by_id_api","job_data","reflash_job_name","job_id_input_type_view","select_deliver_status_view","selects_","output_all_resume_info_api","detail_info_view","c_name_path","text_value","left_info_columns","right_info_columns","detail_view","set_deliver_status_api","admin_login_url","get_candidate_info_url","output_all_resume_info_url","user_register_url","user_login_url","user_upload_resume_url","get_user_resume_info_url","upload_resume_file_url","upload_headimg_url","get_resume_file_name_url","get_headimg_name_url","deliver_job_url","get_deliver_status_url","set_deliver_status_url","publish_job_url","select_job_by_id_url","select_job_url","set_job_status_url","download_url","user_info","job_name_","job_category_","company_name_","min_education_","company_tele_","company_email_","min_salary_","max_salary_","job_describe_","job_demand_","job_create_time_","job_status_","default_value","RealseJobInfoPanel","company_tele","set_company_tele","company_email","set_company_email","job_describe","set_job_describe","job_demand","set_job_demand","alignItems","publish_job_api","Boolean","location","hostname","match","check_user_login_status","user_login_api","check_admin_login_status","admin_login_api","PreviewResumeFilePanel","clientWidth","minWidth","Title","Typography","Header","Layout","Content","Footer","Sider","MainPanel","isCollapsed","setIsCollapsed","jobType","check_res","ShowJobPage","modalVisible","set_modalVisible","opacity","PoweroffOutlined","visible","okText","cancelText","closable","onOk","onCancel","overflow","left","collapsible","collapsed","onCollapse","theme","defaultSelectedKeys","mode","Item","lineHeight","borderTop","backgroundColor","path","textAlign","LogInPanel","user_tele","set_user_tele","user_pwd","set_user_pwd","user_verify_code","set_user_verify_code","verify_code","set_verify_code","tele_len","set_tele_len","pwd_len","set_pwd_len","set_user_verify_code_len","handleClick","useCallback","captcha","maxWidth","halfWidth","halfHeight","input_tele_col","test","placeholder","input_pwd_col","input_verify_code_col","charNum","bgColor","to","lineColor","pointColor","SignInPanel","user_pwd_second","set_user_pwd_second","user_email","set_user_email","pwd_second_len","set_pwd_second_len","email_len","set_email_len","input_pwd_second_col","input_email_col","user_register_api","AdminLogInPanel","admin_tele","set_admin_tele","admin_pwd","set_admin_pwd","AdminMainPanel","RouteControl","exact","ReactDOM","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","GetRequestCode","fromData","doPostRequest","top","maxCount","rtl","dealResp","complete","observable","showTest","ShowNode","observer","loading","post","headers","onUploadProgress","progressEvent","tempcomplete","loaded","total","destroy"],"mappings":"wOAqCO,SAAeA,EAAtB,oC,4CAAO,WAAoCC,EAAaC,GAAjD,qBAAAC,EAAA,6DAEDC,EAAO,GAFN,kBAIUC,IAAMC,IAAIC,IAASN,EAAK,CACnCO,OAAQ,CACNC,KAAMC,KAAKC,UAAUT,IAEvBU,QAAoB,EAAXC,IACTC,aAAc,SATb,OAIHV,EAJG,OAWHW,QAAQC,IAAI,sCAAcZ,GAE1Ba,GADIA,EAAWC,MAAMd,EAAM,8BAA+B,IAAIe,MAAM,MAChDF,EAASG,OAAS,GACtCH,EAAWI,UAAUJ,EAASK,QAAQ,KAAM,KACtCC,EAAUC,OAAOC,IAAIC,gBACzB,IAAIC,KAAK,CAACT,MAAMd,EAAM,OAAQ,QAE1BwB,EAAOC,SAASC,cAAc,MAC/BC,KAAOR,EACZK,EAAKI,aAAa,WAAYf,GAC9BY,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLC,IAAQC,KAAK,4BAvBV,kDAyBHD,IAAQC,KAAR,MAzBG,2D,sBA6BA,IAKHC,EAAc,uCAAG,WAAOf,EAAiBN,GAAxB,iBAAAd,EAAA,6DACfC,EAAO,GADQ,kBAGJC,IAAMC,IAAIiB,EAAS,CAC9Bf,OAAQ,GACRI,QAASC,IACTC,aAAc,SANC,OAGjBV,EAHiB,OAQjBmB,EAAUC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACT,MAAMd,EAAM,OAAQ,QAC7DwB,EAAOC,SAASC,cAAc,MAC/BC,KAAOR,EACZK,EAAKI,aAAa,WAAYf,GAC9BY,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,QACLC,IAAQC,KAAK,4BAdI,kDAgBjBD,IAAQC,KAAK,4BAhBI,0DAAH,wDAyBPE,EAAwB,SAACC,EAAcC,GAChD,IAAIC,EACFC,IAAqBH,EAAKI,WAAa,eAAiBH,EAC1DH,EAAeI,EAAaD,K,06EC/DtBI,OAAWC,oCAAXD,OAEGE,wBAA0B,SAACC,GACpC,IACIC,EADW,CAAC,GAAI,qBAAO,gBACAC,KAAI,SAACC,GAC9B,OACE,2DAACN,OAAD,CAAQO,IAAKD,EAAME,MAAOF,GACd,KAATA,EAAc,eAAOA,MAK5B,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAASG,QAAQ,EAAMC,KAAK,aAC5B,2DAAC,oCAAD,CAAKC,MAAM,OAAX,IAAmB,2BAAnB,KACA,2DAAC,oCAAD,CACEC,aAAa,qBACbC,MAAO,CAAEC,MAAO,KAChBC,SAAU,SAACP,GACTL,EAAEK,KAGHJ,GAEH,2DAAC,oCAAD,CAASK,QAAQ,EAAMC,KAAK,eASvBM,kBAAoB,SAApBA,oBAA0B,cAEXC,oDAAS,IAFE,kLAE9BC,MAF8B,cAEvBC,SAFuB,yBAKJF,oDAAS,IALL,mLAK9BG,SAL8B,cAKpBC,aALoB,yBAMIJ,oDAAS,IANb,mLAM9BK,aAN8B,cAMhBC,iBANgB,yBAOMN,oDAAS,IAPf,mLAO9BO,cAP8B,cAOfC,kBAPe,yBAQIR,oDAAS,IARb,oLAQ9BS,aAR8B,eAQhBC,iBARgB,2BAUAV,oDAAS,KAVT,qLAU9BW,WAV8B,eAUlBC,eAVkB,2BAWAZ,oDAAS,UAXT,qLAW9Ba,WAX8B,eAWlBC,eAXkB,2BAYUd,oDAAS,IAZnB,qLAY9Be,gBAZ8B,eAYbC,oBAZa,2BAaAhB,oDAAS,sBAbT,qLAa9BiB,WAb8B,eAalBC,eAbkB,2BAeAlB,oDAAS,KAfT,qLAe9BmB,WAf8B,eAelBC,eAfkB,2BAgBQpB,oDAAS,KAhBjB,qLAgB9BqB,eAhB8B,eAgBdC,mBAhBc,wBAkBpBC,WAlBoB,4XAkBnC,sKAAAlF,EAAA,6DACMK,EAAS,CACXyE,WAAYA,WACZhB,SAAUA,SACVE,aAAcA,aACdE,cAAeA,cACfE,aAAcA,aACdE,WAAYA,WACZE,WAAYA,WACZE,gBAAiBA,gBACjBE,WAAYA,YAVhB,SAYwBO,oDAAe9E,GAZvC,OAYMC,EAZN,OAcEuD,SAAS9C,yCAAMT,EAAM,aAAc,KACnC2E,mBAAmBlE,yCAAMT,EAAM,kBAfjC,4CAlBmC,sBAoCnC8E,sDAAU,WAIR,MAHmB,KAAfN,aACFA,WAAa,KAEXO,SAASP,YAAc,GACzB7C,oCAAQqD,MAAM,oCACdP,eAAe,MAENM,SAASP,YAAcO,SAASL,iBACzC/C,oCAAQqD,MAAM,6CACdP,eAAeC,iBAGfK,SAASP,YAAc,GACvBO,SAASP,YAAcO,SAASL,iBAEhC/C,oCAAQqD,MAAM,uCACdzB,SAAS,UAGXqB,aACC,CAACJ,WAAYF,WAAYV,gBAE5B,IAAIqB,gBAAkB,SAAlBA,gBAAmBC,aACrB,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACEC,YAAaC,oEAAa,GAAD,OAAIF,YAAJ,MACzBtC,MAAOyC,KAAKH,aACZ/B,SAAU,kBAACmC,OACT,IAAIC,UAAYD,MAAME,OAAO5C,MAC7ByC,KAAK,OAAD,OAAQH,aAAZG,CAA2BE,eAIjC,2DAAC,oCAAD,CAAS1C,QAAQ,EAAMC,KAAK,eAK9B2C,mBAAqB,WACvB,OACE,2DAAC,oCAAD,CAAKC,OAAQ,GAAIC,QAAQ,UACvB,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACGV,gBAAgB,YAChBA,gBAAgB,gBAChBA,gBAAgB,mBAChBA,gBAAgB,iBAEnB,2DAAC,oCAAD,KACGA,gBAAgB,cAChBA,gBAAgB,cAChBW,4EAAmB,GAAI/B,mBACvBvB,wBAAwBiC,gBACzB,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACEzB,KAAK,UACL+C,QAAS,WACPjB,aAHJ,iCAgCNkB,QAAU,CACd,CACEC,MAAO,iBACPC,UAAW,MAEb,CACED,MAAOX,oEAAY,UACnBY,UAAW,CAAC,SAAU,aAExB,CACED,MAAOX,oEAAY,cACnBY,UAAW,CAAC,SAAU,iBAExB,CACED,MAAOX,oEAAY,eACnBY,UAAW,CAAC,SAAU,kBAExB,CACED,MAAOX,oEAAY,cACnBY,UAAW,CAAC,SAAU,iBAExB,CACED,MAAOX,oEAAY,YACnBY,UAAW,CAAC,SAAU,eAExB,CACED,MAAOX,oEAAY,YACnBY,UAAW,CAAC,SAAU,eAExB,CACED,MAAOX,oEAAY,YACnBY,UAAW,CAAC,SAAU,eAExB,CACED,MAAOX,oEAAY,cACnBzC,IAAK,eACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAE/B,IAAIC,EAAY5F,yCAAM0F,EAAQ,sBAAuB,IAQrD,OACE,2DAAC,qCAAD,CACExD,IAAI,oBACJ2D,QAAQ,QACRC,UAAU,OACVR,MAAOX,oEAAY,cACnBoB,QAXA,2DAAC,oCAAD,KACE,sEAAoB,KAAdH,EAAmB,uCAAWA,KAYtC,2DAAC,qCAAD,CAAQI,KAAM,2DAAC,kDAAD,WAKtB,CACEV,MAAOX,oEAAY,YACnBzC,IAAK,aACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAE/B,IAAIC,EAAY5F,yCAAM0F,EAAQ,oBAAqB,IAQnD,OACE,2DAAC,qCAAD,CACExD,IAAI,oBACJ2D,QAAQ,QACRC,UAAU,OACVR,MAAOX,oEAAY,YACnBoB,QAXA,2DAAC,oCAAD,KACE,0EAAqB,KAAdH,EAAmB,uCAAWA,KAYvC,2DAAC,qCAAD,CAAQI,KAAM,2DAAC,kDAAD,WAKtB,CACEV,MAAO,2BACPpD,IAAK,kBACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAE/B,IAIIxE,EAAO,CAAE7B,OAJA,CACX2G,SAAUjG,yCAAM0F,EAAQ,kBAAmB,QAC3CQ,UAAWlG,yCAAMmG,iDAAY,sBAAuB,SAEzBT,OAAQA,GACrC,OAAOU,kEAAkBjF,MAK3BkF,gBAAkB,WACpB,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAK7D,MAAO,CAAE8D,SAAU,WAAxB,UAAuCrC,eAAvC,WACA,2DAAC,oCAAD,CAAS5B,KAAK,aACd,2DAAC,qCAAD,CACE+C,QAAS,WACP,IAAImB,EAASjC,SAASP,YAAc,EACpCC,eAAeuC,EAAO7E,cAH1B,sBAQA,2DAAC,oCAAD,CAASW,KAAK,aACd,2DAAC,qCAAD,CACE+C,QAAS,WACP,IAAImB,EAASjC,SAASP,YAAc,EACpCC,eAAeuC,EAAO7E,cAH1B,sBAQA,2DAAC,oCAAD,CAASW,KAAK,aACd,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACEqC,YAAY,qBACZlC,MAAO,CAAEC,MAAO,SAChBJ,KAAK,SACLF,MAAO4B,WACPrB,SAAU,SAAC8D,GACT,IAAI1B,EAAY0B,EAAEzB,OAAO5C,MACzB6B,eAAec,OAIrB,2DAAC,oCAAD,CAASzC,KAAK,eAKpB,OACE,2DAAC,oCAAD,CAAK4C,OAAQ,GAAIC,QAAQ,SAAS1C,MAAO,CAAEC,MAAO,SAChD,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAKwC,OAAQ,GAAIC,QAAQ,UACtB,IADH,wHAEwC,KAEvCF,qBACD,2DAAC,oCAAD,CAAS3C,KAAK,aAAaD,QAAQ,IAClCiE,kBACD,2DAAC,qCAAD,CACEI,OAAQ,SAACf,GAAD,OAAY1F,yCAAM0F,EAAQ,KAAM,MACxCgB,WAAY7D,MACZwC,QAASA,QACTsB,WAAY,CAAEC,kBAAkB,GAChCC,aAAc,SAACnB,GACb,OAAO1F,6CAAU,eAAMA,yCAAM0F,EAAQ,sBACjC,qBACA,yBAGR,2DAAC,oCAAD,CAASrD,KAAK,aAAaD,QAAQ,Q,8LCzVhCgE,EAAoB,SAACjF,GAAe,IAAD,EACPyB,mBAAS,gBADF,mBACvCkE,EADuC,KAC1BC,EAD0B,OAEDnE,oBAAS,GAFR,mBAEvCoE,EAFuC,KAEvBC,EAFuB,OAGarE,oBAAS,GAHtB,mBAGvCsE,EAHuC,KAGhBC,EAHgB,KAKxC7H,EAASU,MAAMmB,EAAM,SAAU,IAC/BuE,EAAS1F,MAAMmB,EAAM,SAAU,IAE/BiG,EAAc,uCAAG,8BAAAnI,EAAA,sEACFoI,YAAuB/H,GADrB,OACfC,EADe,OAGf+H,EAAMtH,MAAMT,EAAM,sBAAuB,sBAE7CwH,EAAgB/G,UAAU,qBAAOsH,GAAO,eAAOA,GAL5B,2CAAH,qDAOdC,EAAoB,uCAAG,8BAAAtI,EAAA,6DACrBK,EAAS,CAAE4G,UAAWlG,MAAMmG,IAAY,sBAAuB,KAD1C,SAERqB,YAAyBlI,GAFjB,cAErBC,EAFqB,yBAGlBS,MAAMT,EAAM,kBAAmB,KAHb,2CAAH,qDAKpBkI,EAAa,uCAAG,8BAAAxI,EAAA,6DACdK,EAAS,CACX4G,UAAWlG,MAAMmG,IAAY,sBAAuB,SAFpC,SAIDuB,YAAyBpI,GAJxB,cAIdC,EAJc,yBAKXS,MAAMT,EAAM,iBAAkB,uBALnB,2CAAH,qDAQboI,EAA8B,SAACrI,GACjC2H,GAAmB,GACfjH,UAAU,GAAIV,GAChB2H,GAAmB,GAGrBW,OAAOC,KAAKvI,GAAQ0C,KAAI,SAAC8F,GACL,KAAdxI,EAAOwI,IACTb,GAAmB,OAMrBc,EAA4B,SAACC,GAE3BhI,UAAU,qBAAOgI,GACnBb,GAA0B,GAE1BA,GAA0B,IAI1Bc,EAAY,uCAAG,8BAAAhJ,EAAA,sEACOsI,IADP,cACbW,EADa,gBAEYT,IAFZ,OAEbO,EAFa,OAGjBL,EAA4BO,GAC5BH,EAA0BC,GAJT,2CAAH,qDAOhB3D,qBAAU,WACR+C,IACAa,MACC,IAEH,IAAIE,EAAUC,cAmEd,OACE,kBAAC,IAAD,CACElG,IAAI,oBACJ2D,QAAQ,QACRC,UAAU,OACVR,MAAO,iCACPS,QAvBA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKvD,MAAO,CAAE8D,SAAU,WACtB,kBAAC,IAAD,0GAEA,kBAAC,IAAD,KAAMU,EAAiB,GAjDzB,kBAAC,IAAD,KACE,kBAAC,IAAD,MAEA,kBAAC,IAAD,mDACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE3E,KAAK,UACL+C,QAAS,WACP+C,EAAQ/H,QAAQ,2BAHpB,qCA8CF,kBAAC,IAAD,KAAM8G,EAAwB,GAhChC,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,mDACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE7E,KAAK,UACL+C,QAAS,WACP+C,EAAQ/H,QAAQ,2BAHpB,yBA8BF,kBAAC,IAAD,KACIJ,UAAU,eAAMA,MAAM0F,EAAQ,sBAhBpC,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,8CAeM,OAeV,kBAAC,IAAD,CACEN,QAAO,sBAAE,sBAAAnG,EAAA,sDACPoJ,YAAgB/I,GAEhBgJ,YAAW,WACTlB,MACC,KALI,2CAOTmB,UACGvI,UAAU,eAAM8G,KAChBE,IACAE,GACDlH,UAAU,eAAMA,MAAM0F,EAAQ,uBAG/BoB,M,+iFC1ID0B,SAAaC,oCAAbD,SACA7G,OAAWC,oCAAXD,OAuBJgD,aAAe,CACjB+D,YAAa,eACbC,cAAe,2BACfC,YAAa,eACbC,aAAc,2BACdC,WAAY,eACZC,sBAAuB,2BACvBC,gBAAiB,qBACjBC,kBAAmB,eACnBC,gBAAiB,2BACjBC,6BAA8B,2BAC9BC,aAAc,eACdC,aAAc,2BACdC,uBAAwB,2BAExBC,wBAAyB,2BAEzBC,0BAA2B,2BAC3BC,kBAAmB,2BACnBC,qBAAsB,2BACtBC,WAAY,gBAGHC,kBAAoB,SAApBA,oBACT,IAAIC,kBAAoB,WACtB,OAAOC,iDAASC,OAAO,YAFU,UAIEnH,oDAAS,IAJX,kLAI9B8F,YAJ8B,cAIjBsB,gBAJiB,yBAKMpH,oDAAS,IALf,mLAK9B+F,cAL8B,cAKfsB,kBALe,yBAMErH,oDAAS,IANX,mLAM9BgG,YAN8B,cAMjBsB,gBANiB,yBAOsBtH,oDAAS,gBAP/B,mLAO9BmG,sBAP8B,cAOPoB,0BAPO,yBAQUvH,oDAAS,IARnB,oLAQ9BoG,gBAR8B,eAQboB,oBARa,2BAScxH,oDAAS,IATvB,qLAS9BqG,kBAT8B,eASXoB,sBATW,2BAWIzH,oDAAS,IAXb,qLAW9BwG,aAX8B,eAWhBkB,iBAXgB,2BAYI1H,oDAAS,IAZb,qLAY9ByG,aAZ8B,eAYhBkB,iBAZgB,2BAc0B3H,oDAAS,IAdnC,qLAc9B2G,wBAd8B,eAcLiB,4BAdK,2BAe8B5H,oDAAS,IAfvC,qLAe9B4G,0BAf8B,eAeHiB,8BAfG,2BAgBc7H,oDAAS,IAhBvB,qLAgB9B6G,kBAhB8B,eAgBXiB,sBAhBW,2BAiBoB9H,oDAAS,IAjB7B,qLAiB9B8G,qBAjB8B,eAiBRiB,yBAjBQ,2BAkBA/H,oDAAS,UAlBT,qLAkB9B+G,WAlB8B,eAkBlBiB,eAlBkB,2BAmBIhI,oDAAS,IAnBb,qLAmB9BiG,aAnB8B,eAmBhBgC,iBAnBgB,2BAqBwBjI,oDACzDiH,qBAtBiC,qLAqB9BP,uBArB8B,eAqBNwB,2BArBM,2BAwBUlI,oDAASiH,qBAxBnB,qLAwB9BX,gBAxB8B,eAwBb6B,oBAxBa,2BA4B/BnI,oDAASiH,qBA5BsB,qLA0BjCV,6BA1BiC,eA2BjC6B,iCA3BiC,2BA8BMpI,qDAAS,GA9Bf,qLA8B9BqI,cA9B8B,eA8BfC,kBA9Be,eAgC/BC,cAAgB,WAqBlB,MApBa,CACXjF,UAAWlG,yCAAMmG,iDAAY,sBAAuB,QACpDuC,YAAaA,YACbC,cAAeA,cACfC,YAAaA,YACbG,sBAAuBA,sBACvBC,gBAAiBA,gBACjBC,kBAAmBA,kBACnBC,gBAAiBA,gBACjBC,6BAA8BA,6BAC9BC,aAAcA,aACdC,aAAcA,aACdC,uBAAwBA,uBACxBC,wBAAyBA,wBACzBC,0BAA2BA,0BAC3BC,kBAAmBA,kBACnBC,qBAAsBA,qBACtBb,aAAcA,aACdc,WAAYA,aAKZyB,cAAgB,SAACC,GACnBrB,gBAAgBhK,yCAAMqL,EAAI,cAAe,KACzCpB,kBAAkBjK,yCAAMqL,EAAI,gBAAiB,KAC7CnB,gBAAgBlK,yCAAMqL,EAAI,cAAe,KACzClB,0BAA0BnK,yCAAMqL,EAAI,wBAAyB,iBAC7DjB,oBAAoBpK,yCAAMqL,EAAI,kBAAmB,KACjDhB,sBAAsBrK,yCAAMqL,EAAI,oBAAqB,KACrDN,oBAAoB/K,yCAAMqL,EAAI,kBAAmB,KACjDL,iCACEhL,yCAAMqL,EAAI,+BAAgC,KAE5Cf,iBAAiBtK,yCAAMqL,EAAI,eAAgB,KAC3Cd,iBAAiBvK,yCAAMqL,EAAI,eAAgB,KAC3CP,2BAA2B9K,yCAAMqL,EAAI,yBAA0B,KAC/Db,4BAA4BxK,yCAAMqL,EAAI,0BAA2B,KACjEZ,8BAA8BzK,yCAAMqL,EAAI,4BAA6B,KACrEX,sBAAsB1K,yCAAMqL,EAAI,oBAAqB,KACrDV,yBAAyB3K,yCAAMqL,EAAI,uBAAwB,KAC3DR,iBAAiB7K,yCAAMqL,EAAI,eAAgB,KAC3CT,eAAe5K,yCAAMqL,EAAI,aAAc,YAGzChH,sDAAU,YACgB,gUAAG,wKAAApF,EAAA,6DACrBK,EAAS,CAAE4G,UAAWlG,yCAAMmG,iDAAY,sBAAuB,KAD1C,SAERqB,qDAAyBlI,GAFjB,OAErBC,EAFqB,OAGrB2I,EAAclI,yCAAMT,EAAM,kBAAmB,IAE5CS,6CAAU,GAAIkI,IACjBkD,cAAclD,GANS,2CAAH,qDASxBX,KACC,IAEHlD,sDAAU,WACRsD,iCAGF,IAAIA,4BAA8B,WAChC,IAAIrI,EAAS6L,gBACbD,mBAAkB,GAClBtD,OAAOC,KAAKvI,GAAQ0C,KAAI,SAAC8F,GACL,KAAdxI,EAAOwI,IACToD,mBAAkB,OAMpBI,sBAAwB,SAAxBA,sBAAyBC,QAC3B,IAAIC,sBAAwB,CAC1B,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,IAEEzJ,YAAcyJ,sBAAsBxJ,KAAI,SAACC,GAC3C,OACE,2DAACN,OAAD,CAAQO,IAAKD,EAAME,MAAOF,GACf,IAARA,EAAa,eAAOA,MAK3B,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAKK,MAAM,OAAX,IAAmBqC,aAAa4G,QAAhC,KACA,2DAAC,oCAAD,CACEpJ,MAAOyC,KAAK2G,QACZ/I,MAAO,CAAEC,MAAO,KAChBC,SAAU,kBAACP,OACTyC,KAAK,OAAD,OAAQ2G,QAAZ3G,CAAsBzC,SAGvBJ,cAGL,2DAAC,oCAAD,SAMJ0J,gBAAkB,SAAlBA,gBAAmBF,QACrB,IAAIC,sBAAwB,CAAC,SAAK,UAC9BzJ,YAAcyJ,sBAAsBxJ,KAAI,SAACC,GAC3C,OACE,2DAACN,OAAD,CAAQO,IAAKD,EAAME,MAAOF,GACf,IAARA,EAAa,eAAOA,MAK3B,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAKK,MAAM,OAAX,IAAmBqC,aAAa4G,QAAhC,KACA,2DAAC,oCAAD,CACEpJ,MAAOyC,KAAK2G,QACZ/I,MAAO,CAAEC,MAAO,KAChBC,SAAU,kBAACP,OACTyC,KAAK,OAAD,OAAQ2G,QAAZ3G,CAAsBzC,SAGvBJ,cAGL,2DAAC,oCAAD,SAMJ2J,kBAAoB,SAApBA,kBAAqBH,QACvB,OACE,2DAAC,oCAAD,CAAKrJ,IAAKqJ,QACR,2DAAC,oCAAD,CACE7G,YAAa1E,yCAAM2E,aAAc4G,OAAQ,sBACzCpJ,MAAOyC,KAAK2G,QACZ7I,SAAU,kBAAC8D,GACT,IAAIf,KAAOe,EAAEzB,OAAO5C,MACpByC,KAAK,OAAD,OAAQ2G,QAAZ3G,CAAsBa,SAG1B,2DAAC,oCAAD,CAASrD,QAAQ,GAAjB,OAKFuJ,sBAAwB,SAAxBA,sBAAyBJ,QAC3B,IAAIK,YAAc,CAAEC,QAAS,GAC7B,OACE,2DAAC,oCAAD,CAAK3J,IAAKqJ,QACR,2DAAC,oCAAD,MACA,2DAAC,oCAAD,CAAKjJ,MAAM,QAAX,IAAoBqC,aAAa4G,QAAjC,KACA,2DAAC/C,SAAD,CACEsD,SAAUF,YACVzJ,MAAOyC,KAAK2G,QACZ7I,SAAU,kBAACmC,OACT,IAAIkH,YAAc,IACdjH,UAAYD,MAAME,OAAO5C,MAE7B,GAAI2C,UAAU5E,OAAS6L,YAAa,CAClC,IAAIC,OAAS,CACXjG,QACE,2DAAC,oCAAD,KACGpB,aAAa4G,QADhB,6BAC+BQ,YAD/B,WAIFE,SAAU,GAEZ/K,qCAAQqD,MAAMyH,aAEdpH,KAAK,OAAD,OAAQ2G,QAAZ3G,CAAsBE,gBAQ9BoH,wBAA0B,SAA1BA,wBAA2BX,QAC7B,IAAIY,UAA6B,KAAjBvH,KAAK2G,QAAiBzB,iDAAWA,+CAAOlF,KAAK2G,SAC7D,OACE,2DAAC,oCAAD,CAAKrJ,IAAKqJ,QACR,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAKjJ,MAAM,YAAYqC,aAAa4G,SACpC,2DAAC,qCAAD,CACEpJ,MAAOgK,UACPC,OAAQA,iEACR1J,SAAU,kBAAC2J,KAAMC,YACf1H,KAAK,OAAD,OAAQ2G,QAAZ3G,CAAsB0H,aAExBC,OAAO,WAIX,2DAAC,oCAAD,QAOFC,eAAiB,CACnB,cACA,cACA,eACA,kBACA,gBACA,qBAIEC,oBAAsB,CACxB,0BACA,eACA,eACA,4BACA,oBACA,wBAGEC,sBAAwB,CAC1B,yBACA,kBACA,gCAEEC,cAAgB,WAClB,IAAIC,EAAiBJ,eAAexK,KAAI,SAACG,GAEvC,OAAOuJ,kBADIvJ,MAGb,OAAO,2DAAC,oCAAD,KAAMyK,IAUXC,sBAAwB,WAC1B,IAAIC,EAAYL,oBAAoBzK,KAAI,SAACG,GAEvC,OAAOwJ,sBADIxJ,MAGb,OAAO,2DAAC,oCAAD,KAAM2K,IAGXC,eAAiB,WACnB,IAAID,EAAYJ,sBAAsB1K,KAAI,SAACG,GAEzC,OAAO+J,wBADI/J,MAGb,OAAO,2DAAC,oCAAD,KAAM2K,IAGXE,eAAiB,WACnB,OACE,2DAAC,oCAAD,KACE,2DAAC,qCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KAAML,iBACN,2DAAC,oCAAD,CAAStK,KAAK,WAAWD,QAAQ,IACjC,2DAAC,oCAAD,KACGqJ,gBAAgB,cAChBH,sBAAsB,yBAEtByB,mBAGJF,wBACD,2DAAC,oCAAD,CAASzK,QAAQ,IACjB,2DAAC,qCAAD,CACEC,KAAK,UACLkG,UAAW0C,cACX7F,QAAO,+SAAE,sKAAAnG,EAAA,6DACHK,EAAS6L,gBADN,SAEU8B,qDAAuB3N,GAFjC,OAEHC,EAFG,OAGHS,6CAAU,IAAKA,yCAAMT,EAAM,UAC7B2B,qCAAQgM,QAAQ,oDAJX,4CAQRjC,cAAgB,uCAAW,kDAQxC,OACE,2DAAC,oCAAD,CAAKhG,OAAQ,GAAIC,QAAQ,SAAS1C,MAAO,CAAEC,MAAO,SAChD,2DAAC,oCAAD,CAAK0K,KAAM,GACT,2DAAC,oCAAD,KACE,2DAAC,oDAAD,OAEF,2DAAC,oCAAD,MACA,2DAAC,oCAAD,KACE,2DAAC,uDAAD,QAGJ,2DAAC,oCAAD,CAAKA,KAAM,GAAIH,qB,gNC7ZbI,EAAYC,IAAZD,QAGGE,EAAwB,WAAO,IAAD,EACF1K,mBAAS,IADP,gCAEpBA,mBAAS,uBAFW,mBAElC2K,EAFkC,KAE9BC,EAF8B,OAGZ5K,mBAAS,GAHG,mBAG1B6K,GAH0B,aAIF7K,mBAAS,IAJP,mBAIlC8K,EAJkC,KAIrBC,EAJqB,OAMQ/K,mBAAS,QANjB,mBAMlCgL,EANkC,KAMhBC,EANgB,KAQnCpG,EAAa,uCAAG,8BAAAxI,EAAA,6DACdK,EAAS,CACX4G,UAAWlG,MAAMmG,IAAY,sBAAuB,SAFpC,SAIDuB,YAAyBpI,GAJxB,OAIdC,EAJc,OAMlBsO,EAAqB7N,MAAMT,EAAM,iBAAkB,mCACnDiO,EAAOxN,MAAMT,EAAM,iBAAkB,mCACrCM,QAAQC,IAAI,4BAASP,GARH,2CAAH,qDAWjB8E,qBAAU,WACRoD,MACC,CAACiG,IAEJ,IAAMI,EAAQ,CACZC,KAAM,QACNC,OAAQ,uBACRC,aAAc,SAACC,EAAWC,GAoBxB,OAnBgB,uCAAG,gCAAAlP,EAAA,6DACbsC,EAAYvB,MAAMkO,EAAM,OAAQ,sBAChCE,EAAYpO,MAAMkO,EAAM,OAAQ,GACpCV,EAAOjM,GACPkM,EAAWW,GACXT,EAAgBO,IACZG,EAAW,IAAIC,UACVC,IAAI,YAAahN,GAC1B8M,EAASE,IAAI,OAAQL,GACrBG,EAASE,IACP,YACAvO,MAAMmG,IAAY,sBAAuB,SAX1B,UAaXqI,YAAuBH,GAbZ,QAcjB/F,YAAW,WACTb,MACC,KAhBc,4CAAH,oDAkBhBgH,IACO,GAETC,gBAAgB,EAEhBhM,SA3BY,SA2BHvB,GACYA,EAAK+M,KAAhBS,SAmCZ,OACE,kBAAC,IAAD,CAAK1J,OAAQ,GAAIC,QAAQ,SAAS1C,MAAO,CAAEC,MAAO,SAChD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKD,MAAO,CAAE8D,SAAU,WAAxB,wEA1BF,kBAAC,IAAD,KACE,kBAAC8G,EAAD,iBAAaU,EAAb,CAAoBtL,MAAO,CAAEC,MAAO,WAClC,uBAAGmM,UAAU,wBACX,kBAAC,IAAD,OAEF,uBAAGA,UAAU,mBAAb,yDAEE,6BAFF,eAIE,6BAJF,2BAME,6BANF,2DAQE,8BAEF,uBAAGA,UAAU,kBAAkBpM,MAAO,CAAEF,MAAO,QAC5CiL,KAYL,kBAAC,IAAD,CAASnL,QAAQ,IACjB,kBAAC,IAAD,CAAKI,MAAO,CAAE8D,SAAU,WACtB,kBAAC,IAAD,CAAK9D,MAAO,CAAE8D,SAAU,UAAYhE,MAAM,OAA1C,uCACSsL,GAET,kBAAC,IAAD,CAASvL,KAAK,cAEhB,kBAAC,IAAD,CAASD,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEgD,QAAS,WACP/D,YACErB,MAAMmG,IAAY,sBAAuB,QACzCyH,IAGJvL,KAAK,UACLG,MAAO,CAAE8D,SAAU,WAElBsH,EAVH,sB,+LCpGFR,EAAYC,IAAZD,QAER,SAASyB,EAAUC,EAAKC,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAcN,GAgBhB,IAAIO,EAAqB,WAAO,IAAD,EACjBzM,mBAAS,sBADQ,mBAC3B4K,GAD2B,aAET5K,mBAAS,GAFA,gCAGCA,mBAAS,KAHV,mBAG/B8K,EAH+B,KAGlBC,EAHkB,OAKH/K,mBAAS,IALN,mBAK/B0M,EAL+B,KAKpBC,EALoB,KAOhC9H,EAAa,uCAAG,gCAAAxI,EAAA,6DACdK,EAAS,CACX4G,UAAWlG,MAAMmG,IAAY,sBAAuB,SAFpC,SAIDqJ,YAAqBlQ,GAJpB,OAIdC,EAJc,OAOdkQ,EACFhO,IACAzB,MAAMmG,IAAY,sBAAuB,IADzC1E,YAKAzB,MAAMT,EAAM,iBAAkB,kCAChCgQ,EAAcE,GACd5P,QAAQC,IAAI,yCAAYP,GACxBM,QAAQC,IAAI,oBAAW2P,GAhBL,2CAAH,qDAmBjBpL,qBAAU,WACRoD,MACC,CAACiG,IAEJ,IAAMI,EAAQ,CACZC,KAAM,QACNC,OAAQ,YACRC,aAAc,SAACC,EAAWC,GACxB,IAAIM,EAAY,uCAAG,8BAAAxP,EAAA,6DACbsC,EAAYvB,MAAMkO,EAAM,OAAQ,sBACpCV,EAAOjM,GACPoM,EAAgBO,IACZG,EAAW,IAAIC,UACVC,IAAI,YAAahN,GAC1B8M,EAASE,IAAI,OAAQL,GACrBG,EAASE,IACP,YACAvO,MAAMmG,IAAY,sBAAuB,SAT1B,SAWXuJ,YAAmBrB,GAXR,OAYjB/F,YAAW,WACTb,MACC,KAdc,4CAAH,qDAmChB,OAlBkB,uCAAG,8BAAAxI,EAAA,uDACb0Q,EACU,eAAdzB,EAAK7L,MAAuC,cAAd6L,EAAK7L,OAEnCnB,IAAQqD,MAAM,gDAAmB,IAE7BqL,EAAS1B,EAAK2B,KAAO,KAAO,KAAO,IAEvC3O,IAAQqD,MAAM,4CAAe,GAE3BqL,GAAUD,IACZd,EAAUX,GAAM,SAACoB,GAAD,OAAeC,EAAcD,MAC7Cb,KAZiB,2CAAH,oDAelBqB,IAGO,GAETpB,gBAAgB,EAEhBhM,SA3CY,SA2CHvB,GACYA,EAAK+M,KAAhBS,SAqCZ,OACE,kBAAC,IAAD,CAAK1J,OAAQ,GAAIC,QAAQ,SAAS1C,MAAO,CAAEC,MAAO,SAChD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKD,MAAO,CAAE8D,SAAU,WAAxB,wEA9BoB,WACxB,IAAMyJ,EACJ,6BACE,kBAAC,IAAD,MADF,6BACwB,6BADxB,0BAIF,OACE,kBAAC,IAAD,CAAKvN,MAAO,CAAEC,MAAO,QAASuN,OAAQ,UACpC,kBAAC5C,EAAD,iBACMU,EADN,CAEEtL,MAAO,CACLC,MAAO,QACPuN,OAAQ,QACRC,QAAS,IACTC,OAAQ,OAGTlQ,UAAU,GAAIsP,GACbS,EAEA,yBAAKI,IAAKb,EAAW7M,MAAO,QAASuN,OAAQ,QAASI,IAAI,OAW7DC,O,q5ECvHD1O,OAAWC,oCAAXD,OAEGE,wBAA0B,SAACC,GACpC,IACIC,EADW,CAAC,GAAI,qBAAO,gBACAC,KAAI,SAACC,GAC9B,OACE,2DAACN,OAAD,CAAQO,IAAKD,EAAME,MAAOF,GACd,KAATA,EAAc,eAAOA,MAK5B,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAASG,QAAQ,EAAMC,KAAK,aAC5B,2DAAC,oCAAD,CAAKC,MAAM,OAAX,IAAmB,2BAAnB,KACA,2DAAC,oCAAD,CACEC,aAAa,GACbC,MAAO,CAAEC,MAAO,KAChBC,SAAU,SAACP,GACTL,EAAEK,KAGHJ,GAEH,2DAAC,oCAAD,CAASK,QAAQ,EAAMC,KAAK,eASvBiO,kBAAoB,SAApBA,oBAA0B,cAEX1N,oDAAS,IAFE,kLAE9BC,MAF8B,cAEvBC,SAFuB,yBAKJF,oDAAS,IALL,mLAK9BG,SAL8B,cAKpBC,aALoB,yBAMIJ,oDAAS,IANb,mLAM9BK,aAN8B,cAMhBC,iBANgB,yBAOMN,oDAAS,IAPf,mLAO9BO,cAP8B,cAOfC,kBAPe,yBAQIR,oDAAS,IARb,oLAQ9BS,aAR8B,eAQhBC,iBARgB,2BAUAV,oDAAS,KAVT,qLAU9BW,WAV8B,eAUlBC,eAVkB,2BAWAZ,oDAAS,UAXT,qLAW9Ba,WAX8B,eAWlBC,eAXkB,2BAYUd,oDAAS,IAZnB,qLAY9Be,gBAZ8B,eAYbC,oBAZa,2BAaAhB,oDAAS,IAbT,qLAa9BiB,WAb8B,eAalBC,eAbkB,2BAeAlB,oDAAS,KAfT,qLAe9BmB,WAf8B,eAelBC,eAfkB,2BAgBQpB,oDAAS,KAhBjB,qLAgB9BqB,eAhB8B,eAgBdC,mBAhBc,eAkB/BiE,QAAUC,uDAlBqB,SAoBpBjE,WApBoB,4XAoBnC,sKAAAlF,EAAA,6DACMK,EAAS,CACXyE,WAAYA,WACZhB,SAAUA,SACVE,aAAcA,aACdE,cAAeA,cACfE,aAAcA,aACdE,WAAYA,WACZE,WAAYA,WACZE,gBAAiBA,gBACjBE,WAAYA,YAVhB,SAYwBO,oDAAe9E,GAZvC,OAYMC,EAZN,OAcEuD,SAAS9C,yCAAMT,EAAM,aAAc,KACnC2E,mBAAmBlE,yCAAMT,EAAM,kBAfjC,4CApBmC,sBAsCnC,IAAIgR,UAAyC,GAA7B5P,SAASI,KAAKyP,aAE9BnM,sDAAU,WAIR,MAHmB,KAAfN,aACFA,WAAa,KAEXO,SAASP,YAAc,GACzB7C,oCAAQqD,MAAM,oCACdP,eAAe,MAENM,SAASP,YAAcO,SAASL,iBACzC/C,oCAAQqD,MAAM,6CACdP,eAAeC,iBAGfK,SAASP,YAAc,GACvBO,SAASP,YAAcO,SAASL,iBAEhC/C,oCAAQqD,MAAM,uCACdzB,SAAS,UAGXqB,aACC,CAACJ,WAAYF,WAAYV,gBAE5B,IAAIqB,gBAAkB,SAAlBA,gBAAmBC,aACrB,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACEC,YAAaC,qDAAa,GAAD,OAAIF,YAAJ,MACzBtC,MAAOyC,KAAKH,aACZ/B,SAAU,kBAACmC,OACT,IAAIC,UAAYD,MAAME,OAAO5C,MAC7ByC,KAAK,OAAD,OAAQH,aAAZG,CAA2BE,eAIjC,2DAAC,oCAAD,CAAS1C,QAAQ,EAAMC,KAAK,eAK9B2C,mBAAqB,WACvB,OACE,2DAAC,oCAAD,CAAKC,OAAQ,GAAIC,QAAQ,UACvB,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACGV,gBAAgB,YAChBA,gBAAgB,gBAChBA,gBAAgB,mBAChBA,gBAAgB,iBAEnB,2DAAC,oCAAD,KACGA,gBAAgB,cAChBA,gBAAgB,cAChBW,6DAAmB,GAAI/B,mBACvBvB,wBAAwBiC,gBACzB,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACEzB,KAAK,UACL+C,QAAS,WACPjB,aAHJ,iCAgCNkB,QAAU,CACd,CACEC,MAAO,iBACPC,UAAW,MAEb,CACED,MAAOX,qDAAY,UACnBY,UAAW,CAAC,SAAU,aAExB,CACED,MAAOX,qDAAY,cACnBY,UAAW,CAAC,SAAU,iBAExB,CACED,MAAOX,qDAAY,eACnBY,UAAW,CAAC,SAAU,kBAExB,CACED,MAAOX,qDAAY,cACnBY,UAAW,CAAC,SAAU,iBAExB,CACED,MAAOX,qDAAY,YACnBY,UAAW,CAAC,SAAU,eAExB,CACED,MAAOX,qDAAY,YACnBY,UAAW,CAAC,SAAU,eAExB,CACED,MAAOX,qDAAY,YACnBY,UAAW,CAAC,SAAU,eAExB,CACED,MAAOX,qDAAY,cACnBzC,IAAK,eACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAE/B,IAAIC,EAAY5F,yCAAM0F,EAAQ,sBAAuB,IAQrD,OACE,2DAAC,qCAAD,CACExD,IAAI,oBACJ2D,QAAQ,QACRC,UAAU,OACVR,MAAOX,qDAAY,cACnBoB,QAXA,2DAAC,oCAAD,KACE,sEAAoB,KAAdH,EAAmB,uCAAWA,KAYtC,2DAAC,qCAAD,CAAQI,KAAM,2DAAC,kDAAD,WAKtB,CACEV,MAAOX,qDAAY,YACnBzC,IAAK,aACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAE/B,IAAIC,EAAY5F,yCAAM0F,EAAQ,oBAAqB,IAQnD,OACE,2DAAC,qCAAD,CACExD,IAAI,oBACJ2D,QAAQ,QACRC,UAAU,OACVR,MAAOX,qDAAY,YACnBoB,QAXA,2DAAC,oCAAD,KACE,sEAAoB,KAAdH,EAAmB,uCAAWA,KAYtC,2DAAC,qCAAD,CAAQI,KAAM,2DAAC,kDAAD,WAKtB,CACEV,MAAO,2BACPpD,IAAK,WACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAC/B,IAAIM,EAAWjG,yCAAM0F,EAAQ,kBAAmB,IAChD,OACE,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACExD,IAAI,eACJG,KAAK,UACL+C,QAAO,+SAAE,oKAAAnG,EAAA,6DACHK,EAAS,CACX2G,SAAUA,EACVpC,WAAY,sBAHP,SAKU4M,oDAAmBnR,GAL7B,cAMP6E,WANO,4CAHX,sBAcA,2DAAC,qCAAD,CACEjC,IAAI,cACJG,KAAK,SACL+C,QAAO,+SAAE,oKAAAnG,EAAA,6DACHK,EAAS,CACX2G,SAAUA,EACVpC,WAAY,gBAHP,SAKU4M,oDAAmBnR,GAL7B,cAMP6E,WANO,4CAHX,mBAmBR,CACEmB,MAAO,2BACPpD,IAAK,kBACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAI/B,OACE,2DAAC,qCAAD,CACEzD,IAAI,oBACJ2D,QAAQ,QACRC,UAAU,OACVR,MAAO,uCACPS,QARK,2DAAC,oCAAD,4FAUL,2DAAC,qCAAD,CACEX,QAAS,WAEPe,iDAAWuK,WAAWC,aAAe3Q,yCAAM0F,EAAQ,MAEnD4C,YAAW,WACTH,QAAQ/H,QAAQ,mCACf,OAPP,oBAkBNiG,gBAAkB,WACpB,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAK7D,MAAO,CAAE8D,SAAU,WAAxB,UAAuCrC,eAAvC,WACA,2DAAC,oCAAD,CAAS5B,KAAK,aACd,2DAAC,qCAAD,CACE+C,QAAS,WACP,IAAImB,EAASjC,SAASP,YAAc,EACpCC,eAAeuC,EAAO7E,cAH1B,sBAQA,2DAAC,oCAAD,CAASW,KAAK,aACd,2DAAC,qCAAD,CACE+C,QAAS,WACP,IAAImB,EAASjC,SAASP,YAAc,EACpCC,eAAeuC,EAAO7E,cAH1B,sBAQA,2DAAC,oCAAD,CAASW,KAAK,aACd,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACEqC,YAAY,qBACZlC,MAAO,CAAEC,MAAO,SAChBJ,KAAK,SACLF,MAAO4B,WACPrB,SAAU,SAAC8D,GACT,IAAI1B,EAAY0B,EAAEzB,OAAO5C,MACzB6B,eAAec,OAIrB,2DAAC,oCAAD,CAASzC,KAAK,eAKpB,OACE,2DAAC,oCAAD,CACE4C,OAAQ,GACRzC,MAAO,CACLC,MAAO,OACPmO,UAAWL,UACXM,QAAS,OACTC,eAAgB,WAGlB,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAK7L,OAAQ,GAAIC,QAAQ,UACtB,IADH,wHAEwC,KAEvCF,qBACD,2DAAC,oCAAD,CAAS3C,KAAK,aAAaD,QAAQ,IAClCiE,kBACD,2DAAC,qCAAD,CACEI,OAAQ,SAACf,GAAD,OAAY1F,yCAAM0F,EAAQ,KAAM,MACxCgB,WAAY7D,MACZwC,QAASA,QACTsB,WAAY,CAAEC,kBAAkB,GAChCC,aAAc,SAACnB,GACb,OAAO1F,6CAAU,eAAMA,yCAAM0F,EAAQ,sBACjC,qBACA,yBAGR,2DAAC,oCAAD,CAASrD,KAAK,aAAaD,QAAQ,Q,89EC1YnCT,OAAWC,oCAAXD,OAIJgD,aAAe,CAEjBgM,aAAc,iBACdI,cAAe,iBACfrI,YAAa,eACbC,cAAe,2BACfC,YAAa,eACbC,aAAc,2BACdG,gBAAiB,qBACjBC,kBAAmB,eACnBF,sBAAuB,2BACvBY,WAAY,eAGZT,gBAAiB,2BACjBC,6BAA8B,2BAC9BG,uBAAwB,2BAGxBF,aAAc,eACdC,aAAc,2BACdE,wBAAyB,2BACzBC,0BAA2B,2BAC3BC,kBAAmB,2BACnBC,qBAAsB,2BACtBsH,iBAAkB,kCAGTnP,wBAA0B,SAACC,GACpC,IACIC,EADW,CAAC,GAAI,qBAAO,gBACAC,KAAI,SAACC,GAC9B,OACE,2DAACN,OAAD,CAAQO,IAAKD,EAAME,MAAOF,GACd,KAATA,EAAc,eAAOA,MAK5B,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAASG,QAAQ,EAAMC,KAAK,aAC5B,2DAAC,oCAAD,CAAKC,MAAM,OAAX,IAAmB,2BAAnB,KACA,2DAAC,oCAAD,CACEC,aAAa,GACbC,MAAO,CAAEC,MAAO,KAChBC,SAAU,SAACP,GACTL,EAAEK,KAGHJ,GAEH,2DAAC,oCAAD,CAASK,QAAQ,EAAMC,KAAK,eASvB4O,sBAAwB,SAAxBA,wBAA8B,cAEfrO,oDAAS,IAFM,kLAElCC,MAFkC,cAE3BC,SAF2B,yBAIRF,oDAAS,sBAJD,mLAIlCG,SAJkC,cAIxBC,aAJwB,yBAOAJ,oDAAS,IAPT,mLAOlC+N,aAPkC,cAOpBO,iBAPoB,yBAQItO,oDAAS,sBARb,mLAQlCuO,eARkC,cAQlBC,mBARkB,yBAUJxO,oDAAS,KAVL,oLAUlCmB,WAVkC,eAUtBC,eAVsB,2BAWIpB,oDAAS,KAXb,qLAWlCqB,eAXkC,eAWlBC,mBAXkB,wBAaxBC,WAbwB,4XAavC,sKAAAlF,EAAA,6DACMK,EAAS,CACXqR,aAAcA,aACd5M,WAAYA,WACZoN,eAAgBA,gBAJpB,SAMwBE,sDAAuB/R,GAN/C,OAMMC,EANN,OAQEuD,SAAS9C,yCAAMT,EAAM,aAAc,KACnC2E,mBAAmBlE,yCAAMT,EAAM,kBATjC,4CAbuC,sBAyBvC,IAAIgR,UAAyC,GAA7B5P,SAASI,KAAKyP,aAG9BnM,sDAAU,WACR,IAAIiN,EAAQC,aAAY,WACtB,IAAIC,EAAWxR,yCAAMmG,iDAAY,0BAA2B,IACvDnG,6CAAU2Q,aAAca,IAC3BN,iBAAiBM,KAElB,KACH,OAAO,WACLlR,OAAOmR,cAAcH,MAEtB,IAEHjN,sDAAU,YACY,gUAAG,sKAAApF,EAAA,yDAChBe,6CAAU,GAAI2Q,cADE,uBAEfrR,EAAS,CAAEoS,OAAQf,cAFJ,SAGEgB,oDAAqBrS,GAHvB,OAGfsS,EAHe,OAInB5O,aAAahD,yCAAM4R,EAAU,0BAA2B,+BAJrC,sBAMnB5O,aAAa,4BANM,OAQrBmB,WARqB,4CAAH,qDAUpB0N,KACC,CAAClB,eAGJtM,sDAAU,WAIR,MAHmB,KAAfN,aACFA,WAAa,KAEXO,SAASP,YAAc,GACzB7C,oCAAQqD,MAAM,oCACdP,eAAe,MAENM,SAASP,YAAcO,SAASL,iBACzC/C,oCAAQqD,MAAM,6CACdP,eAAeC,iBAGfK,SAASP,YAAc,GACvBO,SAASP,YAAcO,SAASL,iBAEhC/C,oCAAQqD,MAAM,uCACdzB,SAAS,UAGXqB,aACC,CAACJ,WAAYoN,iBAEhB,IAAIW,uBAAyB,SAAzBA,uBAA0BrN,aAC5B,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACEC,YAAaC,aAAa,GAAD,OAAIF,cAC7BtC,MAAOyC,KAAKH,aACZ/B,SAAU,kBAACmC,OACT,IAAIC,UAAYD,MAAME,OAAO5C,MAC7BgE,iDAAWuK,WAAWC,aAAe7L,UAErCF,KAAK,OAAD,OAAQH,aAAZG,CAA2BE,eAIjC,2DAAC,oCAAD,CAAS1C,QAAQ,EAAMC,KAAK,eAK9B0P,2BAA6B,SAA7BA,2BAA8BxG,QAChC,IAAIyG,SAAW,CAAC,GAAI,qBAAO,eAAM,gBAC7BjQ,YAAciQ,SAAShQ,KAAI,SAACC,GAC9B,OACE,2DAACN,OAAD,CAAQO,IAAKD,EAAME,MAAOF,GACd,KAATA,EAAc,eAAOA,MAK5B,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAASG,QAAQ,EAAMC,KAAK,aAC5B,2DAAC,oCAAD,CAAKC,MAAM,OAAX,IAAmB,2BAAnB,KACA,2DAAC,oCAAD,CACEC,aAAa,qBACbC,MAAO,CAAEC,MAAO,KAChBC,SAAU,kBAACP,OACTyC,KAAK,OAAD,OAAQ2G,QAAZ3G,CAAsBzC,SAGvBJ,aAEH,2DAAC,oCAAD,CAASK,QAAQ,EAAMC,KAAK,eAK9B2C,mBAAqB,WACvB,OACE,2DAAC,oCAAD,CAAKC,OAAQ,GAAIC,QAAQ,UACvB,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAK1C,MAAO,CAAE8D,SAAU,WACrBwL,uBAAuB,gBACxB,2DAAC,oCAAD,CAASzP,KAAK,aACd,2DAAC,oCAAD,CAAKC,MAAM,MAAME,MAAO,CAAE8D,SAAU,WAApC,4BAGA,2DAAC,oCAAD,CAAK9D,MAAO,CAAE8D,SAAU,WAAxB,IAAsCvD,SAAtC,KACA,2DAAC,oCAAD,CAASV,KAAK,aACb0P,2BAA2B,kBAC5B,2DAAC,qCAAD,CACE1P,KAAK,UACL+C,QAAS,WACPjB,aAHJ,4BAQA,2DAAC,oCAAD,CAAS9B,KAAK,aACd,2DAAC,qCAAD,CACEA,KAAK,UACL+C,QAAS,WACP6M,sDAA2B,MAH/B,wDAqCJ5M,QAAU,CACd,CACEC,MAAOX,aAAY,YACnBY,UAAW,CAAC,SAAU,gBAExB,CACED,MAAOX,aAAY,YACnBY,UAAW,CAAC,SAAU,gBAExB,CACED,MAAOX,aAAY,cACnBY,UAAW,CAAC,SAAU,kBAExB,CACED,MAAOX,aAAY,kBACnBY,UAAW,CAAC,SAAU,sBAExB,CACED,MAAOX,aAAY,sBACnBY,UAAW,CAAC,SAAU,0BAExB,CACED,MAAOX,aAAY,WACnBY,UAAW,CAAC,SAAU,eAExB,CACED,MAAOX,aAAY,uBACnBY,UAAW,CAAC,SAAU,2BAExB,CACED,MAAOX,aAAY,6BACnBY,UAAW,CAAC,SAAU,iCAExB,CACED,MAAOX,aAAY,gBACnBY,UAAW,CAAC,SAAU,oBAExB,CACED,MAAO,2BACPpD,IAAK,mBACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAuD/B,OACE,2DAAC,qCAAD,CACEzD,IAAI,mBACJ2D,QAAQ,QACRC,UAAU,OACVR,MAAOX,aAAY,iBACnBoB,QA1Dc,WAChB,IAAImM,EAAmB,SAAC3G,GACtB,IAAI4G,EAAW,iBAAa5G,GACxB6G,EAAapS,yCAAM0F,EAAQyM,EAAa,wCAE5C,OAAOnS,6CAAU,uCAAUoS,GACzB,2DAAC,oCAAD,CAAKlQ,IAAKqJ,IAEV,2DAAC,oCAAD,CAAKrJ,IAAKqJ,GACR,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAK/I,MAAO,CAAE8D,SAAU,WACrB3B,aAAa4G,KAGlB,2DAAC,oCAAD,KACE,kEAAK/I,MAAO,CAAE8D,SAAU,WAAa8L,KAGzC,2DAAC,oCAAD,SAKJC,EAAoBzK,OAAOC,KAAKlD,cAAc3C,KAChD,SAACuJ,EAAgB5F,GACf,OAAOA,EAAQ,GAAK,EAClBuM,EAAiB3G,GAEjB,2DAAC,oCAAD,CAAKrJ,IAAKqJ,OAIZ+G,EAAqB1K,OAAOC,KAAKlD,cAAc3C,KACjD,SAACuJ,EAAgB5F,GACf,OAAOA,EAAQ,GAAK,EAClBuM,EAAiB3G,GAEjB,2DAAC,oCAAD,CAAKrJ,IAAKqJ,OAKhB,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,KAAM8G,GACN,2DAAC,oCAAD,CAAShQ,KAAK,aACd,2DAAC,oCAAD,KAAMiQ,IAUCC,IAET,2DAAC,qCAAD,CAAQvM,KAAM,2DAAC,kDAAD,WAKtB,CAEEV,MAAO,2BACPpD,IAAK,WACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAChB3F,yCAAM0F,EAAQ,kBAAmB,IAAhD,IACIQ,EAAYlG,yCAAM0F,EAAQ,mBAAoB,IAGlD,OACE,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACExD,IAAI,eACJG,KAAK,UACL+C,QAAO,+SAAE,oKAAAnG,EAAA,6DACHK,EAAS,CACXoS,OAAQf,aACRzK,UAAWA,EACXiL,eAAgB,gBAJX,SAMUqB,sDAAuBlT,GANjC,cAOP6E,WAPO,4CAHX,gBAeA,2DAAC,qCAAD,CACEjC,IAAI,cACJG,KAAK,SACL+C,QAAO,+SAAE,oKAAAnG,EAAA,6DACHK,EAAS,CACXoS,OAAQf,aACRzK,UAAWA,EACXiL,eAAgB,gBAJX,SAMUqB,sDAAuBlT,GANjC,cAOP6E,WAPO,4CAHX,mBAoBR,CACEmB,MAAO,2BACPpD,IAAK,kBACLsD,OAAQ,SAACC,EAAWC,EAAaC,GAM/B,OACE,2DAAC,qCAAD,CACEzD,IAAI,oBACJ2D,QAAQ,QACRC,UAAU,OACVR,MAAOX,aAAY,YACnBoB,QARK,2DAAC,oCAAD,oDAUL,2DAAC,qCAAD,CACEX,QAAO,+SAAE,sKAAAnG,EAAA,6DACHwI,EADG,wTAAAxI,EAAA,MACa,sKAAAA,EAAA,6DACdK,EAAS,CACX4G,UAAWlG,yCAAM0F,EAAQ,mBAAoB,SAF7B,SAIDgC,qDAAyBpI,GAJxB,cAIdC,EAJc,yBAMXS,yCAAMT,EAAM,iBAAkB,mCANnB,2CADb,8DASsBkI,IATtB,OASHmG,EATG,OAUPvM,6DACErB,yCAAM0F,EAAQ,mBAAoB,QAClCkI,GAZK,2CAeTvL,KAAK,UACLG,MAAO,CAAE8D,SAAU,WAjBrB,oBA2BND,gBAAkB,WACpB,OACE,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAK7D,MAAO,CAAE8D,SAAU,WAAxB,UAAuCrC,eAAvC,WACA,2DAAC,oCAAD,CAAS5B,KAAK,aACd,2DAAC,qCAAD,CACE+C,QAAS,WACP,IAAImB,EAASjC,SAASP,YAAc,EACpCC,eAAeuC,EAAO7E,cAH1B,sBAQA,2DAAC,oCAAD,CAASW,KAAK,aACd,2DAAC,qCAAD,CACE+C,QAAS,WACP,IAAImB,EAASjC,SAASP,YAAc,EACpCC,eAAeuC,EAAO7E,cAH1B,sBAQA,2DAAC,oCAAD,CAASW,KAAK,aACd,2DAAC,oCAAD,KACE,2DAAC,qCAAD,CACEqC,YAAY,qBACZlC,MAAO,CAAEC,MAAO,SAChBJ,KAAK,SACLF,MAAO4B,WACPrB,SAAU,SAAC8D,GACT,IAAI1B,EAAY0B,EAAEzB,OAAO5C,MACzB6B,eAAec,OAIrB,2DAAC,oCAAD,CAASzC,KAAK,eAKpB,OACE,2DAAC,oCAAD,CACE4C,OAAQ,GACRzC,MAAO,CACLC,MAAO,OACPmO,UAAWL,UACXM,QAAS,OACTC,eAAgB,WAGlB,2DAAC,oCAAD,KACE,2DAAC,oCAAD,CAAK7L,OAAQ,GAAIC,QAAQ,SAAS1C,MAAO,CAAE8D,SAAU,WAArD,0EAGA,2DAAC,oCAAD,CAAKrB,OAAQ,GAAIC,QAAQ,SAAS1C,MAAO,CAAE8D,SAAU,WAArD,4FAGA,2DAAC,oCAAD,CACErB,OAAQ,GACRC,QAAQ,SACR1C,MAAO,CAAE8D,SAAU,SAAUhE,MAAO,QAHtC,oGAOC0C,qBACD,2DAAC,oCAAD,CAAS3C,KAAK,aAAaD,QAAQ,IAClCiE,kBACD,2DAAC,qCAAD,CACEI,OAAQ,SAACf,GAAD,OAAY1F,yCAAM0F,EAAQ,KAAM,MACxCgB,WAAY7D,MACZwC,QAASA,QACTsB,WAAY,CAAEC,kBAAkB,KAElC,2DAAC,oCAAD,CAASvE,KAAK,aAAaD,QAAQ,Q,4FCpiB3C,4uBAKO,IAAI/C,EAAS,GAGTM,EAAW,IAOX8S,EAAkB,4BAElBC,EAAyB,kCAEzBC,EAA6B,qCAI7BC,EAAoB,yBAGpBC,EAAiB,sBACjBC,EAAyB,6BAEzBC,EAA2B,kCAE3BC,EAAyB,iCAEzBC,EAAqB,8BAErBC,EAA2B,kCAE3BC,EAAuB,+BAEvBC,EAAkB,2BAElBC,EAAyB,iCAEzBC,EAAyB,iCAOzBC,EAAkB,8BAClBC,EAAuB,6BACvBC,EAAiB,sCACjBC,EAAqB,4BAGrBC,EAAe,oCAGflS,EAAkC,gB,gCC3D7C,kCAAO,IAAI0E,EAAkB,CAC3ByN,UAAW,CAAE1N,UAAW,QACxBwK,WAAY,CAAEC,aAAc,M,iRCatBnI,EAAaC,IAAbD,SACA7G,EAAWC,IAAXD,OAcGgD,EAAe,CACxBkP,UAAW,2BACXC,cAAe,2BACfC,cAAe,2BACfC,eAAgB,2BAChBC,cAAe,2BACfC,eAAgB,2BAChBC,YAAa,2BACbC,YAAa,2BACbC,cAAe,2BACfC,YAAa,2BACbC,iBAAkB,2BAClBC,YAAa,4BAGJrP,EAAqB,SAACsP,EAAuB3S,GACtD,IAYIC,EAZwB,CAC1B,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,IAEsCC,KAAI,SAACC,GAC3C,OACE,kBAACN,EAAD,CAAQO,IAAKD,EAAME,MAAOF,GACf,IAARA,EAAa,eAAOA,MAK3B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASI,KAAK,aACd,kBAAC,IAAD,CAAKC,MAAM,OAAX,IAAmBqC,EAAY,eAA/B,KACA,kBAAC,IAAD,CACEpC,aAAckS,EACdjS,MAAO,CAAEC,MAAO,KAChBC,SAAU,SAACP,GACTL,EAAEK,KAGHJ,GAEH,kBAAC,IAAD,CAASM,KAAK,eAKTqS,EAAqB,WAAO,IAAD,EACL9R,mBAAS,IADJ,mBAC/BG,EAD+B,KACrBC,EADqB,OAEGJ,mBAAS,IAFZ,mBAE/BK,EAF+B,KAEjBC,EAFiB,OAGGN,mBAAS,IAHZ,mBAG/BS,EAH+B,KAGjBC,EAHiB,OAIKV,mBAAS,gBAJd,mBAI/BO,EAJ+B,KAIhBC,EAJgB,OAKGR,mBAAS,IALZ,mBAK/B+R,EAL+B,KAKjBC,EALiB,OAMKhS,mBAAS,IANd,mBAM/BiS,EAN+B,KAMhBC,EANgB,OAODlS,mBAAS,IAPR,mBAO/BW,EAP+B,KAOnBC,EAPmB,OAQDZ,mBAAS,IARR,mBAQ/Ba,EAR+B,KAQnBC,EARmB,OASGd,mBAAS,IATZ,mBAS/BmS,EAT+B,KASjBC,EATiB,QAUDpS,mBAAS,IAVR,qBAU/BqS,GAV+B,MAUnBC,GAVmB,MA0BhC3E,GAAyC,GAA7B5P,SAASI,KAAKyP,aAgU9B,OACE,kBAAC,IAAD,CACEhO,MAAO,CACLC,MAAO,OACPmO,UAAWL,GACXM,QAAS,OACTC,eAAgB,SAChBqE,WAAY,WAhEd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE3S,MAAO,CACLqO,QAAS,OACTC,eAAgB,SAChBqE,WAAY,YAGhB,kBAAC,IAAD,CACE3S,MAAO,CACLqO,QAAS,OACTC,eAAgB,SAChBqE,WAAY,WAjRpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS/S,QAAQ,IACjB,kBAAC,IAAD,CACEsC,YAAaC,EAAY,UACzBxC,MAAOY,EACPL,SAAU,SAACmC,GACT,IACIC,EAAYD,EAAME,OAAO5C,MAE7B,GAAI2C,EAAU5E,OAHI,IAGkB,CAClC8C,EAAa,IACb,IAAIgJ,EAAS,CACXjG,QACE,kBAAC,IAAD,KACGpB,EAAY,UADf,6BAPY,IAOZ,WAIFsH,SAAU,GAEZ/K,IAAQqD,MAAMyH,QAEdhJ,EAAa8B,MAKnB,kBAAC,IAAD,CAAS1C,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsC,YAAaC,EAAY,cACzBxC,MAAOkB,EACPX,SAAU,SAACmC,GACT,IACIC,EAAYD,EAAME,OAAO5C,MAE7B,GAAI2C,EAAU5E,OAHI,IAGkB,CAClCoD,EAAiB,IACjB,IAAI0I,EAAS,CACXjG,QACE,kBAAC,IAAD,KACGpB,EAAY,cADf,6BAPY,IAOZ,WAIFsH,SAAU,GAEZ/K,IAAQqD,MAAMyH,QAEd1I,EAAiBwB,OAKzB,kBAAC,IAAD,CAAS1C,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsC,YAAaC,EAAY,cACzBxC,MAAOwS,EACPjS,SAAU,SAACmC,GACT,IACIC,EAAYD,EAAME,OAAO5C,MAE7B,GAAI2C,EAAU5E,OAHI,IAGkB,CAClC0U,EAAiB,IACjB,IAAI5I,EAAS,CACXjG,QACE,kBAAC,IAAD,KACGpB,EAAY,cADf,6BAPY,IAOZ,WAIFsH,SAAU,GAEZ/K,IAAQqD,MAAMyH,QAEd4I,EAAiB9P,OAKzB,kBAAC,IAAD,CAAS1C,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsC,YAAaC,EAAY,YACzBxC,MAAOoB,EACPb,SAAU,SAACmC,GACT,IACIC,EAAYD,EAAME,OAAO5C,MAE7B,GAAI2C,EAAU5E,OAHI,IAGkB,CAClCsD,EAAe,IACf,IAAIwI,EAAS,CACXjG,QACE,kBAAC,IAAD,KACGpB,EAAY,YADf,6BAPY,IAOZ,WAIFsH,SAAU,GAEZ/K,IAAQqD,MAAMyH,QAEdxI,EAAesB,OAKvB,kBAAC,IAAD,CAAS1C,QAAQ,KA6Kb,kBAAC,IAAD,CAASA,QAAQ,EAAMC,KAAK,aAvKlC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASD,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsC,YAAaC,EAAY,cACzBxC,MAAOc,EACPP,SAAU,SAACmC,GACT,IACIC,EAAYD,EAAME,OAAO5C,MAE7B,GAAI2C,EAAU5E,OAHI,IAGkB,CAClCgD,EAAiB,IACjB,IAAI8I,EAAS,CACXjG,QACE,kBAAC,IAAD,KACGpB,EAAY,cADf,6BAPY,IAOZ,WAIFsH,SAAU,GAEZ/K,IAAQqD,MAAMyH,QAEd9I,EAAiB4B,OAKzB,kBAAC,IAAD,CAAS1C,QAAQ,IACjB,kBAAC,IAAD,KAAM+C,EAAmB,eAAM/B,IAC/B,kBAAC,IAAD,CAAShB,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsC,YAAaC,EAAY,eACzBxC,MAAO0S,EACPnS,SAAU,SAACmC,GACT,IACIC,EAAYD,EAAME,OAAO5C,MAE7B,GAAI2C,EAAU5E,OAHI,IAGkB,CAClC4U,EAAkB,IAClB,IAAI9I,EAAS,CACXjG,QACE,kBAAC,IAAD,KACGpB,EAAY,eADf,6BAPY,IAOZ,WAIFsH,SAAU,GAEZ/K,IAAQqD,MAAMyH,QAEd8I,EAAkBhQ,OAK1B,kBAAC,IAAD,CAAS1C,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsC,YAAaC,EAAY,YACzBxC,MAAOsB,EACPf,SAAU,SAACmC,GACT,IACIC,EAAYD,EAAME,OAAO5C,MAE7B,GAAI2C,EAAU5E,OAHI,IAGkB,CAClCwD,EAAe,IACf,IAAIsI,EAAS,CACXjG,QACE,kBAAC,IAAD,KACGpB,EAAY,YADf,6BAPY,IAOZ,WAIFsH,SAAU,GAEZ/K,IAAQqD,MAAMyH,QAEdtI,EAAeoB,OAKvB,kBAAC,IAAD,CAAS1C,QAAQ,MAQnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,QAAX,IAAoBqC,EAAY,cAAhC,KACA,kBAAC6D,EAAD,CACEsD,SALY,CAAED,QAAS,GAMvB1J,MAAO4S,EACPrS,SAAU,SAACmC,GACT,IACIC,EAAYD,EAAME,OAAO5C,MAE7B,GAAI2C,EAAU5E,OAHI,IAGkB,CAClC8U,EAAiB,IACjB,IAAIhJ,EAAS,CACXjG,QACE,kBAAC,IAAD,KACGpB,EAAY,cADf,6BAPY,IAOZ,WAIFsH,SAAU,GAEZ/K,IAAQqD,MAAMyH,QAEdgJ,EAAiBlQ,OA6DrB,kBAAC,IAAD,CAAS1C,QAAQ,IAnDrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,QAAX,IAAoBqC,EAAY,YAAhC,KACA,kBAAC6D,EAAD,CACEsD,SALY,CAAED,QAAS,GAMvB1J,MAAO8S,GACPvS,SAAU,SAACmC,GACT,IACIC,EAAYD,EAAME,OAAO5C,MAE7B,GAAI2C,EAAU5E,OAHI,IAGkB,CAClCgV,GAAe,IACf,IAAIlJ,EAAS,CACXjG,QACE,kBAAC,IAAD,KACGpB,EAAY,YADf,6BAPY,IAOZ,WAIFsH,SAAU,GAEZ/K,IAAQqD,MAAMyH,QAEdkJ,GAAepQ,OAgCnB,kBAAC,IAAD,CAAS1C,QAAQ,IACjB,kBAAC,IAAD,CACEC,KAAK,UACLkG,SAAsB,IAAZxF,EACVqC,QAAO,sBAAE,8BAAAnG,EAAA,6DACHK,EAAS,CACXyD,SAAUA,EACVE,aAAcA,EACdI,aAAcA,EACdF,cAAeA,EACfwR,aAAcA,EACdE,cAAeA,EACftR,WAAYA,EACZE,WAAYA,EACZsR,aAAcA,EACdE,WAAYA,IAXP,SAaUG,YAAgB9V,GAb1B,OAaHC,EAbG,OAcHS,UAAU,IAAKA,MAAMT,EAAM,WAE7B2B,IAAQC,KAAK,4BA/TzB6B,EAAa,IACbE,EAAiB,IACjBI,EAAiB,IACjBF,EAAkB,IAClBwR,EAAiB,IACjBA,EAAiB,IACjBE,EAAkB,IAClBtR,EAAe,IACfE,EAAe,IACfsR,EAAiB,IACjBE,GAAe,KAqSE,4CAqBI,IAAZnS,EAAiB,mDAAa,iC,gICzZvBsS,QACW,cAA7B/U,OAAOgV,SAASC,UAEe,UAA7BjV,OAAOgV,SAASC,UAEhBjV,OAAOgV,SAASC,SAASC,MACvB,2D,iKCbKC,EAAuB,uCAAG,8BAAAxW,EAAA,6DAC/BK,EAAS6G,IAAU,UADY,SAElBuP,YAAepW,GAFG,UAE/BC,EAF+B,QAG/BS,UAAU,IAAKA,MAAMT,EAAM,SAHI,yCAI1B,GAJ0B,iCAM3B,GAN2B,2CAAH,qDASvBoW,EAAwB,uCAAG,8BAAA1W,EAAA,6DAChCK,EAAS6G,IAAU,WADa,SAEnByP,YAAgBtW,GAFG,UAEhCC,EAFgC,QAGhCS,UAAU,IAAKA,MAAMT,EAAM,SAHK,yCAI3B,GAJ2B,iCAM5B,GAN4B,2CAAH,qD,2DCGxBsW,GAHSxI,IAAZD,QAG4B,WAAO,IAAD,EACHxK,mBAAS,IADN,gCAErBA,mBAAS,uBAFY,gCAGbA,mBAAS,IAHI,gCAIHA,mBAAS,KAJN,gCAMOA,mBAAS,SANhB,mBAMnCgL,EANmC,KAMjBC,EANiB,KAQpC1F,EAAUC,cAEVX,EAAa,uCAAG,8BAAAxI,EAAA,6DACdK,EAAS,CACX4G,UAAWlG,MAAMmG,IAAY,sBAAuB,SAFpC,SAIDuB,YAAyBpI,GAJxB,OAIdC,EAJc,OAMlBsO,EAAqB7N,MAAMT,EAAM,iBAAkB,uBANjC,2CAAH,qDAUbgR,GADW5P,SAASI,KAAK+U,YACbnV,SAASI,KAAKyP,cAE9BnM,qBAAU,WACRoD,OAGF,IAsCIgI,EACFhO,IACAzB,MAAMmG,IAAY,sBAAuB,IADzC1E,eAKAmM,EA+CF,OACE,kBAAC,IAAD,CAAK3I,OAAQ,GAAIC,QAAQ,SAAS1C,MAAO,CAAEC,MAAO,SAzB9CzC,UAAU,qBAAO4N,GAnBnB,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKpL,MAAO,CAAE8D,SAAU,WAAxB,8CACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEjE,KAAK,UACL+C,QAAS,WACP+C,EAAQ/H,QAAQ,0BAElBoC,MAAO,CAAE8D,SAAU,WALrB,wBAmBF,kBAAC,IAAD,CAAK9D,MAAO,CAAEC,MAAO,SACnB,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE5B,KAAM4O,EACN1K,OAAO,SACPvC,MAAO,CAAE8D,SAAU,UACnBjE,KAAK,QAJP,mFAQA,kBAAC,IAAD,MACA,4BACEG,MAAO,CAAEuT,SAAU,OAAQnF,UAAWL,GACtCJ,IAAKV,QCpHTuG,EAAUC,IAAVD,MACAE,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,QAASC,EAAkBF,IAAlBE,OAAQC,EAAUH,IAAVG,MAEtBC,EAAY,WAAO,IAAD,EACS3T,oBAAS,GADlB,mBACtB4T,EADsB,KACTC,EADS,OAGC7T,mBAAS,kBAHV,mBAGtB8T,EAHsB,KAKvBvO,GALuB,KAKbC,eAEd/D,qBAAU,YACK,uCAAG,sBAAApF,EAAA,sEACEwW,IADF,QAEF,GAFE,SAGZtN,EAAQ/H,QAAQ,KAChBc,IAAQC,KAAK,uBAJD,2CAAH,qDAObwV,KACC,IAEHtS,qBAAU,WACRuS,MACC,CAACF,IApBuB,MAsBY9T,oBAAS,GAtBrB,mBAsBtBiU,EAtBsB,KAsBRC,EAtBQ,KAwCvBF,EAAc,WAQhB,OAPI5W,UAAU,iBAAkB0W,GAC9BvO,EAAQ/H,QAAQ,yBACPJ,UAAU,iBAAkB0W,GACrCvO,EAAQ/H,QAAQ,yBACPJ,UAAU,sBAAuB0W,IAC1CvO,EAAQ/H,QAAQ,8BAEX,kBAAC4V,EAAD,4BAcT,OACE,kBAAC,IAAD,CAAQxT,MAAO,CAAEuU,QAAS,IACxB,kBAAC,IAAD,CACEzR,MAAO,kBAAC0R,EAAA,EAAD,MACPC,QAASJ,EACTK,OAAO,eACPC,WAAW,eACXC,UAAU,EACVC,KAAM,WACJlP,EAAQ/H,QAAQ,KAChB0W,GAAiB,IAEnBQ,SAAU,WACRR,GAAiB,KAXrB,8CAgBA,kBAACR,EAAD,CACE9T,MAAO,CACL+U,SAAU,OACVvH,OAAQ,QACRwH,KAAM,GAERC,aAAa,EACbC,UAAWlB,EACXmB,WAAY,WACVlB,GAAgBD,KAGlB,kBAAC,IAAD,CACEoB,MAAM,OACNC,oBAAqB,CAAC,kBACtBC,KAAK,UAEL,kBAAC,IAAKC,KAAN,CACE7V,IAAI,iBACJkD,QAAS,WACP+C,EAAQ/H,QAAQ,2BAHpB,wCAQA,kBAAC,IAAD,CAAS8B,IAAI,YAAYoD,MAAM,8BAC7B,kBAAC,IAAKyS,KAAN,CACE7V,IAAI,iBACJkD,QAAS,WACP+C,EAAQ/H,QAAQ,2BAHpB,wCAQA,kBAAC,IAAK2X,KAAN,CACE7V,IAAI,sBACJkD,QAAS,WACP+C,EAAQ/H,QAAQ,gCAHpB,6BAeF,kBAAC,IAAK2X,KAAN,CACE7V,IAAI,aACJkD,QAAS,WACP0R,GAAiB,KAHrB,8BAUJ,kBAAC,IAAD,CAAQlI,UAAU,eAChB,kBAACsH,EAAD,CACE1T,MAAO,CACLwV,WAAY,OACZC,UAAW,MACXC,gBAAiB,SACjB5R,SAAU,OACV0J,OAAQ,SANZ,kCAYA,kBAACoG,EAAD,CAAS5T,MAAO,CAAE0N,OAAQ,WA9H5B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiI,KAAM,yBACX,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAOA,KAAM,yBACX,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAOA,KAAM,8BACX,kBAAC,EAAD,SA0HF,kBAAC9B,EAAD,CACE7T,MAAO,CACL4V,UAAW,SACX9R,SAAU,OACV4R,gBAAiB,cAJrB,+C,oDChKGG,G,OAAa,WAAO,IAAD,EACKzV,mBAAS,IADd,mBACvB0V,EADuB,KACZC,EADY,OAEG3V,mBAAS,IAFZ,mBAEvB4V,EAFuB,KAEbC,EAFa,OAGmB7V,mBAAS,IAH5B,mBAGvB8V,EAHuB,KAGLC,EAHK,OAIS/V,mBAAS,IAJlB,mBAIvBgW,EAJuB,KAIVC,EAJU,OAMGjW,mBAAS,GANZ,mBAMvBkW,EANuB,KAMbC,EANa,OAOCnW,mBAAS,GAPV,mBAOvBoW,EAPuB,KAOdC,EAPc,OAQ2BrW,mBAAS,GARpC,mBAQDsW,GARC,WAUxB/Q,EAAUC,cAER+Q,EAAcC,uBAAY,SAACC,GAC/BR,EAAgBQ,KACf,IAOCC,EAAW3Y,SAASI,KAAK+U,YACzBvF,EAAY5P,SAASI,KAAKyP,aAC1B+I,EAAYD,EAAW,IACvBE,EAAajJ,EAAY,IAyDzBkJ,EAAiB,WAEnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/U,YAAa,2BACbvC,MAAOmW,EACP5V,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,WAAWuX,KAAK5U,GAClByT,EAAc1T,EAAME,OAAO5C,OAC3B4W,EAAajU,EAAU5E,YAClB,CACLqY,EAAc,IACdQ,EAAa,GACb,IAAI/M,EAAS,CACXjG,QAAS,kBAAC,IAAD,sEACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OArBC,GAqB0B,CACvCqY,EAAc,IACdQ,EAAa,GACb,IAAI/M,EAAS,CACXjG,QAAS,kBAAC,IAAD,0DAzBE,GAyBF,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,iEACbnX,MAAO,CAAEC,MAAO,WAGlB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CAAKC,MAAM,OAAOE,MAAO,CAAE8D,SAAU,WAClCwS,GAEH,kBAAC,IAAD,CAAKxW,MAAM,QAAQE,MAAO,CAAE8D,SAAU,WAAtC,YAOFsT,GAAgB,WAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvX,KAAK,WACLqC,YAAa,eACbvC,MAAOqW,EACP9V,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,uBAAuBuX,KAAK5U,GAC9B2T,EAAa5T,EAAME,OAAO5C,OAC1B8W,EAAYnU,EAAU5E,YACjB,CACLuY,EAAa,IACbQ,EAAY,GACZ,IAAIjN,EAAS,CACXjG,QAAS,kBAAC,IAAD,SAAO,yDAAP,KACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OAtBA,GAsB0B,CACtCuY,EAAa,IACbQ,EAAY,GACZ,IAAIjN,EAAS,CACXjG,QAAS,oEA1BC,GA0BD,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,qDACbnX,MAAO,CAAEC,MAAO,WAGlB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CAAKC,MAAM,OAAOE,MAAO,CAAE8D,SAAU,WAClC0S,GAEH,kBAAC,IAAD,CAAK1W,MAAM,QAAQE,MAAO,CAAE8D,SAAU,WAAtC,YAOFuT,GAAwB,WAE1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEnV,YAAa,qBACbvC,MAAOuW,EACPhW,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,iBAAiBuX,KAAK5U,GACxB6T,EAAqB9T,EAAME,OAAO5C,OAClC+W,EAAyBpU,EAAU5E,YAC9B,CACLyY,EAAqB,IACrBO,EAAyB,GACzB,IAAIlN,EAAS,CACXjG,QAAS,kBAAC,IAAD,SAAO,yDAAP,KACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OArBQ,EAqB0B,CAC9CyY,EAAqB,IACrBO,EAAyB,GACzB,IAAIlN,EAAS,CACXjG,QAAS,oEAzBS,EAyBT,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,6BACbnX,MAAO,CAAEC,MAAO,WAElB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CACEyX,QApCwB,EAqCxBxT,SAAU,GACV7D,MAAO,IACPuN,OAAQ,GACR+J,QAAQ,QACRrX,SAAUyW,MAMlB,OACE,kBAAC,IAAD,CACEvK,UAAU,YACVpM,MAAO,CAELC,MAAO6W,EACPtJ,OAAQO,EACRM,QAAS,OACTC,eAAgB,SAChBqE,WAAY,WAGd,kBAAC,IAAD,CACE7P,MAjNF,kBAAC,IAAD,CAAKJ,QAAQ,UACX,kBAAC,IAAD,CAAM8U,GAAG,WACP,kBAAC,IAAD,CAAQxX,MAAO,CAAE8D,SAAU,WAA3B,kGAgNF9D,MAAO,CACLC,MAAO8W,EACPvJ,OAAQwJ,EACRtB,gBAAiB,cAzMrB,kBAAC,IAAD,CAAKhT,QAAQ,UACX,kBAAC,IAAD,KACGuU,IACD,kBAAC,IAAD,CAASrX,QAAQ,IAChBwX,KACD,kBAAC,IAAD,CAASxX,QAAQ,IAChByX,KACD,kBAAC,IAAD,CAASzX,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmG,UAAWvI,UAAU4Y,EAAaF,GAClCtT,QAAO,sBAAE,8BAAAnG,EAAA,yDACiB,IAApBqZ,EAAUpY,OADP,uBAELgB,IAAQC,KAAK,kDAFR,+BAKHqX,EAAStY,OAAS,GALf,uBAMLgB,IAAQC,KAAK,qCANR,iCASHyS,EAAY,CACd0E,UAAWA,EACXE,SAAUA,GAXL,SAaU9C,YAAe9B,GAbzB,OAaHrU,EAbG,OAcHS,UAAU,IAAKA,MAAMT,EAAM,WAC7B4G,IAAU,UAAgBnG,MAAMT,EAAM,OAAQ,IAC9C4I,EAAQ/H,QAAQ,UAhBX,6CAoBRJ,UAAU4Y,EAAaF,GACpB,wCACA,sCA6KZ,kBAAC,IAAD,CACElW,MAAO,CAAE0V,gBAAiB,SAC1BlM,OAAQ,CAAEiO,UAAW,cAAeC,WAAY,sBCxP7CC,G,OAAc,WAAO,IAAD,EACIvX,mBAAS,IADb,mBACxB0V,EADwB,KACbC,EADa,OAEE3V,mBAAS,IAFX,mBAExB4V,EAFwB,KAEdC,EAFc,OAGgB7V,mBAAS,IAHzB,mBAGxBwX,EAHwB,KAGPC,EAHO,OAKMzX,mBAAS,WALf,mBAKxB0X,EALwB,KAKZC,EALY,OAOkB3X,mBAAS,IAP3B,mBAOxB8V,EAPwB,KAONC,EAPM,OAQQ/V,mBAAS,IARjB,mBAQxBgW,EARwB,KAQXC,EARW,OAUEjW,mBAAS,GAVX,mBAUxBkW,EAVwB,KAUdC,EAVc,OAWAnW,mBAAS,GAXT,mBAWxBoW,EAXwB,KAWfC,EAXe,OAYcrW,mBAAS,GAZvB,mBAYxB4X,GAZwB,KAYRC,GAZQ,QAaI7X,mBAAS,UAAU1C,QAbvB,qBAaxBwa,GAbwB,MAabC,GAba,SAc0B/X,mBAAS,GAdnC,qBAcFsW,IAdE,aAgBzB/Q,GAAUC,cAER+Q,GAAcC,uBAAY,SAACC,GAC/BR,EAAgBQ,KACf,IAOCC,GAAW3Y,SAASI,KAAK+U,YACzBvF,GAAY5P,SAASI,KAAKyP,aAC1B+I,GAAYD,GAAW,IACvBE,GAAajJ,GAAY,IAiEzBkJ,GAAiB,WAEnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/U,YAAa,2BACbvC,MAAOmW,EACP5V,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,WAAWuX,KAAK5U,GAClByT,EAAc1T,EAAME,OAAO5C,OAC3B4W,EAAajU,EAAU5E,YAClB,CACLqY,EAAc,IACdQ,EAAa,GACb,IAAI/M,EAAS,CACXjG,QAAS,kBAAC,IAAD,sEACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OArBC,GAqB0B,CACvCqY,EAAc,IACdQ,EAAa,GACb,IAAI/M,EAAS,CACXjG,QAAS,kBAAC,IAAD,0DAzBE,GAyBF,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,4DACbnX,MAAO,CAAEC,MAAO,WAGlB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CAAKC,MAAM,OAAOE,MAAO,CAAE8D,SAAU,WAClCwS,GAEH,kBAAC,IAAD,CAAKxW,MAAM,QAAQE,MAAO,CAAE8D,SAAU,WAAtC,YAOFsT,GAAgB,WAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvX,KAAK,WACLqC,YAAa,eACbvC,MAAOqW,EACP9V,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,uBAAuBuX,KAAK5U,GAC9B2T,EAAa5T,EAAME,OAAO5C,OAC1B8W,EAAYnU,EAAU5E,YACjB,CACLuY,EAAa,IACbQ,EAAY,GACZ,IAAIjN,EAAS,CACXjG,QAAS,kBAAC,IAAD,SAAO,yDAAP,KACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OAtBA,GAsB0B,CACtCuY,EAAa,IACbQ,EAAY,GACZ,IAAIjN,EAAS,CACXjG,QAAS,oEA1BC,GA0BD,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,qDACbnX,MAAO,CAAEC,MAAO,WAGlB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CAAKC,MAAM,OAAOE,MAAO,CAAE8D,SAAU,WAClC0S,GAEH,kBAAC,IAAD,CAAK1W,MAAM,QAAQE,MAAO,CAAE8D,SAAU,WAAtC,YAOFsU,GAAuB,WAEzB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvY,KAAK,WACLqC,YAAa,uCACbvC,MAAOiY,EACP1X,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,uBAAuBuX,KAAK5U,GAC9BuV,EAAoBxV,EAAME,OAAO5C,OACjCsY,GAAmB3V,EAAU5E,YACxB,CACLma,EAAoB,IACpBI,GAAmB,GACnB,IAAIzO,EAAS,CACXjG,QAAS,kBAAC,IAAD,SAAO,yDAAP,KACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OAtBA,GAsB0B,CACtCma,EAAoB,IACpBI,GAAmB,GACnB,IAAIzO,EAAS,CACXjG,QAAS,oEA1BC,GA0BD,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,6BACbnX,MAAO,CAAEC,MAAO,WAGlB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CAAKC,MAAM,OAAOE,MAAO,CAAE8D,SAAU,WAClCkU,IAEH,kBAAC,IAAD,CAAKlY,MAAM,QAAQE,MAAO,CAAE8D,SAAU,WAAtC,YAOFuU,GAAkB,WAEpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEnW,YAAa,eACbvC,MAAOmY,EACP5X,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,oBAAoBuX,KAAK5U,GAC3ByV,EAAe1V,EAAME,OAAO5C,OAC5BwY,GAAc7V,EAAU5E,YACnB,CACLqa,EAAe,IACfI,GAAc,GACd,IAAI3O,EAAS,CACXjG,QAAS,kBAAC,IAAD,SAAO,sDAAP,KACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OArBE,GAqB0B,CACxCqa,EAAe,IACfI,GAAc,GACd,IAAI3O,EAAS,CACXjG,QAAS,oEAzBG,GAyBH,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,2DACbnX,MAAO,CAAEC,MAAO,WAGlB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CAAKC,MAAM,OAAOE,MAAO,CAAE8D,SAAU,WAClCoU,IAEH,kBAAC,IAAD,CAAKpY,MAAM,QAAQE,MAAO,CAAE8D,SAAU,WAAtC,YAOFuT,GAAwB,WAE1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEnV,YAAa,qBACbvC,MAAOuW,EACPhW,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,iBAAiBuX,KAAK5U,GACxB6T,EAAqB9T,EAAME,OAAO5C,OAClC+W,GAAyBpU,EAAU5E,YAC9B,CACLyY,EAAqB,IACrBO,GAAyB,GACzB,IAAIlN,EAAS,CACXjG,QAAS,kBAAC,IAAD,SAAO,yDAAP,KACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OArBQ,EAqB0B,CAC9CyY,EAAqB,IACrBO,GAAyB,GACzB,IAAIlN,EAAS,CACXjG,QAAS,oEAzBS,EAyBT,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,6BACbnX,MAAO,CAAEC,MAAO,WAElB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CACEyX,QApCwB,EAqCxBxT,SAAU,GACV7D,MAAO,IACPuN,OAAQ,GACR+J,QAAQ,QACRrX,SAAUyW,OAMlB,OACE,kBAAC,IAAD,CACEvK,UAAU,aACVpM,MAAO,CAELC,MAAO6W,GACP1I,UAAWL,GACXM,QAAS,OACTC,eAAgB,SAChBqE,WAAY,WAGd,kBAAC,IAAD,CACE7P,MAxTF,kBAAC,IAAD,CAAKJ,QAAQ,UACX,kBAAC,IAAD,CAAM8U,GAAG,KACP,kBAAC,IAAD,CAAQxX,MAAO,CAAE8D,SAAU,WAA3B,0CAuTF9D,MAAO,CACLC,MAAO8W,GACP3I,UAAW4I,GACXtB,gBAAiB,cAlTrB,kBAAC,IAAD,CAAKhT,QAAQ,UACX,kBAAC,IAAD,KACGuU,KACD,kBAAC,IAAD,CAASrX,QAAQ,IAChBwX,KACD,kBAAC,IAAD,CAASxX,QAAQ,IAChBwY,KACD,kBAAC,IAAD,CAASxY,QAAQ,IAChByY,KACD,kBAAC,IAAD,CAASzY,QAAQ,IAChByX,KACD,kBAAC,IAAD,CAASzX,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmG,UAAWvI,UAAU4Y,EAAaF,GAClCtT,QAAO,sBAAE,8BAAAnG,EAAA,yDACiB,IAApBqZ,EAAUpY,OADP,uBAELgB,IAAQC,KAAK,kDAFR,6BAKFnB,UAAUwY,EAAU4B,GALlB,uBAMLlZ,IAAQC,KAAK,6EANR,+BASHqX,EAAStY,OAAS,GATf,uBAULgB,IAAQC,KAAK,qCAVR,iCAaHyS,EAAY,CACd0E,UAAWA,EACXE,SAAUA,EACV8B,WAAYA,GAhBP,UAkBUQ,YAAkBlH,GAlB5B,QAkBHrU,EAlBG,OAoBHS,UAAU,IAAKA,MAAMT,EAAM,WAC7B4G,IAAU,UAAgBnG,MAAMT,EAAM,OAAQ,IAC9C4I,GAAQ/H,QAAQ,UAtBX,6CA0BRJ,UAAU4Y,EAAaF,GACpB,wCACA,sCA4QZ,kBAAC,IAAD,CACElW,MAAO,CAAE0V,gBAAiB,SAC1BlM,OAAQ,CAAEiO,UAAW,cAAeC,WAAY,sBCrW7Ca,EAAkB,WAAO,IAAD,EACEnY,mBAAS,IADX,mBAC5BoY,EAD4B,KAChBC,EADgB,OAEArY,mBAAS,IAFT,mBAE5BsY,EAF4B,KAEjBC,EAFiB,OAGcvY,mBAAS,IAHvB,mBAG5B8V,EAH4B,KAGVC,EAHU,OAII/V,mBAAS,IAJb,mBAI5BgW,EAJ4B,KAIfC,EAJe,OAMFjW,mBAAS,GANP,mBAM5BkW,EAN4B,KAMlBC,EANkB,OAOJnW,mBAAS,GAPL,mBAO5BoW,EAP4B,KAOnBC,EAPmB,OAQsBrW,mBAAS,GAR/B,mBAQNsW,GARM,WAU7B/Q,EAAUC,cAER+Q,EAAcC,uBAAY,SAACC,GAC/BR,EAAgBQ,KACf,IAOCC,EAAW3Y,SAASI,KAAK+U,YACzBvF,EAAY5P,SAASI,KAAKyP,aAC1B+I,EAAYD,EAAW,IACvBE,EAAajJ,EAAY,IA6CzBkJ,EAAiB,WAEnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/U,YAAa,2BACbvC,MAAO6Y,EACPtY,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,WAAWuX,KAAK5U,GAClBmW,EAAepW,EAAME,OAAO5C,OAC5B4W,EAAajU,EAAU5E,YAClB,CACL+a,EAAe,IACflC,EAAa,GACb,IAAI/M,EAAS,CACXjG,QAAS,kBAAC,IAAD,sEACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OArBC,GAqB0B,CACvC+a,EAAe,IACflC,EAAa,GACb,IAAI/M,EAAS,CACXjG,QAAS,kBAAC,IAAD,0DAzBE,GAyBF,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,iEACbnX,MAAO,CAAEC,MAAO,WAGlB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CAAKC,MAAM,OAAOE,MAAO,CAAE8D,SAAU,WAClCwS,GAEH,kBAAC,IAAD,CAAKxW,MAAM,QAAQE,MAAO,CAAE8D,SAAU,WAAtC,YAOFsT,EAAgB,WAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvX,KAAK,WACLqC,YAAa,eACbvC,MAAO+Y,EACPxY,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,uBAAuBuX,KAAK5U,GAC9BqW,EAActW,EAAME,OAAO5C,OAC3B8W,EAAYnU,EAAU5E,YACjB,CACLib,EAAc,IACdlC,EAAY,GACZ,IAAIjN,EAAS,CACXjG,QAAS,kBAAC,IAAD,SAAO,yDAAP,KACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OAtBA,GAsB0B,CACtCib,EAAc,IACdlC,EAAY,GACZ,IAAIjN,EAAS,CACXjG,QAAS,oEA1BC,GA0BD,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,qDACbnX,MAAO,CAAEC,MAAO,WAGlB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CAAKC,MAAM,OAAOE,MAAO,CAAE8D,SAAU,WAClC0S,GAEH,kBAAC,IAAD,CAAK1W,MAAM,QAAQE,MAAO,CAAE8D,SAAU,WAAtC,YAOFuT,GAAwB,WAE1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEnV,YAAa,qBACbvC,MAAOuW,EACPhW,SAAU,SAACmC,GACT,IAAIC,EAAYD,EAAME,OAAO5C,MAC7B,GAAI,iBAAiBuX,KAAK5U,GACxB6T,EAAqB9T,EAAME,OAAO5C,OAClC+W,EAAyBpU,EAAU5E,YAC9B,CACLyY,EAAqB,IACrBO,EAAyB,GACzB,IAAIlN,EAAS,CACXjG,QAAS,kBAAC,IAAD,SAAO,yDAAP,KACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,GAGhB,GAAIlH,EAAU5E,OArBQ,EAqB0B,CAC9CyY,EAAqB,IACrBO,EAAyB,GACzB,IAAIlN,EAAS,CACXjG,QAAS,oEAzBS,EAyBT,WACTkG,SAAU,GAEZ/K,IAAQqD,MAAMyH,KAGlB2N,YAAa,6BACbnX,MAAO,CAAEC,MAAO,WAElB,kBAAC,IAAD,CAASL,QAAQ,EAAMC,KAAK,aAC5B,kBAAC,IAAD,CACEyX,QApCwB,EAqCxBxT,SAAU,GACV7D,MAAO,IACPuN,OAAQ,GACR+J,QAAQ,QACRrX,SAAUyW,MAMlB,OACE,kBAAC,IAAD,CACEvK,UAAU,YACVpM,MAAO,CAELC,MAAO6W,EACPtJ,OAAQO,EACRM,QAAS,OACTC,eAAgB,SAChBqE,WAAY,WAGd,kBAAC,IAAD,CACE7P,MAAO,6CACP9C,MAAO,CACLC,MAAO8W,EACPvJ,OAAQwJ,EACRtB,gBAAiB,cAzMrB,kBAAC,IAAD,CAAKhT,QAAQ,UACX,kBAAC,IAAD,KACGuU,IACD,kBAAC,IAAD,CAASrX,QAAQ,IAChBwX,IACD,kBAAC,IAAD,CAASxX,QAAQ,IAChByX,KACD,kBAAC,IAAD,CAASzX,QAAQ,IACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmG,UAAWvI,UAAU4Y,EAAaF,GAClCtT,QAAO,sBAAE,8BAAAnG,EAAA,yDACkB,IAArB+b,EAAW9a,OADR,uBAELgB,IAAQC,KAAK,kDAFR,+BAKH+Z,EAAUhb,OAAS,GALhB,uBAMLgB,IAAQC,KAAK,qCANR,iCASHuP,EAAa,CACfsK,WAAYA,EACZE,UAAWA,GAXN,SAaUtF,YAAgBlF,GAb1B,OAaHnR,EAbG,OAcHS,UAAU,IAAKA,MAAMT,EAAM,WAC7B4G,IAAU,WAAiBnG,MAAMT,EAAM,OAAQ,IAC/C4I,EAAQ/H,QAAQ,gBAhBX,6CAoBRJ,UAAU4Y,EAAaF,GACpB,wCACA,sCA6KZ,kBAAC,IAAD,CACElW,MAAO,CAAE0V,gBAAiB,SAC1BlM,OAAQ,CAAEiO,UAAW,cAAeC,WAAY,qB,0BC3OhDhE,IADUD,IAAVD,MACmCG,IAAnCD,QAAQE,GAA2BD,IAA3BC,QAASC,GAAkBF,IAAlBE,OAAQC,GAAUH,IAAVG,MAEtB8E,GAAiB,WAAO,IAAD,EACIxY,oBAAS,GADb,mBAC3B4T,EAD2B,KACdC,EADc,OAGJ7T,mBAAS,kBAHL,mBAK5BuF,GAL4B,UAKlBC,eAEd/D,qBAAU,WACR8D,EAAQ/H,QAAQ,iCACf,IAEHiE,qBAAU,YACK,uCAAG,sBAAApF,EAAA,sEACE0W,IADF,QAEF,GAFE,SAGZxN,EAAQ/H,QAAQ,UAChBc,IAAQC,KAAK,uBAJD,2CAAH,qDAObwV,KACC,IApB6B,MAsCO/T,oBAAS,GAtChB,mBAsC3BiU,EAtC2B,KAsCbC,EAtCa,KAwDhC,OACE,kBAAC,IAAD,CAAQtU,MAAO,CAAEuU,QAAS,IACxB,kBAAC,IAAD,CACEzR,MAAO,kBAAC0R,EAAA,EAAD,MACPC,QAASJ,EACTK,OAAO,eACPC,WAAW,eACXC,UAAU,EACVC,KAAM,WACJlP,EAAQ/H,QAAQ,UAChB0W,GAAiB,IAEnBQ,SAAU,WACRR,GAAiB,KAXrB,8CAgBA,kBAAC,GAAD,CACEtU,MAAO,CACL+U,SAAU,OACVvH,OAAQ,QACRwH,KAAM,GAERC,aAAa,EACbC,UAAWlB,EACXmB,WAAY,WACVlB,GAAgBD,KAGlB,kBAAC,IAAD,CACEoB,MAAM,OACNC,oBAAqB,CAAC,kBACtBC,KAAK,UAEL,kBAAC,IAAKC,KAAN,CACE7V,IAAI,iBACJkD,QAAS,WACP+C,EAAQ/H,QAAQ,iCAHpB,kCASA,kBAAC,IAAK2X,KAAN,CACE7V,IAAI,mBACJkD,QAAS,WACP+C,EAAQ/H,QAAQ,mCAHpB,4BASA,kBAAC,IAAK2X,KAAN,CACE7V,IAAI,mBACJkD,QAAS,WACP+C,EAAQ/H,QAAQ,mCAHpB,4BAwBA,kBAAC,IAAK2X,KAAN,CACE7V,IAAI,aACJkD,QAAS,WACP0R,GAAiB,KAHrB,8BAUJ,kBAAC,IAAD,CAAQlI,UAAU,eAChB,kBAAC,GAAD,CACEpM,MAAO,CACLwV,WAAY,OACZC,UAAW,MACXC,gBAAiB,SACjB5R,SAAU,OACV0J,OAAQ,SANZ,kCAYA,kBAAC,GAAD,CAASxN,MAAO,CAAE0N,OAAQ,WAlH5B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiI,KAAK,iCACV,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,+BACV,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iCACTlH,iBA2GH,kBAAC,GAAD,CACEzO,MAAO,CACL4V,UAAW,SACX9R,SAAU,OACV4R,gBAAiB,cAJrB,+CCjKGmD,GAAe,WACxB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACnD,KAAM,KACjB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAM,YACX,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAM,UACX,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAM,WACX,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAM,gBACX,kBAAC,GAAD,SCfRoD,IAAS/V,OACP,kBAAC,IAAD,CAAegW,SAAS,OACtB,kBAAC,GAAD,OAEF7a,SAAS8a,eAAe,ST6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzX,GACL1E,QAAQ0E,MAAMA,EAAMrD,a,gaUlIjB4Z,EAAiB,uCAAG,WAAOxb,GAAP,eAAAL,EAAA,sEACZgd,YAAerJ,IAAmBtT,GADtB,cACzBC,EADyB,yBAEtBA,GAFsB,2CAAH,sDAKjBmW,EAAc,uCAAG,WAAOpW,GAAP,eAAAL,EAAA,sEACTgd,YAAepJ,IAAgBvT,GADtB,cACtBC,EADsB,yBAEnBA,GAFmB,2CAAH,sDAKd0N,EAAsB,uCAAG,WAAO3N,GAAP,eAAAL,EAAA,sEACjBgd,YAAenJ,IAAwBxT,GADtB,cAC9BC,EAD8B,yBAE3BA,GAF2B,2CAAH,sDAKtBiI,EAAwB,uCAAG,WAAOlI,GAAP,eAAAL,EAAA,sEACnBgd,YAAelJ,IAA0BzT,GADtB,cAChCC,EADgC,yBAE7BA,GAF6B,2CAAH,sDAKxBmI,EAAwB,uCAAG,WAAOpI,GAAP,eAAAL,EAAA,sEACnBgd,YAAe/I,IAA0B5T,GADtB,cAChCC,EADgC,yBAE7BA,GAF6B,2CAAH,sDAKxBiQ,EAAoB,uCAAG,WAAOlQ,GAAP,eAAAL,EAAA,sEACfgd,YAAe9I,IAAsB7T,GADtB,cAC5BC,EAD4B,yBAEzBA,GAFyB,2CAAH,sDAKpBiP,EAAyB,SAAC0N,GACnCC,YAAcnJ,IAAwBkJ,IAG7BxM,EAAqB,SAACwM,GAC/BC,YAAclJ,IAAoBiJ,IAGzB7T,EAAe,uCAAG,WAAO/I,GAAP,SAAAL,EAAA,sEACVgd,YAAe7I,IAAiB9T,GADtB,yDAAH,sDAIf+H,EAAsB,uCAAG,WAAO/H,GAAP,eAAAL,EAAA,sEACjBgd,YAAe5I,IAAwB/T,GADtB,cAC9BC,EAD8B,yBAE3BA,GAF2B,2CAAH,uD,wKCtDjC2B,IAAQ8K,OAAO,CACboQ,IAAK,IACLnQ,SAAU,EACVoQ,SAAU,EACVC,KAAK,IAGA,IAAIC,EAAW,SAACrd,GAErB,IAAI8M,EAAc,CAAEoQ,IAAK,IAAKnQ,SAAU,GAEtCjM,UAAUA,MAAMd,EAAM,UAAW,GAAI,MACrCc,UAAUA,MAAMd,EAAM,YAAa,MAAO,MAE1C8M,EAAM,QAAc,yDACpB9K,IAAQgM,QAAQlB,IAEhBhM,UAAUA,MAAMd,EAAM,UAAW,GAAI,MACrCc,UAAUA,MAAMd,EAAM,YAAa,MAAO,OAE1C8M,EAAM,QACJ,kBAAC,IAAD,CAAM1G,MAAM,4BAAQtF,MAAMd,EAAM,eAAgB,6BAElDgC,IAAQqD,MAAMyH,IACJhM,UAAUA,MAAMd,EAAM,UAAW,GAAI,OAC/C8M,EAAM,QACJ,kBAAC,IAAD,CAAM1G,MAAM,4BAAQtF,MAAMd,EAAM,eAAgB,6BAElDgC,IAAQqD,MAAMyH,K,0CCJX,SAAemQ,EAAtB,oC,4CAAO,WAA6Bpd,EAAasP,GAA1C,qBAAApP,EAAA,6DACDud,EAAgBC,YAAW,CAAEC,SAAU,QACvCxd,EAAO,GAFN,SAICyd,EAAWC,aAAS,WACtB,OACE,kBAAC,IAAD,CAAMtX,MAAM,qDACV,2BAAIkX,EAASE,cAIH,kBACZ1Q,EAAS,CACXjG,QAAS,kBAAC4W,EAAD,MACTza,IAHc,kBAId+J,SAAU,GAEZ/K,IAAQ2b,QAAQ7Q,GAjBb,SAmBU7M,IAAM2d,KAAKzd,IAASN,EAAKsP,EAAU,CAC9C0O,QAAS,CACP,eAAgB,uBAElBrd,QAAS,IAAOC,IAChBqd,iBAAkB,SAAUC,GAC1B,IAAIC,GACCD,EAAcE,OAASF,EAAcG,MAAS,IAAO,GAAK,IAE/DZ,EAASE,SAAWQ,KA5BrB,OAmBHhe,EAnBG,OA+BHgC,IAAQmc,UACRd,EAASrd,GAhCN,kDAmCHgC,IAAQmc,UACRd,EAASrd,GApCN,2D,sBAyDA,SAAe+c,EAAtB,oC,4CAAO,WAA8Bld,EAAaC,GAA3C,eAAAC,EAAA,6DACDC,EAAO,GADN,kBAGUC,IAAMC,IAAIC,IAASN,EAAK,CACnCO,OAAQ,CACNC,KAAMC,KAAKC,UAAUT,IAEvBU,QAASC,MAPR,cAGHT,EAHG,OAUHqd,EAASrd,GAVN,kBAWIc,MAAMd,EAAM,OAAQ,KAXxB,uCAaHqd,EAASrd,GAbN,kBAcI,IAdJ,0D,4OC5EIkW,EAAe,uCAAG,WAAO9V,GAAP,eAAAL,EAAA,sEACVgd,YAAe1I,IAAiBjU,GADtB,cACvBC,EADuB,yBAEpBA,GAFoB,2CAAH,sDAKf6E,EAAc,uCAAG,WAAO9E,GAAP,eAAAL,EAAA,sEACTgd,YAAexI,IAAgBnU,GADtB,cACtBC,EADsB,yBAEnBA,GAFmB,2CAAH,sDAKdkR,EAAkB,uCAAG,WAAOnR,GAAP,eAAAL,EAAA,sEACbgd,YAAevI,IAAoBpU,GADtB,cAC1BC,EAD0B,yBAEvBA,GAFuB,2CAAH,sDAKlBoS,EAAoB,uCAAG,WAAOrS,GAAP,eAAAL,EAAA,sEACfgd,YAAezI,IAAsBlU,GADtB,cAC5BC,EAD4B,yBAEzBA,GAFyB,2CAAH,uD,6NCfpBqW,EAAe,uCAAG,WAAOtW,GAAP,eAAAL,EAAA,sEACVgd,YAAexJ,IAAiBnT,GADtB,cACvBC,EADuB,yBAEpBA,GAFoB,2CAAH,sDAKf8R,EAAsB,uCAAG,WAAO/R,GAAP,eAAAL,EAAA,sEACjBgd,YAAevJ,IAAwBpT,GADtB,cAC9BC,EAD8B,yBAE3BA,GAF2B,2CAAH,sDAKtBiT,EAAsB,uCAAG,WAAOlT,GAAP,SAAAL,EAAA,sEACjBgd,YAAe3I,IAAwBhU,GADtB,yDAAH,sDAItB2S,EAA0B,uCAAG,WAAO3S,GAAP,SAAAL,EAAA,sEACrBH,YAAqB6T,IAA4BrT,GAD5B,yDAAH,wD","file":"static/js/main.c05123ad.chunk.js","sourcesContent":["import { doGetRequest } from \"./netDoRequest\";\r\nimport { Gproxy, Gtimeout } from \"./netConfig\";\r\nimport { download_url, nginx_download_url } from \"./netConfig\";\r\nimport axios from \"axios\";\r\nimport * as _ from \"lodash\";\r\nimport { message } from \"antd\";\r\n// import download from \"../jsResource/download\";\r\n// const download = require(\"../jsResource/download\");\r\n\r\nexport async function doGetRequestDownFileByFileName(\r\n  url: string,\r\n  queryData: Object\r\n) {\r\n  //  console.log(url);\r\n  let resq = {};\r\n  try {\r\n    resq = await axios.get(Gproxy + url, {\r\n      params: {\r\n        data: JSON.stringify(queryData),\r\n      },\r\n      timeout: Gtimeout,\r\n      responseType: \"blob\",\r\n    });\r\n    const fileurl = window.URL.createObjectURL(\r\n      new Blob([_.get(resq, \"data\", \"\")])\r\n    );\r\n    const link = document.createElement(\"a\");\r\n    link.href = fileurl;\r\n    link.setAttribute(\"download\", _.get(queryData, \"file_name\", \"demo.txt\"));\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    message.info(\"下载成功\");\r\n  } catch (err) {\r\n    message.info(err);\r\n  }\r\n}\r\n\r\nexport async function doGetRequestDownFile(url: string, queryData: Object) {\r\n  //  console.log(url);\r\n  let resq = {};\r\n  try {\r\n    resq = await axios.get(Gproxy + url, {\r\n      params: {\r\n        data: JSON.stringify(queryData),\r\n      },\r\n      timeout: Gtimeout * 3,\r\n      responseType: \"blob\",\r\n    });\r\n    console.log(\"下载的文件 resq\", resq);\r\n    let fileName = _.get(resq, \"headers.content-disposition\", \"\").split(\"=\");\r\n    fileName = fileName[fileName.length - 1];\r\n    fileName = decodeURI(fileName.replace(/\"/g, \"\"));\r\n    const fileurl = window.URL.createObjectURL(\r\n      new Blob([_.get(resq, \"data\", \"\")])\r\n    );\r\n    const link = document.createElement(\"a\");\r\n    link.href = fileurl;\r\n    link.setAttribute(\"download\", fileName);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    message.info(\"下载成功\");\r\n  } catch (err) {\r\n    message.info(err);\r\n  }\r\n}\r\n\r\nexport let downloadMnist = () => {\r\n  let queryParams = { file_name: \"small_mnist_train.csv\" };\r\n  doGetRequestDownFile(download_url, queryParams);\r\n};\r\n\r\nlet downNginxFiles = async (fileurl: string, fileName: string) => {\r\n  let resq = {};\r\n  try {\r\n    resq = await axios.get(fileurl, {\r\n      params: {},\r\n      timeout: Gtimeout,\r\n      responseType: \"blob\",\r\n    });\r\n    fileurl = window.URL.createObjectURL(new Blob([_.get(resq, \"data\", \"\")]));\r\n    const link = document.createElement(\"a\");\r\n    link.href = fileurl;\r\n    link.setAttribute(\"download\", fileName);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    message.info(\"下载成功\");\r\n  } catch {\r\n    message.info(\"下载失败\");\r\n  }\r\n};\r\n\r\nexport let downloadResByUuid = (uuid: string) => {\r\n  let downloadUrl = nginx_download_url + uuid.toString() + \".zip\";\r\n  downNginxFiles(downloadUrl, uuid.toString() + \".zip\");\r\n};\r\n\r\nexport let downloadResByFileName = (uuid: string, file_name: string) => {\r\n  let downloadUrl =\r\n    nginx_download_url + uuid.toString() + \"/resumefile/\" + file_name;\r\n  downNginxFiles(downloadUrl, file_name);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Upload,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Table,\r\n  Select,\r\n  Popover,\r\n  Divider,\r\n  Tag,\r\n} from \"antd\";\r\nimport { AnyCnameRecord } from \"dns\";\r\nimport {\r\n  RightCircleTwoTone,\r\n  QuestionCircleTwoTone,\r\n  DownloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport * as _ from \"lodash\";\r\n// import { getJobsByjob_nameApi } from \"../net/netJob\";\r\nimport prettyBytes from \"pretty-bytes\";\r\nimport ReactJson from \"react-json-view\";\r\nimport { duration } from \"moment\";\r\nimport { downloadResByUuid } from \"../net/netDownloadFile\";\r\nimport { select_job_api, set_job_status_api } from \"../net/netJob\";\r\nimport {\r\n  min_education_view,\r\n  name_chinese,\r\n} from \"../adminComponent/releaseJobInfoPanel\";\r\nimport { global_var } from \"../global/userInfo\";\r\nimport { deliver_job_api, get_deliver_status_api } from \"../net/netUser\";\r\nimport { UserDeliverButton } from \"../button/userDeliverButton\";\r\nimport \"./watchJobInfoPanel.css\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport let resume_info_status_view = (f) => {\r\n  let selects_ = [\"\", \"进行中\", \"结束\"];\r\n  let select_list = selects_.map((item) => {\r\n    return (\r\n      <Option key={item} value={item}>\r\n        {item === \"\" ? \"所有\" : item}\r\n      </Option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <Divider dashed={true} type=\"vertical\"></Divider>\r\n      <Tag color=\"red\"> {\"招聘状态\"} </Tag>\r\n      <Select\r\n        defaultValue=\"进行中\"\r\n        style={{ width: 120 }}\r\n        onChange={(value) => {\r\n          f(value);\r\n        }}\r\n      >\r\n        {select_list}\r\n      </Select>\r\n      <Divider dashed={true} type=\"vertical\"></Divider>\r\n    </Row>\r\n  );\r\n};\r\n\r\n// {\"code\": \"0\", \"message\": \"\", \"data\": [{\"model\": \"trainModel.jobinfo\", \"pk\": 18, \"fields\": {\"jobuuid\": \"a783b09eeffb11ea9c180871908061a4\", \"jobstatus\": \"未开始\", \"job_category\": \"20200906-12:44:32\", \"starttime\": \"_\", \"endtime\": \"_\", \"savedir\": \"C:\\\\gitproj\\\\autotrain\\\\myServer\\\\storeFiles\\\\a783b09eeffb11ea9c180871908061a4\", \"csvname\": \"mnist_train.csv\", \"csvsize\": \"110 MB\", \"job_name\": \"asasa12\", \"modelsize\": \"0\", \"modelstructure\": \"0\", \"modeltotalsample\": \"0\", \"modeltrainsample\": \"0\", \"modeltestsample\": \"0\", \"modelvalidasample\": \"0\"}},\r\n\r\n// 支持 按照 发布时间 ,职位名称，行业类别 , 最低学历\r\n// 公司名称,  >= 最低薪水 , <=最高薪水 进行搜索\r\nexport let WatchJobInfoPanel = () => {\r\n  // 前端返回的数据\r\n  let [dataS, setDataS] = useState([]);\r\n\r\n  // 查询的变量\r\n  let [job_name, set_job_name] = useState(\"\");\r\n  let [job_category, set_job_category] = useState(\"\");\r\n  let [min_education, set_min_education] = useState(\"\");\r\n  let [company_name, set_company_name] = useState(\"\");\r\n\r\n  let [min_salary, set_min_salary] = useState(\"0\");\r\n  let [max_salary, set_max_salary] = useState(\"999999\");\r\n  let [job_create_time, set_job_create_time] = useState(\"\");\r\n  let [job_status, set_job_status] = useState(\"进行中\");\r\n\r\n  let [page_index, set_page_index] = useState(\"1\");\r\n  let [sum_page_index, set_sum_page_index] = useState(\"1\");\r\n\r\n  async function loadData() {\r\n    let params = {\r\n      page_index: page_index,\r\n      job_name: job_name,\r\n      job_category: job_category,\r\n      min_education: min_education,\r\n      company_name: company_name,\r\n      min_salary: min_salary,\r\n      max_salary: max_salary,\r\n      job_create_time: job_create_time,\r\n      job_status: job_status,\r\n    };\r\n    let data: any = await select_job_api(params);\r\n    // console.log(\"回传的 select_job_api data\", data);\r\n    setDataS(_.get(data, \"data.lists\", []));\r\n    set_sum_page_index(_.get(data, \"data.sum_page\"));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (page_index === \"\") {\r\n      page_index = \"0\";\r\n    }\r\n    if (parseInt(page_index) < 1) {\r\n      message.error(\"页号必须 >1\");\r\n      set_page_index(\"1\");\r\n      return;\r\n    } else if (parseInt(page_index) > parseInt(sum_page_index)) {\r\n      message.error(\"页号不能溢出\");\r\n      set_page_index(sum_page_index);\r\n      return;\r\n    } else if (\r\n      parseInt(page_index) < 1 ||\r\n      parseInt(page_index) > parseInt(sum_page_index)\r\n    ) {\r\n      message.error(\"错误的页号\");\r\n      setDataS([]);\r\n      return;\r\n    }\r\n    loadData();\r\n  }, [page_index, job_status, min_education]);\r\n\r\n  let input_type_view = (column_name) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Input\r\n            addonBefore={name_chinese[`${column_name}_`]}\r\n            value={eval(column_name)}\r\n            onChange={(event) => {\r\n              let textValue = event.target.value;\r\n              eval(`set_${column_name}`)(textValue);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let filiter_inpus_view = () => {\r\n    return (\r\n      <Row gutter={10} justify=\"center\">\r\n        <Col>\r\n          <Row>\r\n            {input_type_view(\"job_name\")}\r\n            {input_type_view(\"job_category\")}\r\n            {input_type_view(\"job_create_time\")}\r\n            {input_type_view(\"company_name\")}\r\n          </Row>\r\n          <Row>\r\n            {input_type_view(\"min_salary\")}\r\n            {input_type_view(\"max_salary\")}\r\n            {min_education_view(\"\", set_min_education)}\r\n            {resume_info_status_view(set_job_status)}\r\n            <Col>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  loadData();\r\n                }}\r\n              >\r\n                执行查询\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  // \"fields\":{14 items\r\n  //   \"job_name\":string\"12\"\r\n  //   \"job_category\":string\"\"\r\n  //   \"min_education\":string\"\"\r\n  //   \"min_salary\":int1212\r\n  //   \"max_salary\":int343423\r\n  //   \"job_describe\":string\"\"\r\n  //   \"company_name\":string\"\"\r\n  //   \"job_demand\":string\"\"\r\n  //   \"company_tele\":string\"\"\r\n  //   \"company_email\":string\"\"\r\n  //   \"job_uuid\":string\"6473d957007011eb87498030491cc416\"\r\n  //   \"job_create_time\":string\"20200927-11:20:28\"\r\n  //   \"job_end_time\":string\"\"\r\n  //   \"job_status\":string\"进行中\"\r\n  //   }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"招聘id\",\r\n      dataIndex: \"pk\",\r\n    },\r\n    {\r\n      title: name_chinese[\"job_name_\"],\r\n      dataIndex: [\"fields\", \"job_name\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"job_category_\"],\r\n      dataIndex: [\"fields\", \"job_category\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"min_education_\"],\r\n      dataIndex: [\"fields\", \"min_education\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"company_name_\"],\r\n      dataIndex: [\"fields\", \"company_name\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"min_salary_\"],\r\n      dataIndex: [\"fields\", \"min_salary\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"max_salary_\"],\r\n      dataIndex: [\"fields\", \"max_salary\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"job_status_\"],\r\n      dataIndex: [\"fields\", \"job_status\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"job_describe_\"],\r\n      key: \"job_describe\",\r\n      render: (text: any, record: any, index: number) => {\r\n        // console.log(\"record is\", record);\r\n        let show_text = _.get(record, \"fields.job_describe\", \"\");\r\n        let viewContent = () => {\r\n          return (\r\n            <Row>\r\n              <pre>{show_text === \"\" ? \"招聘方未填写\" : show_text}</pre>\r\n            </Row>\r\n          );\r\n        };\r\n        return (\r\n          <Popover\r\n            key=\"detailInfoPopover\"\r\n            trigger=\"hover\"\r\n            placement=\"left\"\r\n            title={name_chinese[\"job_describe_\"]}\r\n            content={viewContent()}\r\n          >\r\n            <Button icon={<QuestionCircleTwoTone />}></Button>\r\n          </Popover>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: name_chinese[\"job_demand_\"],\r\n      key: \"job_demand\",\r\n      render: (text: any, record: any, index: number) => {\r\n        // console.log(\"record is\", record);\r\n        let show_text = _.get(record, \"fields.job_demand\", \"\");\r\n        let viewContent = () => {\r\n          return (\r\n            <Row>\r\n              <pre> {show_text === \"\" ? \"招聘方未填写\" : show_text}</pre>\r\n            </Row>\r\n          );\r\n        };\r\n        return (\r\n          <Popover\r\n            key=\"detailInfoPopover\"\r\n            trigger=\"hover\"\r\n            placement=\"left\"\r\n            title={name_chinese[\"job_demand_\"]}\r\n            content={viewContent()}\r\n          >\r\n            <Button icon={<QuestionCircleTwoTone />}></Button>\r\n          </Popover>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"投递岗位\",\r\n      key: \"delivery_resume\",\r\n      render: (text: any, record: any, index: number) => {\r\n        // console.log(\"record is\", record);\r\n        let params = {\r\n          job_uuid: _.get(record, \"fields.job_uuid\", \"null\"),\r\n          user_uuid: _.get(global_var, \"user_info.user_uuid\", \"null\"),\r\n        };\r\n        let info = { params: params, record: record };\r\n        return UserDeliverButton(info);\r\n      },\r\n    },\r\n  ];\r\n\r\n  let page_index_view = () => {\r\n    return (\r\n      <Row>\r\n        <Tag style={{ fontSize: \"larger\" }}>共 {sum_page_index} 页</Tag>\r\n        <Divider type=\"vertical\"></Divider>\r\n        <Button\r\n          onClick={() => {\r\n            let index_ = parseInt(page_index) - 1;\r\n            set_page_index(index_.toString());\r\n          }}\r\n        >\r\n          上一页\r\n        </Button>\r\n        <Divider type=\"vertical\"></Divider>\r\n        <Button\r\n          onClick={() => {\r\n            let index_ = parseInt(page_index) + 1;\r\n            set_page_index(index_.toString());\r\n          }}\r\n        >\r\n          下一页\r\n        </Button>\r\n        <Divider type=\"vertical\"></Divider>\r\n        <Col>\r\n          <Input\r\n            addonBefore=\"跳转至\"\r\n            style={{ width: \"200px\" }}\r\n            type=\"number\"\r\n            value={page_index}\r\n            onChange={(e) => {\r\n              let textValue = e.target.value;\r\n              set_page_index(textValue);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Divider type=\"vertical\"></Divider>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row gutter={10} justify=\"center\" style={{ width: \"100%\" }}>\r\n      <Col>\r\n        <Row gutter={10} justify=\"center\">\r\n          {\" \"}\r\n          模糊匹配搜索部分数据 样例: 日期格式 20200906-12:44:32{\" \"}\r\n        </Row>\r\n        {filiter_inpus_view()}\r\n        <Divider type=\"horizontal\" dashed={true}></Divider>\r\n        {page_index_view()}\r\n        <Table\r\n          rowKey={(record) => _.get(record, \"pk\", \"x\")}\r\n          dataSource={dataS}\r\n          columns={columns}\r\n          pagination={{ hideOnSinglePage: true }}\r\n          rowClassName={(record) => {\r\n            return _.isEqual(\"结束\", _.get(record, \"fields.job_status\"))\r\n              ? \"stop_resume_column\"\r\n              : \"start_resume_column\";\r\n          }}\r\n        />\r\n        <Divider type=\"horizontal\" dashed={true}></Divider>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Popover, Row, Button, Col, Divider } from \"antd\";\r\nimport {\r\n  deliver_job_api,\r\n  get_deliver_status_api,\r\n  get_resume_file_name_api,\r\n  get_user_resume_info_api,\r\n} from \"../net/netUser\";\r\nimport * as _ from \"lodash\";\r\nimport { global_var } from \"../global/userInfo\";\r\nimport { useHistory } from \"react-router\";\r\nexport let UserDeliverButton = (info: any) => {\r\n  let [button_text, set_button_text] = useState(\"申请\");\r\n  let [resume_is_full, set_resume_is_full] = useState(false);\r\n  let [resume_file_is_upload, set_resume_file_is_upload] = useState(false);\r\n\r\n  let params = _.get(info, \"params\", {});\r\n  let record = _.get(info, \"record\", {});\r\n\r\n  let get_job_status = async () => {\r\n    let data = await get_deliver_status_api(params);\r\n    ////  console.log(\"这条记录的 投递结果\", data);\r\n    let res = _.get(data, \"data.deliver_status\", \"未申请\");\r\n    ////  console.log(\"结果 \", res);\r\n    set_button_text(_.isEqual(\"未投递\", res) ? \"投递\" : res);\r\n  };\r\n  let get_user_resume_info = async () => {\r\n    let params = { user_uuid: _.get(global_var, \"user_info.user_uuid\", \"\") };\r\n    let data = await get_user_resume_info_api(params);\r\n    return _.get(data, \"data.[0].fields\", {});\r\n  };\r\n  let get_file_name = async () => {\r\n    let params = {\r\n      user_uuid: _.get(global_var, \"user_info.user_uuid\", \"null\"),\r\n    };\r\n    let data = await get_resume_file_name_api(params);\r\n    return _.get(data, \"data.file_name\", \"未提交\");\r\n  };\r\n\r\n  let change_fill_all_info_status = (params) => {\r\n    set_resume_is_full(true);\r\n    if (_.isEqual({}, params)) {\r\n      set_resume_is_full(false);\r\n      return;\r\n    }\r\n    Object.keys(params).map((i: string) => {\r\n      if (params[i] === \"\") {\r\n        set_resume_is_full(false);\r\n        return;\r\n      }\r\n    });\r\n  };\r\n\r\n  let change_resume_file_status = (resume_file_name) => {\r\n    ////  console.log(\"resume_filename\", resume_file_name);\r\n    if (_.isEqual(\"未提交\", resume_file_name)) {\r\n      set_resume_file_is_upload(false);\r\n    } else {\r\n      set_resume_file_is_upload(true);\r\n    }\r\n  };\r\n\r\n  let check_resume = async () => {\r\n    let resume_info = await get_user_resume_info();\r\n    let resume_file_name = await get_file_name();\r\n    change_fill_all_info_status(resume_info);\r\n    change_resume_file_status(resume_file_name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    get_job_status();\r\n    check_resume();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n\r\n  let viewContent = () => {\r\n    let resume_warning_view = () => {\r\n      return (\r\n        <Col>\r\n          <Divider></Divider>\r\n\r\n          <Col>简历信息不完善</Col>\r\n          <Col>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                history.replace(\"/main/fill_self_info/\");\r\n              }}\r\n            >\r\n              去补全信息\r\n            </Button>\r\n          </Col>\r\n        </Col>\r\n      );\r\n    };\r\n    let resume_file_warning_view = () => {\r\n      return (\r\n        <Col>\r\n          <Divider></Divider>\r\n          <Col>简历附件未提交</Col>\r\n          <Col>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                history.replace(\"/main/fill_self_info/\");\r\n              }}\r\n            >\r\n              去提交\r\n            </Button>\r\n          </Col>\r\n        </Col>\r\n      );\r\n    };\r\n\r\n    let resume_stop_warning_view = () => {\r\n      return (\r\n        <Col>\r\n          <Divider></Divider>\r\n          <Col>招聘已经结束</Col>\r\n        </Col>\r\n      );\r\n    };\r\n    return (\r\n      <Row>\r\n        <Col style={{ fontSize: \"larger\" }}>\r\n          <Col>上传简历,并完善信息后才可以投递哦</Col>\r\n\r\n          <Col>{resume_is_full ? \"\" : resume_warning_view()}</Col>\r\n\r\n          <Col>{resume_file_is_upload ? \"\" : resume_file_warning_view()}</Col>\r\n\r\n          <Col>\r\n            {!_.isEqual(\"结束\", _.get(record, \"fields.job_status\"))\r\n              ? \"\"\r\n              : resume_stop_warning_view()}\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n  return (\r\n    <Popover\r\n      key=\"detailInfoPopover\"\r\n      trigger=\"hover\"\r\n      placement=\"left\"\r\n      title={\"投递此岗位\"}\r\n      content={viewContent()}\r\n    >\r\n      <Button\r\n        onClick={async () => {\r\n          deliver_job_api(params);\r\n          ////  console.log(\"记录的 \", record);\r\n          setTimeout(() => {\r\n            get_job_status();\r\n          }, 500);\r\n        }}\r\n        disabled={\r\n          !_.isEqual(\"投递\", button_text) ||\r\n          !resume_is_full ||\r\n          !resume_file_is_upload ||\r\n          _.isEqual(\"结束\", _.get(record, \"fields.job_status\"))\r\n        }\r\n      >\r\n        {button_text}\r\n      </Button>\r\n    </Popover>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Divider,\r\n  Input,\r\n  Row,\r\n  Tag,\r\n  message,\r\n  Select,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport { publish_job_api } from \"../net/netJob\";\r\nimport * as _ from \"lodash\";\r\nimport { global_var } from \"../global/userInfo\";\r\nimport \"moment/locale/zh-cn\";\r\nimport locale from \"antd/es/date-picker/locale/zh_CN\";\r\nimport {\r\n  get_user_resume_info_api,\r\n  user_upload_resume_api,\r\n} from \"../net/netUser\";\r\nimport moment from \"moment\";\r\nimport { UploadResumeFilePanel } from \"./uploadResumeFilePanel\";\r\nimport { UploadHeadImgPanel } from \"./uploadHeadImgPanel\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\n// user_uuid = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_shchool = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_name = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_tele = models.CharField(unique=True, max_length=charlen)\r\n// resume_email = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_sex = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_age = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_highest_degree = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_location = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_late_major = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_area = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_expected_arrival_time = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_skill = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_award = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_graduation_date = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_birthday = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_project_experience = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_self_description = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_internship = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n// resume_job_intension = models.CharField(default=\"\", blank=True, max_length=charlen)\r\n\r\nlet name_chinese = {\r\n  resume_name: \"姓名\",\r\n  resume_school: \"学校名称\",\r\n  resume_tele: \"电话\",\r\n  resume_email: \"电子邮箱\",\r\n  resume_age: \"年龄\",\r\n  resume_highest_degree: \"最高学历\",\r\n  resume_location: \"所在地\",\r\n  resume_late_major: \"专业\",\r\n  resume_birthday: \"出生年月\",\r\n  resume_expected_arrival_time: \"到岗时间\",\r\n  resume_skill: \"能力\",\r\n  resume_award: \"曾获奖励\",\r\n  resume_graduation_date: \"毕业时间\",\r\n\r\n  resume_self_description: \"自我介绍\",\r\n\r\n  resume_project_experience: \"项目经验\",\r\n  resume_internship: \"实习经历\",\r\n  resume_job_intension: \"求职意向\",\r\n  resume_sex: \"性别\",\r\n};\r\n\r\nexport let FillSelfInfoPanel = () => {\r\n  let get_std_month_str = () => {\r\n    return moment().format(\"YYYY-MM\");\r\n  };\r\n  let [resume_name, set_resume_name] = useState(\"\");\r\n  let [resume_school, set_resume_school] = useState(\"\");\r\n  let [resume_tele, set_resume_tele] = useState(\"\");\r\n  let [resume_highest_degree, set_resume_highest_degree] = useState(\"本科\");\r\n  let [resume_location, set_resume_location] = useState(\"\");\r\n  let [resume_late_major, set_resume_late_major] = useState(\"\");\r\n\r\n  let [resume_skill, set_resume_skill] = useState(\"\");\r\n  let [resume_award, set_resume_award] = useState(\"\");\r\n\r\n  let [resume_self_description, set_resume_self_description] = useState(\"\");\r\n  let [resume_project_experience, set_resume_project_experience] = useState(\"\");\r\n  let [resume_internship, set_resume_internship] = useState(\"\");\r\n  let [resume_job_intension, set_resume_job_intension] = useState(\"\");\r\n  let [resume_sex, set_resume_sex] = useState(\"男\");\r\n  let [resume_email, set_resume_email] = useState(\"\");\r\n\r\n  let [resume_graduation_date, set_resume_graduation_date] = useState(\r\n    get_std_month_str()\r\n  );\r\n  let [resume_birthday, set_resume_birthday] = useState(get_std_month_str());\r\n  let [\r\n    resume_expected_arrival_time,\r\n    set_resume_expected_arrival_time,\r\n  ] = useState(get_std_month_str());\r\n\r\n  let [fill_all_info, set_fill_all_info] = useState(true);\r\n\r\n  let get_user_info = () => {\r\n    let params = {\r\n      user_uuid: _.get(global_var, \"user_info.user_uuid\", \"null\"),\r\n      resume_name: resume_name,\r\n      resume_school: resume_school,\r\n      resume_tele: resume_tele,\r\n      resume_highest_degree: resume_highest_degree,\r\n      resume_location: resume_location,\r\n      resume_late_major: resume_late_major,\r\n      resume_birthday: resume_birthday,\r\n      resume_expected_arrival_time: resume_expected_arrival_time,\r\n      resume_skill: resume_skill,\r\n      resume_award: resume_award,\r\n      resume_graduation_date: resume_graduation_date,\r\n      resume_self_description: resume_self_description,\r\n      resume_project_experience: resume_project_experience,\r\n      resume_internship: resume_internship,\r\n      resume_job_intension: resume_job_intension,\r\n      resume_email: resume_email,\r\n      resume_sex: resume_sex,\r\n    };\r\n    return params;\r\n  };\r\n\r\n  let set_user_info = (d_: any) => {\r\n    set_resume_name(_.get(d_, \"resume_name\", \"\"));\r\n    set_resume_school(_.get(d_, \"resume_school\", \"\"));\r\n    set_resume_tele(_.get(d_, \"resume_tele\", \"\"));\r\n    set_resume_highest_degree(_.get(d_, \"resume_highest_degree\", \"本科\"));\r\n    set_resume_location(_.get(d_, \"resume_location\", \"\"));\r\n    set_resume_late_major(_.get(d_, \"resume_late_major\", \"\"));\r\n    set_resume_birthday(_.get(d_, \"resume_birthday\", \"\"));\r\n    set_resume_expected_arrival_time(\r\n      _.get(d_, \"resume_expected_arrival_time\", \"\")\r\n    );\r\n    set_resume_skill(_.get(d_, \"resume_skill\", \"\"));\r\n    set_resume_award(_.get(d_, \"resume_award\", \"\"));\r\n    set_resume_graduation_date(_.get(d_, \"resume_graduation_date\", \"\"));\r\n    set_resume_self_description(_.get(d_, \"resume_self_description\", \"\"));\r\n    set_resume_project_experience(_.get(d_, \"resume_project_experience\", \"\"));\r\n    set_resume_internship(_.get(d_, \"resume_internship\", \"\"));\r\n    set_resume_job_intension(_.get(d_, \"resume_job_intension\", \"\"));\r\n    set_resume_email(_.get(d_, \"resume_email\", \"\"));\r\n    set_resume_sex(_.get(d_, \"resume_sex\", \"男\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let get_user_resume_info = async () => {\r\n      let params = { user_uuid: _.get(global_var, \"user_info.user_uuid\", \"\") };\r\n      let data = await get_user_resume_info_api(params);\r\n      let resume_info = _.get(data, \"data.[0].fields\", {});\r\n      //  console.log(\"resume_info\", resume_info);\r\n      if (!_.isEqual({}, resume_info)) {\r\n        set_user_info(resume_info);\r\n      }\r\n    };\r\n    get_user_resume_info();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    change_fill_all_info_status();\r\n  });\r\n\r\n  let change_fill_all_info_status = () => {\r\n    let params = get_user_info();\r\n    set_fill_all_info(true);\r\n    Object.keys(params).map((i: string) => {\r\n      if (params[i] === \"\") {\r\n        set_fill_all_info(false);\r\n        return;\r\n      }\r\n    });\r\n  };\r\n\r\n  let select_education_view = (c_name: string) => {\r\n    let min_education_selects = [\r\n      \"大专\",\r\n      \"本科\",\r\n      \"硕士\",\r\n      \"博士\",\r\n      \"中专\",\r\n      \"高中\",\r\n      \"初中\",\r\n      \"小学\",\r\n      \"其他\",\r\n      \"\",\r\n    ];\r\n    let select_list = min_education_selects.map((item) => {\r\n      return (\r\n        <Option key={item} value={item}>\r\n          {item == \"\" ? \"不限\" : item}\r\n        </Option>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Tag color=\"red\"> {name_chinese[c_name]} </Tag>\r\n            <Select\r\n              value={eval(c_name)}\r\n              style={{ width: 120 }}\r\n              onChange={(value) => {\r\n                eval(`set_${c_name}`)(value);\r\n              }}\r\n            >\r\n              {select_list}\r\n            </Select>\r\n          </Row>\r\n          <Divider></Divider>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let select_sex_view = (c_name: string) => {\r\n    let min_education_selects = [\"男\", \"女\"];\r\n    let select_list = min_education_selects.map((item) => {\r\n      return (\r\n        <Option key={item} value={item}>\r\n          {item == \"\" ? \"不限\" : item}\r\n        </Option>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Tag color=\"red\"> {name_chinese[c_name]} </Tag>\r\n            <Select\r\n              value={eval(c_name)}\r\n              style={{ width: 120 }}\r\n              onChange={(value) => {\r\n                eval(`set_${c_name}`)(value);\r\n              }}\r\n            >\r\n              {select_list}\r\n            </Select>\r\n          </Row>\r\n          <Divider></Divider>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_from_column = (c_name: string) => {\r\n    return (\r\n      <Row key={c_name}>\r\n        <Input\r\n          addonBefore={_.get(name_chinese, c_name, \"找不到\")}\r\n          value={eval(c_name)}\r\n          onChange={(e) => {\r\n            let text = e.target.value;\r\n            eval(`set_${c_name}`)(text);\r\n          }}\r\n        />\r\n        <Divider dashed={true}> </Divider>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let text_area_from_column = (c_name: string) => {\r\n    let auto_config = { minRows: 5 };\r\n    return (\r\n      <Col key={c_name}>\r\n        <Divider></Divider>\r\n        <Tag color=\"blue\"> {name_chinese[c_name]} </Tag>\r\n        <TextArea\r\n          autoSize={auto_config}\r\n          value={eval(c_name)}\r\n          onChange={(event) => {\r\n            let default_len = 1000;\r\n            let textValue = event.target.value;\r\n\r\n            if (textValue.length > default_len) {\r\n              let config = {\r\n                content: (\r\n                  <Row>\r\n                    {name_chinese[c_name]} 不能超过 {default_len} 位\r\n                  </Row>\r\n                ),\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            } else {\r\n              eval(`set_${c_name}`)(textValue);\r\n            }\r\n          }}\r\n        />\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  let time_picker_from_column = (c_name) => {\r\n    let temp_date = eval(c_name) === \"\" ? moment() : moment(eval(c_name));\r\n    return (\r\n      <Col key={c_name}>\r\n        <Row>\r\n          <Tag color=\"geekblue\">{name_chinese[c_name]}</Tag>\r\n          <DatePicker\r\n            value={temp_date}\r\n            locale={locale}\r\n            onChange={(date, datestring) => {\r\n              eval(`set_${c_name}`)(datestring);\r\n            }}\r\n            picker=\"month\"\r\n          />\r\n        </Row>\r\n\r\n        <Divider></Divider>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  // let maxHeight = document.body.clientHeight * 0.9;\r\n\r\n  let left_name_list = [\r\n    \"resume_name\",\r\n    \"resume_tele\",\r\n    \"resume_email\",\r\n    \"resume_location\",\r\n    \"resume_school\",\r\n    \"resume_late_major\",\r\n  ];\r\n  // let right_name_list = [];\r\n\r\n  let text_area_name_list = [\r\n    \"resume_self_description\",\r\n    \"resume_skill\",\r\n    \"resume_award\",\r\n    \"resume_project_experience\",\r\n    \"resume_internship\",\r\n    \"resume_job_intension\",\r\n  ];\r\n\r\n  let time_picker_name_list = [\r\n    \"resume_graduation_date\",\r\n    \"resume_birthday\",\r\n    \"resume_expected_arrival_time\",\r\n  ];\r\n  let leftInputView = () => {\r\n    let left_view_list = left_name_list.map((value) => {\r\n      let temp = value;\r\n      return input_from_column(temp);\r\n    });\r\n    return <Col>{left_view_list}</Col>;\r\n  };\r\n  // let rightInputView = () => {\r\n  //   let view_list = right_name_list.map((value) => {\r\n  //     let temp = value;\r\n  //     return input_from_column(temp);\r\n  //   });\r\n  //   return <Col>{view_list}</Col>;\r\n  // };\r\n\r\n  let textAreaInputAreaView = () => {\r\n    let view_list = text_area_name_list.map((value) => {\r\n      let temp = value;\r\n      return text_area_from_column(temp);\r\n    });\r\n    return <Col>{view_list}</Col>;\r\n  };\r\n\r\n  let timePickerView = () => {\r\n    let view_list = time_picker_name_list.map((value) => {\r\n      let temp = value;\r\n      return time_picker_from_column(temp);\r\n    });\r\n    return <Col>{view_list}</Col>;\r\n  };\r\n\r\n  let fill_info_view = () => {\r\n    return (\r\n      <Col>\r\n        <Card>\r\n          <Col>\r\n            <Row>\r\n              <Col>{leftInputView()}</Col>\r\n              <Divider type=\"vertical\" dashed={true}></Divider>\r\n              <Col>\r\n                {select_sex_view(\"resume_sex\")}\r\n                {select_education_view(\"resume_highest_degree\")}\r\n                {/* {rightInputView()} */}\r\n                {timePickerView()}\r\n              </Col>\r\n            </Row>\r\n            {textAreaInputAreaView()}\r\n            <Divider dashed={true}></Divider>\r\n            <Button\r\n              type=\"primary\"\r\n              disabled={!fill_all_info}\r\n              onClick={async () => {\r\n                let params = get_user_info();\r\n                let data = await user_upload_resume_api(params);\r\n                if (_.isEqual(\"0\", _.get(data, \"code\"))) {\r\n                  message.success(\"成功更新基本信息\");\r\n                }\r\n              }}\r\n            >\r\n              {fill_all_info ? \"更新个人信息\" : \"部分信息未填写\"}\r\n            </Button>\r\n          </Col>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row gutter={10} justify=\"center\" style={{ width: \"100%\" }}>\r\n      <Col flex={1}>\r\n        <Col>\r\n          <UploadHeadImgPanel />\r\n        </Col>\r\n        <Divider></Divider>\r\n        <Col>\r\n          <UploadResumeFilePanel />\r\n        </Col>\r\n      </Col>\r\n      <Col flex={1}>{fill_info_view()}</Col>\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Divider, Row, Upload, Tag, message } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport * as _ from \"lodash\";\r\nimport {\r\n  get_resume_file_name_api,\r\n  upload_resume_file_api,\r\n} from \"../net/netUser\";\r\nimport { global_var } from \"../global/userInfo\";\r\nimport { PassThrough } from \"stream\";\r\nimport { downloadResByFileName } from \"../net/netDownloadFile\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\n// 可以上传最多三份简历\r\nexport let UploadResumeFilePanel = () => {\r\n  let [resume_data, set_resume_data] = useState([]);\r\n  let [fn, set_fn] = useState(\"未提交\");\r\n  let [f_size, set_f_size] = useState(0);\r\n  let [resume_file, set_resume_file] = useState(\"\");\r\n\r\n  let [remote_file_name, set_remote_file_name] = useState(\"null\");\r\n\r\n  let get_file_name = async () => {\r\n    let params = {\r\n      user_uuid: _.get(global_var, \"user_info.user_uuid\", \"null\"),\r\n    };\r\n    let data = await get_resume_file_name_api(params);\r\n    //  console.log(\"=remote file name\", data);\r\n    set_remote_file_name(_.get(data, \"data.file_name\", \"未提交简历\"));\r\n    set_fn(_.get(data, \"data.file_name\", \"未提交简历\"));\r\n    console.log(\" 简历信息\", data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    get_file_name();\r\n  }, [resume_file]);\r\n\r\n  const props = {\r\n    name: \"input\",\r\n    accept: \".pdf,.html,.jpg,.png\",\r\n    beforeUpload: (file: any, fileList: any) => {\r\n      let async_upload = async () => {\r\n        let file_name = _.get(file, \"name\", \"未提交\");\r\n        let file_size = _.get(file, \"size\", 0);\r\n        set_fn(file_name);\r\n        set_f_size(file_size);\r\n        set_resume_file(file);\r\n        let formData = new FormData();\r\n        formData.set(\"file_name\", file_name);\r\n        formData.set(\"file\", file);\r\n        formData.set(\r\n          \"user_uuid\",\r\n          _.get(global_var, \"user_info.user_uuid\", \"null\")\r\n        );\r\n        await upload_resume_file_api(formData);\r\n        setTimeout(() => {\r\n          get_file_name();\r\n        }, 1000);\r\n      };\r\n      async_upload();\r\n      return false;\r\n    },\r\n    showUploadList: false,\r\n    //   action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    onChange(info: any) {\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n        // let fileName = _.get(info, \"file.name\", \"未提交\");\r\n        // let fileSize = _.get(info, \"file.size\", 0);\r\n        // set_fn(fileName);\r\n        // set_f_size(fileSize);\r\n      }\r\n    },\r\n  };\r\n\r\n  let upload_resume_file = () => {\r\n    return (\r\n      <Col>\r\n        <Dragger {...props} style={{ width: \"300px\" }}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">\r\n            拖动简历文件至此处\r\n            <br />\r\n            或者\r\n            <br />\r\n            点击上传\r\n            <br />\r\n            类型限制：.pdf , .html , .jpg , .png\r\n            <br />\r\n          </p>\r\n          <p className=\"ant-upload-text\" style={{ color: \"red\" }}>\r\n            {fn}\r\n          </p>\r\n        </Dragger>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row gutter={10} justify=\"center\" style={{ width: \"100%\" }}>\r\n      <Col>\r\n        <Row style={{ fontSize: \"larger\" }}>重复上传 将覆盖 原有简历</Row>\r\n        {upload_resume_file()}\r\n        <Divider dashed={true}></Divider>\r\n        <Row style={{ fontSize: \"larger\" }}>\r\n          <Tag style={{ fontSize: \"larger\" }} color=\"red\">\r\n            已上传简历：{remote_file_name}\r\n          </Tag>\r\n          <Divider type=\"vertical\"></Divider>\r\n        </Row>\r\n        <Divider dashed={true}></Divider>\r\n        <Row>\r\n          <Button\r\n            onClick={() => {\r\n              downloadResByFileName(\r\n                _.get(global_var, \"user_info.user_uuid\", \"null\"),\r\n                remote_file_name\r\n              );\r\n            }}\r\n            type=\"primary\"\r\n            style={{ fontSize: \"larger\" }}\r\n          >\r\n            {remote_file_name} 下载\r\n          </Button>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Divider, Row, Upload, Tag, message } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport * as _ from \"lodash\";\r\nimport {\r\n  get_headimg_name_api,\r\n  get_resume_file_name_api,\r\n  upload_headimg_api,\r\n} from \"../net/netUser\";\r\nimport { global_var } from \"../global/userInfo\";\r\nimport { PassThrough } from \"stream\";\r\nimport { downloadResByFileName } from \"../net/netDownloadFile\";\r\nimport { duration } from \"moment\";\r\nimport { nginx_download_url } from \"../net/netConfig\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"头像不能超过 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\n// 可以上传最多三份简历\r\nexport let UploadHeadImgPanel = () => {\r\n  let [fn, set_fn] = useState(\"未提交\");\r\n  let [f_size, set_f_size] = useState(0);\r\n  let [resume_file, set_resume_file] = useState(\"\");\r\n\r\n  let [image_url, set_image_url] = useState(\"\");\r\n\r\n  let get_file_name = async () => {\r\n    let params = {\r\n      user_uuid: _.get(global_var, \"user_info.user_uuid\", \"null\"),\r\n    };\r\n    let data = await get_headimg_name_api(params);\r\n    //  console.log(\"=remote file name\", data);\r\n\r\n    let file_url =\r\n      nginx_download_url +\r\n      _.get(global_var, \"user_info.user_uuid\", \"\") +\r\n      \"/\" +\r\n      \"headimg\" +\r\n      \"/\" +\r\n      _.get(data, \"data.file_name\", \"未上传头像\");\r\n    set_image_url(file_url);\r\n    console.log(\" 请求头像数据 \", data);\r\n    console.log(\" 头像url \", file_url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    get_file_name();\r\n  }, [resume_file]);\r\n\r\n  const props = {\r\n    name: \"input\",\r\n    accept: \".jpg,.png\",\r\n    beforeUpload: (file: any, fileList: any) => {\r\n      let async_upload = async () => {\r\n        let file_name = _.get(file, \"name\", \"未提交\");\r\n        set_fn(file_name);\r\n        set_resume_file(file);\r\n        let formData = new FormData();\r\n        formData.set(\"file_name\", file_name);\r\n        formData.set(\"file\", file);\r\n        formData.set(\r\n          \"user_uuid\",\r\n          _.get(global_var, \"user_info.user_uuid\", \"null\")\r\n        );\r\n        await upload_headimg_api(formData);\r\n        setTimeout(() => {\r\n          get_file_name();\r\n        }, 1000);\r\n      };\r\n\r\n      let check_head_img = async () => {\r\n        const isJpgOrPng =\r\n          file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n        if (!isJpgOrPng) {\r\n          message.error(\"只能上传 jpg png 图片\", 3);\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n          message.error(\"头像不能超过 2MB!\", 3);\r\n        }\r\n        if (isLt2M && isJpgOrPng) {\r\n          getBase64(file, (image_url) => set_image_url(image_url));\r\n          async_upload();\r\n        }\r\n      };\r\n      check_head_img();\r\n\r\n      // async_upload();\r\n      return false;\r\n    },\r\n    showUploadList: false,\r\n    //   action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    onChange(info: any) {\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n        // let fileName = _.get(info, \"file.name\", \"未提交\");\r\n        // let fileSize = _.get(info, \"file.size\", 0);\r\n        // set_fn(fileName);\r\n        // set_f_size(fileSize);\r\n      }\r\n    },\r\n  };\r\n\r\n  let upload_headimg_file = () => {\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined /> 上传头像 <br /> 仅限.jpg,.png\r\n      </div>\r\n    );\r\n    return (\r\n      <Col style={{ width: \"200px\", height: \"250px\" }}>\r\n        <Dragger\r\n          {...props}\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"250px\",\r\n            padding: \"0\",\r\n            margin: \"0\",\r\n          }}\r\n        >\r\n          {_.isEqual(\"\", image_url) ? (\r\n            uploadButton\r\n          ) : (\r\n            <img src={image_url} width={\"200px\"} height={\"250px\"} alt=\"\"></img>\r\n          )}\r\n        </Dragger>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row gutter={10} justify=\"center\" style={{ width: \"100%\" }}>\r\n      <Col>\r\n        <Row style={{ fontSize: \"larger\" }}>重复上传 将覆盖 原有头像</Row>\r\n        {upload_headimg_file()}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Upload,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Table,\r\n  Select,\r\n  Popover,\r\n  Divider,\r\n  Tag,\r\n} from \"antd\";\r\nimport { AnyCnameRecord } from \"dns\";\r\nimport {\r\n  RightCircleTwoTone,\r\n  QuestionCircleTwoTone,\r\n  DownloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport * as _ from \"lodash\";\r\n// import { getJobsByjob_nameApi } from \"../net/netJob\";\r\nimport prettyBytes from \"pretty-bytes\";\r\nimport ReactJson from \"react-json-view\";\r\nimport { duration } from \"moment\";\r\nimport { downloadResByUuid } from \"../net/netDownloadFile\";\r\nimport { select_job_api, set_job_status_api } from \"../net/netJob\";\r\nimport { min_education_view, name_chinese } from \"./releaseJobInfoPanel\";\r\nimport \"../component/watchJobInfoPanel.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { global_var } from \"../global/userInfo\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport let resume_info_status_view = (f) => {\r\n  let selects_ = [\"\", \"进行中\", \"结束\"];\r\n  let select_list = selects_.map((item) => {\r\n    return (\r\n      <Option key={item} value={item}>\r\n        {item === \"\" ? \"所有\" : item}\r\n      </Option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <Divider dashed={true} type=\"vertical\"></Divider>\r\n      <Tag color=\"red\"> {\"招聘状态\"} </Tag>\r\n      <Select\r\n        defaultValue=\"\"\r\n        style={{ width: 120 }}\r\n        onChange={(value) => {\r\n          f(value);\r\n        }}\r\n      >\r\n        {select_list}\r\n      </Select>\r\n      <Divider dashed={true} type=\"vertical\"></Divider>\r\n    </Row>\r\n  );\r\n};\r\n\r\n// {\"code\": \"0\", \"message\": \"\", \"data\": [{\"model\": \"trainModel.jobinfo\", \"pk\": 18, \"fields\": {\"jobuuid\": \"a783b09eeffb11ea9c180871908061a4\", \"jobstatus\": \"未开始\", \"job_category\": \"20200906-12:44:32\", \"starttime\": \"_\", \"endtime\": \"_\", \"savedir\": \"C:\\\\gitproj\\\\autotrain\\\\myServer\\\\storeFiles\\\\a783b09eeffb11ea9c180871908061a4\", \"csvname\": \"mnist_train.csv\", \"csvsize\": \"110 MB\", \"job_name\": \"asasa12\", \"modelsize\": \"0\", \"modelstructure\": \"0\", \"modeltotalsample\": \"0\", \"modeltrainsample\": \"0\", \"modeltestsample\": \"0\", \"modelvalidasample\": \"0\"}},\r\n\r\n// 支持 按照 发布时间 ,职位名称，行业类别 , 最低学历\r\n// 公司名称,  >= 最低薪水 , <=最高薪水 进行搜索\r\nexport let MangeJobInfoPanel = () => {\r\n  // 前端返回的数据\r\n  let [dataS, setDataS] = useState([]);\r\n\r\n  // 查询的变量\r\n  let [job_name, set_job_name] = useState(\"\");\r\n  let [job_category, set_job_category] = useState(\"\");\r\n  let [min_education, set_min_education] = useState(\"\");\r\n  let [company_name, set_company_name] = useState(\"\");\r\n\r\n  let [min_salary, set_min_salary] = useState(\"0\");\r\n  let [max_salary, set_max_salary] = useState(\"999999\");\r\n  let [job_create_time, set_job_create_time] = useState(\"\");\r\n  let [job_status, set_job_status] = useState(\"\");\r\n\r\n  let [page_index, set_page_index] = useState(\"1\");\r\n  let [sum_page_index, set_sum_page_index] = useState(\"1\");\r\n\r\n  let history = useHistory();\r\n\r\n  async function loadData() {\r\n    let params = {\r\n      page_index: page_index,\r\n      job_name: job_name,\r\n      job_category: job_category,\r\n      min_education: min_education,\r\n      company_name: company_name,\r\n      min_salary: min_salary,\r\n      max_salary: max_salary,\r\n      job_create_time: job_create_time,\r\n      job_status: job_status,\r\n    };\r\n    let data: any = await select_job_api(params);\r\n    // console.log(\"回传的 select_job_api data\", data);\r\n    setDataS(_.get(data, \"data.lists\", []));\r\n    set_sum_page_index(_.get(data, \"data.sum_page\"));\r\n  }\r\n\r\n  let maxHeight = document.body.clientHeight * 0.9;\r\n\r\n  useEffect(() => {\r\n    if (page_index === \"\") {\r\n      page_index = \"0\";\r\n    }\r\n    if (parseInt(page_index) < 1) {\r\n      message.error(\"页号必须 >1\");\r\n      set_page_index(\"1\");\r\n      return;\r\n    } else if (parseInt(page_index) > parseInt(sum_page_index)) {\r\n      message.error(\"页号不能溢出\");\r\n      set_page_index(sum_page_index);\r\n      return;\r\n    } else if (\r\n      parseInt(page_index) < 1 ||\r\n      parseInt(page_index) > parseInt(sum_page_index)\r\n    ) {\r\n      message.error(\"错误的页号\");\r\n      setDataS([]);\r\n      return;\r\n    }\r\n    loadData();\r\n  }, [page_index, job_status, min_education]);\r\n\r\n  let input_type_view = (column_name) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Input\r\n            addonBefore={name_chinese[`${column_name}_`]}\r\n            value={eval(column_name)}\r\n            onChange={(event) => {\r\n              let textValue = event.target.value;\r\n              eval(`set_${column_name}`)(textValue);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let filiter_inpus_view = () => {\r\n    return (\r\n      <Row gutter={10} justify=\"center\">\r\n        <Col>\r\n          <Row>\r\n            {input_type_view(\"job_name\")}\r\n            {input_type_view(\"job_category\")}\r\n            {input_type_view(\"job_create_time\")}\r\n            {input_type_view(\"company_name\")}\r\n          </Row>\r\n          <Row>\r\n            {input_type_view(\"min_salary\")}\r\n            {input_type_view(\"max_salary\")}\r\n            {min_education_view(\"\", set_min_education)}\r\n            {resume_info_status_view(set_job_status)}\r\n            <Col>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  loadData();\r\n                }}\r\n              >\r\n                执行查询\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  // \"fields\":{14 items\r\n  //   \"job_name\":string\"12\"\r\n  //   \"job_category\":string\"\"\r\n  //   \"min_education\":string\"\"\r\n  //   \"min_salary\":int1212\r\n  //   \"max_salary\":int343423\r\n  //   \"job_describe\":string\"\"\r\n  //   \"company_name\":string\"\"\r\n  //   \"job_demand\":string\"\"\r\n  //   \"company_tele\":string\"\"\r\n  //   \"company_email\":string\"\"\r\n  //   \"job_uuid\":string\"6473d957007011eb87498030491cc416\"\r\n  //   \"job_create_time\":string\"20200927-11:20:28\"\r\n  //   \"job_end_time\":string\"\"\r\n  //   \"job_status\":string\"进行中\"\r\n  //   }\r\n\r\n  const columns = [\r\n    {\r\n      title: \"岗位id\",\r\n      dataIndex: \"pk\",\r\n    },\r\n    {\r\n      title: name_chinese[\"job_name_\"],\r\n      dataIndex: [\"fields\", \"job_name\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"job_category_\"],\r\n      dataIndex: [\"fields\", \"job_category\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"min_education_\"],\r\n      dataIndex: [\"fields\", \"min_education\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"company_name_\"],\r\n      dataIndex: [\"fields\", \"company_name\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"min_salary_\"],\r\n      dataIndex: [\"fields\", \"min_salary\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"max_salary_\"],\r\n      dataIndex: [\"fields\", \"max_salary\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"job_status_\"],\r\n      dataIndex: [\"fields\", \"job_status\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"job_describe_\"],\r\n      key: \"job_describe\",\r\n      render: (text: any, record: any, index: number) => {\r\n        // console.log(\"record is\", record);\r\n        let show_text = _.get(record, \"fields.job_describe\", \"\");\r\n        let viewContent = () => {\r\n          return (\r\n            <Row>\r\n              <pre>{show_text === \"\" ? \"招聘方未填写\" : show_text}</pre>\r\n            </Row>\r\n          );\r\n        };\r\n        return (\r\n          <Popover\r\n            key=\"detailInfoPopover\"\r\n            trigger=\"hover\"\r\n            placement=\"left\"\r\n            title={name_chinese[\"job_describe_\"]}\r\n            content={viewContent()}\r\n          >\r\n            <Button icon={<QuestionCircleTwoTone />}></Button>\r\n          </Popover>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: name_chinese[\"job_demand_\"],\r\n      key: \"job_demand\",\r\n      render: (text: any, record: any, index: number) => {\r\n        // console.log(\"record is\", record);\r\n        let show_text = _.get(record, \"fields.job_demand\", \"\");\r\n        let viewContent = () => {\r\n          return (\r\n            <Row>\r\n              <pre>{show_text === \"\" ? \"招聘方未填写\" : show_text}</pre>\r\n            </Row>\r\n          );\r\n        };\r\n        return (\r\n          <Popover\r\n            key=\"detailInfoPopover\"\r\n            trigger=\"hover\"\r\n            placement=\"left\"\r\n            title={name_chinese[\"job_demand_\"]}\r\n            content={viewContent()}\r\n          >\r\n            <Button icon={<QuestionCircleTwoTone />}></Button>\r\n          </Popover>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"设置状态\",\r\n      key: \"modelRes\",\r\n      render: (text: any, record: any, index: number) => {\r\n        let job_uuid = _.get(record, \"fields.job_uuid\", \"\");\r\n        return (\r\n          <Row>\r\n            <Button\r\n              key=\"start_resume\"\r\n              type=\"primary\"\r\n              onClick={async () => {\r\n                let params = {\r\n                  job_uuid: job_uuid,\r\n                  job_status: \"进行中\",\r\n                };\r\n                let data = await set_job_status_api(params);\r\n                loadData();\r\n              }}\r\n            >\r\n              进行中\r\n            </Button>\r\n            <Button\r\n              key=\"stop_resume\"\r\n              type=\"dashed\"\r\n              onClick={async () => {\r\n                let params = {\r\n                  job_uuid: job_uuid,\r\n                  job_status: \"结束\",\r\n                };\r\n                let data = await set_job_status_api(params);\r\n                loadData();\r\n              }}\r\n            >\r\n              结束\r\n            </Button>\r\n          </Row>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"投递记录\",\r\n      key: \"delivery_record\",\r\n      render: (text: any, record: any, index: number) => {\r\n        let viewContent = () => {\r\n          return <Row>跳转至 该任务 的 投递详情 页面</Row>;\r\n        };\r\n        return (\r\n          <Popover\r\n            key=\"detailInfoPopover\"\r\n            trigger=\"hover\"\r\n            placement=\"left\"\r\n            title={\"查询任务详情\"}\r\n            content={viewContent()}\r\n          >\r\n            <Button\r\n              onClick={() => {\r\n                //  console.log(\"pk\", record);\r\n                global_var.admin_info.query_job_id = _.get(record, \"pk\");\r\n                //  console.log(\"全局变量的值\", global_var.admin_info.query_job_id);\r\n                setTimeout(() => {\r\n                  history.replace(\"/admin_main/candidate_record/\");\r\n                }, 200);\r\n              }}\r\n            >\r\n              查询\r\n            </Button>\r\n          </Popover>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  let page_index_view = () => {\r\n    return (\r\n      <Row>\r\n        <Tag style={{ fontSize: \"larger\" }}>共 {sum_page_index} 页</Tag>\r\n        <Divider type=\"vertical\"></Divider>\r\n        <Button\r\n          onClick={() => {\r\n            let index_ = parseInt(page_index) - 1;\r\n            set_page_index(index_.toString());\r\n          }}\r\n        >\r\n          上一页\r\n        </Button>\r\n        <Divider type=\"vertical\"></Divider>\r\n        <Button\r\n          onClick={() => {\r\n            let index_ = parseInt(page_index) + 1;\r\n            set_page_index(index_.toString());\r\n          }}\r\n        >\r\n          下一页\r\n        </Button>\r\n        <Divider type=\"vertical\"></Divider>\r\n        <Col>\r\n          <Input\r\n            addonBefore=\"跳转至\"\r\n            style={{ width: \"200px\" }}\r\n            type=\"number\"\r\n            value={page_index}\r\n            onChange={(e) => {\r\n              let textValue = e.target.value;\r\n              set_page_index(textValue);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Divider type=\"vertical\"></Divider>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      gutter={10}\r\n      style={{\r\n        width: \"100%\",\r\n        minHeight: maxHeight,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Col>\r\n        <Row gutter={10} justify=\"center\">\r\n          {\" \"}\r\n          模糊匹配搜索部分数据 样例: 日期格式 20200906-12:44:32{\" \"}\r\n        </Row>\r\n        {filiter_inpus_view()}\r\n        <Divider type=\"horizontal\" dashed={true}></Divider>\r\n        {page_index_view()}\r\n        <Table\r\n          rowKey={(record) => _.get(record, \"pk\", \"x\")}\r\n          dataSource={dataS}\r\n          columns={columns}\r\n          pagination={{ hideOnSinglePage: true }}\r\n          rowClassName={(record) => {\r\n            return _.isEqual(\"结束\", _.get(record, \"fields.job_status\"))\r\n              ? \"stop_resume_column\"\r\n              : \"start_resume_column\";\r\n          }}\r\n        />\r\n        <Divider type=\"horizontal\" dashed={true}></Divider>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Table,\r\n  Select,\r\n  Popover,\r\n  Divider,\r\n  Tag,\r\n} from \"antd\";\r\nimport { QuestionCircleTwoTone } from \"@ant-design/icons\";\r\nimport * as _ from \"lodash\";\r\n// import { getJobsByjob_nameApi } from \"../net/netJob\";\r\nimport \"../component/watchJobInfoPanel.css\";\r\nimport { global_var } from \"../global/userInfo\";\r\nimport {\r\n  get_candidate_info_api,\r\n  output_all_resume_info_api,\r\n  set_deliver_status_api,\r\n} from \"../net/netAdmin\";\r\nimport { downloadResByFileName } from \"../net/netDownloadFile\";\r\nimport { get_resume_file_name_api } from \"../net/netUser\";\r\nimport { time } from \"console\";\r\nimport { select_job_by_id_api } from \"../net/netJob\";\r\n\r\nconst { Option } = Select;\r\n\r\n// 比较重要的列 姓名 专业 最高学历 性别 毕业时间 到岗时间 所在地\r\n// resume_name  resume_late_major  resume_highest_degree  resume_sex  resume_graduation_date  resume_expected_arrival_time  resume_location\r\nlet name_chinese = {\r\n  // input 字段\r\n  query_job_id: \"岗位id\",\r\n  select_job_id: \"岗位id\",\r\n  resume_name: \"姓名\",\r\n  resume_school: \"学校名称\",\r\n  resume_tele: \"电话\",\r\n  resume_email: \"电子邮箱\",\r\n  resume_location: \"所在地\",\r\n  resume_late_major: \"专业\",\r\n  resume_highest_degree: \"最高学历\",\r\n  resume_sex: \"性别\",\r\n\r\n  // 时间选择器\r\n  resume_birthday: \"出生年月\",\r\n  resume_expected_arrival_time: \"到岗时间\",\r\n  resume_graduation_date: \"毕业时间\",\r\n\r\n  // text\r\n  resume_skill: \"能力\",\r\n  resume_award: \"曾获奖励\",\r\n  resume_self_description: \"自我介绍\",\r\n  resume_project_experience: \"项目经验\",\r\n  resume_internship: \"实习经历\",\r\n  resume_job_intension: \"求职意向\",\r\n  candidate_detail: \"候选人信息\",\r\n};\r\n\r\nexport let resume_info_status_view = (f) => {\r\n  let selects_ = [\"\", \"进行中\", \"结束\"];\r\n  let select_list = selects_.map((item) => {\r\n    return (\r\n      <Option key={item} value={item}>\r\n        {item === \"\" ? \"所有\" : item}\r\n      </Option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <Divider dashed={true} type=\"vertical\"></Divider>\r\n      <Tag color=\"red\"> {\"招聘状态\"} </Tag>\r\n      <Select\r\n        defaultValue=\"\"\r\n        style={{ width: 120 }}\r\n        onChange={(value) => {\r\n          f(value);\r\n        }}\r\n      >\r\n        {select_list}\r\n      </Select>\r\n      <Divider dashed={true} type=\"vertical\"></Divider>\r\n    </Row>\r\n  );\r\n};\r\n\r\n// {\"code\": \"0\", \"message\": \"\", \"data\": [{\"model\": \"trainModel.jobinfo\", \"pk\": 18, \"fields\": {\"jobuuid\": \"a783b09eeffb11ea9c180871908061a4\", \"jobstatus\": \"未开始\", \"job_category\": \"20200906-12:44:32\", \"starttime\": \"_\", \"endtime\": \"_\", \"savedir\": \"C:\\\\gitproj\\\\autotrain\\\\myServer\\\\storeFiles\\\\a783b09eeffb11ea9c180871908061a4\", \"csvname\": \"mnist_train.csv\", \"csvsize\": \"110 MB\", \"job_name\": \"asasa12\", \"modelsize\": \"0\", \"modelstructure\": \"0\", \"modeltotalsample\": \"0\", \"modeltrainsample\": \"0\", \"modeltestsample\": \"0\", \"modelvalidasample\": \"0\"}},\r\n\r\n// 支持 按照 发布时间 ,职位名称，行业类别 , 最低学历\r\n// 公司名称,  >= 最低薪水 , <=最高薪水 进行搜索\r\nexport let MangeDeliverInfoPanel = () => {\r\n  // 前端返回的数据\r\n  let [dataS, setDataS] = useState([]);\r\n  //\r\n  let [job_name, set_job_name] = useState(\"未查询\");\r\n\r\n  // 查询的变量\r\n  let [query_job_id, set_query_job_id] = useState(\"\");\r\n  let [deliver_status, set_deliver_status] = useState(\"申请中\");\r\n\r\n  let [page_index, set_page_index] = useState(\"1\");\r\n  let [sum_page_index, set_sum_page_index] = useState(\"1\");\r\n\r\n  async function loadData() {\r\n    let params = {\r\n      query_job_id: query_job_id,\r\n      page_index: page_index,\r\n      deliver_status: deliver_status,\r\n    };\r\n    let data: any = await get_candidate_info_api(params);\r\n    // console.log(\"回传的 select_job_api data\", data);\r\n    setDataS(_.get(data, \"data.lists\", []));\r\n    set_sum_page_index(_.get(data, \"data.sum_page\"));\r\n  }\r\n\r\n  let maxHeight = document.body.clientHeight * 0.9;\r\n\r\n  // 初始化 任务id\r\n  useEffect(() => {\r\n    let time0 = setInterval(() => {\r\n      let query_id = _.get(global_var, \"admin_info.query_job_id\", \"\");\r\n      if (!_.isEqual(query_job_id, query_id)) {\r\n        set_query_job_id(query_id);\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      window.clearInterval(time0);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let reflash_job_name = async () => {\r\n      if (!_.isEqual(\"\", query_job_id)) {\r\n        let params = { job_id: query_job_id };\r\n        let job_data = await select_job_by_id_api(params);\r\n        set_job_name(_.get(job_data, \"data[0].fields.job_name\", \"岗位id错误\"));\r\n      } else {\r\n        set_job_name(\"所有岗位\");\r\n      }\r\n      loadData();\r\n    };\r\n    reflash_job_name();\r\n  }, [query_job_id]);\r\n\r\n  // 监听 分页器 变化\r\n  useEffect(() => {\r\n    if (page_index === \"\") {\r\n      page_index = \"0\";\r\n    }\r\n    if (parseInt(page_index) < 1) {\r\n      message.error(\"页号必须 >1\");\r\n      set_page_index(\"1\");\r\n      return;\r\n    } else if (parseInt(page_index) > parseInt(sum_page_index)) {\r\n      message.error(\"页号不能溢出\");\r\n      set_page_index(sum_page_index);\r\n      return;\r\n    } else if (\r\n      parseInt(page_index) < 1 ||\r\n      parseInt(page_index) > parseInt(sum_page_index)\r\n    ) {\r\n      message.error(\"错误的页号\");\r\n      setDataS([]);\r\n      return;\r\n    }\r\n    loadData();\r\n  }, [page_index, deliver_status]);\r\n\r\n  let job_id_input_type_view = (column_name) => {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Input\r\n            addonBefore={name_chinese[`${column_name}`]}\r\n            value={eval(column_name)}\r\n            onChange={(event) => {\r\n              let textValue = event.target.value;\r\n              global_var.admin_info.query_job_id = textValue;\r\n              // let query_id = _.get(global_var, \"admin_info.query_job_id\", \"-1\");\r\n              eval(`set_${column_name}`)(textValue);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let select_deliver_status_view = (c_name) => {\r\n    let selects_ = [\"\", \"申请中\", \"淘汰\", \"通过\"];\r\n    let select_list = selects_.map((item) => {\r\n      return (\r\n        <Option key={item} value={item}>\r\n          {item === \"\" ? \"所有\" : item}\r\n        </Option>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Row>\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Tag color=\"red\"> {\"投递状态\"} </Tag>\r\n        <Select\r\n          defaultValue=\"申请中\"\r\n          style={{ width: 120 }}\r\n          onChange={(value) => {\r\n            eval(`set_${c_name}`)(value);\r\n          }}\r\n        >\r\n          {select_list}\r\n        </Select>\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let filiter_inpus_view = () => {\r\n    return (\r\n      <Row gutter={10} justify=\"center\">\r\n        <Col>\r\n          <Row style={{ fontSize: \"larger\" }}>\r\n            {job_id_input_type_view(\"query_job_id\")}\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Tag color=\"red\" style={{ fontSize: \"larger\" }}>\r\n              岗位名称\r\n            </Tag>\r\n            <Tag style={{ fontSize: \"larger\" }}> {job_name} </Tag>\r\n            <Divider type=\"vertical\"></Divider>\r\n            {select_deliver_status_view(\"deliver_status\")}\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                loadData();\r\n              }}\r\n            >\r\n              执行查询\r\n            </Button>\r\n            <Divider type=\"vertical\"></Divider>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                output_all_resume_info_api({});\r\n              }}\r\n            >\r\n              导出所有应聘信息\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  //   fields:\r\n  // resume_award: \"编码\"\r\n  // resume_birthday: \"2020-10\"\r\n  // resume_email: \"734449600@qq.com\"\r\n  // resume_expected_arrival_time: \"2020-10\"\r\n  // resume_graduation_date: \"2020-10\"\r\n  // resume_highest_degree: \"本科\"\r\n  // resume_internship: \"阿里巴巴↵1↵2↵12↵\"\r\n  // resume_job_intension: \"在北京工作↵12↵2↵12↵1↵2\"\r\n  // resume_late_major: \"计算机科学\"\r\n  // resume_location: \"河南鹤壁\"\r\n  // resume_name: \"李孟凯\"\r\n  // resume_project_experience: \"热爱↵121↵1↵21↵2↵\"\r\n  // resume_school: \"石家庄铁道大学\"\r\n  // resume_self_description: \"开朗\"\r\n  // resume_sex: \"男\"\r\n  // resume_skill: \"开发能力\"\r\n  // resume_tele: \"18231129677\"\r\n  // resume_uuid: \"95e359f0044611eb93f78030491cc416\"\r\n  // user_uuid: \"d7026be802be11eb82c08030491cc416\"\r\n\r\n  // 比较重要的列 姓名 专业 最高学历 性别 毕业时间 到岗时间 所在地\r\n  // resume_name  resume_late_major  resume_highest_degree  resume_sex  resume_graduation_date  resume_expected_arrival_time  resume_location\r\n  const columns = [\r\n    {\r\n      title: name_chinese[\"resume_name\"],\r\n      dataIndex: [\"fields\", \"resume_name\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"resume_tele\"],\r\n      dataIndex: [\"fields\", \"resume_tele\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"resume_school\"],\r\n      dataIndex: [\"fields\", \"resume_school\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"resume_late_major\"],\r\n      dataIndex: [\"fields\", \"resume_late_major\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"resume_highest_degree\"],\r\n      dataIndex: [\"fields\", \"resume_highest_degree\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"resume_sex\"],\r\n      dataIndex: [\"fields\", \"resume_sex\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"resume_graduation_date\"],\r\n      dataIndex: [\"fields\", \"resume_graduation_date\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"resume_expected_arrival_time\"],\r\n      dataIndex: [\"fields\", \"resume_expected_arrival_time\"],\r\n    },\r\n    {\r\n      title: name_chinese[\"resume_location\"],\r\n      dataIndex: [\"fields\", \"resume_location\"],\r\n    },\r\n    {\r\n      title: \"详细信息\",\r\n      key: \"candidate_detail\",\r\n      render: (text: any, record: any, index: number) => {\r\n        // console.log(\"record is\", record);\r\n\r\n        let detail_view = () => {\r\n          let detail_info_view = (c_name: any) => {\r\n            let c_name_path = `fields.${c_name}`;\r\n            let text_value = _.get(record, c_name_path, \"不存在该字段\");\r\n\r\n            return _.isEqual(\"不存在该字段\", text_value) ? (\r\n              <Col key={c_name}></Col>\r\n            ) : (\r\n              <Row key={c_name}>\r\n                <Col>\r\n                  <Row>\r\n                    <Col>\r\n                      <Tag style={{ fontSize: \"larger\" }}>\r\n                        {name_chinese[c_name]}\r\n                      </Tag>\r\n                    </Col>\r\n                    <Row>\r\n                      <pre style={{ fontSize: \"larger\" }}>{text_value}</pre>\r\n                    </Row>\r\n                  </Row>\r\n                  <Divider></Divider>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          };\r\n          let left_info_columns = Object.keys(name_chinese).map(\r\n            (c_name: string, index: number) => {\r\n              return index % 2 == 0 ? (\r\n                detail_info_view(c_name)\r\n              ) : (\r\n                <Col key={c_name}></Col>\r\n              );\r\n            }\r\n          );\r\n          let right_info_columns = Object.keys(name_chinese).map(\r\n            (c_name: string, index: number) => {\r\n              return index % 2 == 1 ? (\r\n                detail_info_view(c_name)\r\n              ) : (\r\n                <Col key={c_name}></Col>\r\n              );\r\n            }\r\n          );\r\n\r\n          return (\r\n            <Row>\r\n              <Col>{left_info_columns}</Col>\r\n              <Divider type=\"vertical\"></Divider>\r\n              <Col>{right_info_columns}</Col>\r\n            </Row>\r\n          );\r\n        };\r\n        return (\r\n          <Popover\r\n            key=\"candidate_detail\"\r\n            trigger=\"hover\"\r\n            placement=\"left\"\r\n            title={name_chinese[\"candidate_detail\"]}\r\n            content={detail_view()}\r\n          >\r\n            <Button icon={<QuestionCircleTwoTone />}></Button>\r\n          </Popover>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      // 设置是否通过应聘者\r\n      title: \"设置状态\",\r\n      key: \"modelRes\",\r\n      render: (text: any, record: any, index: number) => {\r\n        let job_uuid = _.get(record, \"fields.job_uuid\", \"\");\r\n        let user_uuid = _.get(record, \"fields.user_uuid\", \"\");\r\n        //  console.log(\"job_uuid \", record);\r\n        //  console.log(\"user_uuid \", user_uuid);\r\n        return (\r\n          <Row>\r\n            <Button\r\n              key=\"start_resume\"\r\n              type=\"primary\"\r\n              onClick={async () => {\r\n                let params = {\r\n                  job_id: query_job_id,\r\n                  user_uuid: user_uuid,\r\n                  deliver_status: \"通过\",\r\n                };\r\n                let data = await set_deliver_status_api(params);\r\n                loadData();\r\n              }}\r\n            >\r\n              通过\r\n            </Button>\r\n            <Button\r\n              key=\"stop_resume\"\r\n              type=\"dashed\"\r\n              onClick={async () => {\r\n                let params = {\r\n                  job_id: query_job_id,\r\n                  user_uuid: user_uuid,\r\n                  deliver_status: \"淘汰\",\r\n                };\r\n                let data = await set_deliver_status_api(params);\r\n                loadData();\r\n              }}\r\n            >\r\n              淘汰\r\n            </Button>\r\n          </Row>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"下载简历\",\r\n      key: \"delivery_record\",\r\n      render: (text: any, record: any, index: number) => {\r\n        // console.log(\"record is\", record);\r\n\r\n        let viewContent = () => {\r\n          return <Row>下载应聘者简历</Row>;\r\n        };\r\n        return (\r\n          <Popover\r\n            key=\"detailInfoPopover\"\r\n            trigger=\"hover\"\r\n            placement=\"left\"\r\n            title={name_chinese[\"job_demand_\"]}\r\n            content={viewContent()}\r\n          >\r\n            <Button\r\n              onClick={async () => {\r\n                let get_file_name = async () => {\r\n                  let params = {\r\n                    user_uuid: _.get(record, \"fields.user_uuid\", \"null\"),\r\n                  };\r\n                  let data = await get_resume_file_name_api(params);\r\n                  //  console.log(\"=remote file name\", data);\r\n                  return _.get(data, \"data.file_name\", \"未提交简历\");\r\n                };\r\n                let remote_file_name = await get_file_name();\r\n                downloadResByFileName(\r\n                  _.get(record, \"fields.user_uuid\", \"null\"),\r\n                  remote_file_name\r\n                );\r\n              }}\r\n              type=\"primary\"\r\n              style={{ fontSize: \"larger\" }}\r\n            >\r\n              下载\r\n            </Button>\r\n          </Popover>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  let page_index_view = () => {\r\n    return (\r\n      <Row>\r\n        <Tag style={{ fontSize: \"larger\" }}>共 {sum_page_index} 页</Tag>\r\n        <Divider type=\"vertical\"></Divider>\r\n        <Button\r\n          onClick={() => {\r\n            let index_ = parseInt(page_index) - 1;\r\n            set_page_index(index_.toString());\r\n          }}\r\n        >\r\n          上一页\r\n        </Button>\r\n        <Divider type=\"vertical\"></Divider>\r\n        <Button\r\n          onClick={() => {\r\n            let index_ = parseInt(page_index) + 1;\r\n            set_page_index(index_.toString());\r\n          }}\r\n        >\r\n          下一页\r\n        </Button>\r\n        <Divider type=\"vertical\"></Divider>\r\n        <Col>\r\n          <Input\r\n            addonBefore=\"跳转至\"\r\n            style={{ width: \"200px\" }}\r\n            type=\"number\"\r\n            value={page_index}\r\n            onChange={(e) => {\r\n              let textValue = e.target.value;\r\n              set_page_index(textValue);\r\n            }}\r\n          />\r\n        </Col>\r\n        <Divider type=\"vertical\"></Divider>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      gutter={10}\r\n      style={{\r\n        width: \"100%\",\r\n        minHeight: maxHeight,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Col>\r\n        <Row gutter={10} justify=\"center\" style={{ fontSize: \"larger\" }}>\r\n          根据招聘 岗位id 查看投递人\r\n        </Row>\r\n        <Row gutter={10} justify=\"center\" style={{ fontSize: \"larger\" }}>\r\n          任务id为 空 则查询所有职位投递人\r\n        </Row>\r\n        <Row\r\n          gutter={10}\r\n          justify=\"center\"\r\n          style={{ fontSize: \"larger\", color: \"red\" }}\r\n        >\r\n          查询所有人时，不可以设置简历状态\r\n        </Row>\r\n        {filiter_inpus_view()}\r\n        <Divider type=\"horizontal\" dashed={true}></Divider>\r\n        {page_index_view()}\r\n        <Table\r\n          rowKey={(record) => _.get(record, \"pk\", \"x\")}\r\n          dataSource={dataS}\r\n          columns={columns}\r\n          pagination={{ hideOnSinglePage: true }}\r\n        />\r\n        <Divider type=\"horizontal\" dashed={true}></Divider>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","// dev\r\n// export let Gproxy = \"http://localhost:8000\";\r\n// export let nginxProxy = \"http://localhost:39999\";\r\n\r\n// deployment\r\nexport let Gproxy = \"\";\r\nexport let nginxProxy = \"\";\r\n\r\nexport let Gtimeout = 2000;\r\n\r\n//  前端 请求 post 接口的时候 一定要  要在 接口 末尾 加上 /\r\n//  否则 接口会 出现莫名其妙的错误\r\n\r\n// 管理者----------------------------------------------------------\r\n// #http://127.0.0.1:8000/api/adminApp/adminlogin/?data={\"admin_tele\": \"admin\",\"admin_pwd\":\"123456\"}\r\nexport let admin_login_url = \"/api/adminApp/adminLogin/\";\r\n\r\nexport let get_candidate_info_url = \"/api/adminApp/getCandidateInfo/\";\r\n\r\nexport let output_all_resume_info_url = \"/api/adminApp/outputAllResumeInfo/\";\r\n\r\n// 用户 ----------------------------------------------------------------\r\n// 用户注册 的 url\r\nexport let user_register_url = \"/api/userApp/register/\";\r\n\r\n// 用户注册 的 url\r\nexport let user_login_url = \"/api/userApp/login/\";\r\nexport let user_upload_resume_url = \"/api/userApp/uploadresume/\";\r\n\r\nexport let get_user_resume_info_url = \"/api/userApp/getUserInfoByUuid/\";\r\n\r\nexport let upload_resume_file_url = \"/api/userApp/uploadResumeFile/\";\r\n\r\nexport let upload_headimg_url = \"/api/userApp/uploadHeadimg/\";\r\n\r\nexport let get_resume_file_name_url = \"/api/userApp/getResumeFileName/\";\r\n\r\nexport let get_headimg_name_url = \"/api/userApp/getHeadimgName/\";\r\n\r\nexport let deliver_job_url = \"/api/userApp/deliverJob/\";\r\n\r\nexport let get_deliver_status_url = \"/api/userApp/getDeliverStatus/\";\r\n\r\nexport let set_deliver_status_url = \"/api/userApp/setDeliverStatus/\";\r\n\r\n// export let set_deliver_status_url = \"/api/userApp/setDeliverStatus/\";\r\n\r\n// 工作 ----------------------------------------------------------------\r\n// http://127.0.0.1:8000/api/jobApp/publishJobInfo/?data={\"job_name\":\"前端工程师\",\"job_category\":\"互联网/程序开发\",\"min_education\":\"大学本科\",\"min_salary\":\"5000\",\"max_salary\":\"12000\",\"job_describe\":\"熟悉Vue/React等热门前端框架,有相关工作经验者优先录取\",\"company_name\":\"环球企业中国市场研究院\",\"job_demand\":\"有上进心对工作有强烈的责任感，有问题到我而止的精神\",\"company_tele\":\"123456789\",\"company_email\":\"XXXX@XXX.com\",\"job_end_time\":\"2021年3月21日\"}\r\n\r\nexport let publish_job_url = \"/api/jobApp/publishJobInfo/\";\r\nexport let select_job_by_id_url = \"/api/jobApp/selectJobById/\";\r\nexport let select_job_url = \"/api/jobApp/selectJobInfoByOptions/\";\r\nexport let set_job_status_url = \"/api/jobApp/setJobStatus/\";\r\n\r\n// docs url\r\nexport let download_url = \"/api/downloadFile/downloadByName/\";\r\n\r\n// nginx download\r\nexport let nginx_download_url = nginxProxy + \"/storeFiles/\";\r\n","export let global_var: any = {\r\n  user_info: { user_uuid: \"null\" },\r\n  admin_info: { query_job_id: \"\" },\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Divider,\r\n  Input,\r\n  Row,\r\n  Tag,\r\n  message,\r\n  Select,\r\n} from \"antd\";\r\nimport { publish_job_api } from \"../net/netJob\";\r\nimport * as _ from \"lodash\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\n// job_name  // job_category\r\n\r\n// company_name  // min_education\r\n\r\n// company_tele  // company_email\r\n\r\n// min_salary  // max_salary\r\n\r\n// job_describe\r\n\r\n// job_demand\r\n\r\nexport let name_chinese = {\r\n  job_name_: \"职位名称\",\r\n  job_category_: \"行业类别\",\r\n  company_name_: \"公司名称\",\r\n  min_education_: \"最低学历\",\r\n  company_tele_: \"公司电话\",\r\n  company_email_: \"公司邮箱\",\r\n  min_salary_: \"最低薪水\",\r\n  max_salary_: \"最高薪水\",\r\n  job_describe_: \"工作描述\",\r\n  job_demand_: \"能力要求\",\r\n  job_create_time_: \"发布时间\",\r\n  job_status_: \"招聘状态\",\r\n};\r\n\r\nexport let min_education_view = (default_value: string, f: any) => {\r\n  let min_education_selects = [\r\n    \"大专\",\r\n    \"本科\",\r\n    \"硕士\",\r\n    \"博士\",\r\n    \"中专\",\r\n    \"高中\",\r\n    \"初中\",\r\n    \"小学\",\r\n    \"其他\",\r\n    \"\",\r\n  ];\r\n  let select_list = min_education_selects.map((item) => {\r\n    return (\r\n      <Option key={item} value={item}>\r\n        {item == \"\" ? \"不限\" : item}\r\n      </Option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <Divider type=\"vertical\"></Divider>\r\n      <Tag color=\"red\"> {name_chinese[\"min_education_\"]} </Tag>\r\n      <Select\r\n        defaultValue={default_value}\r\n        style={{ width: 120 }}\r\n        onChange={(value) => {\r\n          f(value);\r\n        }}\r\n      >\r\n        {select_list}\r\n      </Select>\r\n      <Divider type=\"vertical\"></Divider>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport let RealseJobInfoPanel = () => {\r\n  let [job_name, set_job_name] = useState(\"\");\r\n  let [job_category, set_job_category] = useState(\"\");\r\n  let [company_name, set_company_name] = useState(\"\");\r\n  let [min_education, set_min_education] = useState(\"本科\");\r\n  let [company_tele, set_company_tele] = useState(\"\");\r\n  let [company_email, set_company_email] = useState(\"\");\r\n  let [min_salary, set_min_salary] = useState(\"\");\r\n  let [max_salary, set_max_salary] = useState(\"\");\r\n  let [job_describe, set_job_describe] = useState(\"\");\r\n  let [job_demand, set_job_demand] = useState(\"\");\r\n\r\n  let clear_info = () => {\r\n    set_job_name(\"\");\r\n    set_job_category(\"\");\r\n    set_company_name(\"\");\r\n    set_min_education(\"\");\r\n    set_company_tele(\"\");\r\n    set_company_tele(\"\");\r\n    set_company_email(\"\");\r\n    set_min_salary(\"\");\r\n    set_max_salary(\"\");\r\n    set_job_describe(\"\");\r\n    set_job_demand(\"\");\r\n  };\r\n\r\n  let maxHeight = document.body.clientHeight * 0.9;\r\n  let leftInputView = () => {\r\n    return (\r\n      <Col>\r\n        <Divider dashed={true}></Divider>\r\n        <Input\r\n          addonBefore={name_chinese[\"job_name_\"]}\r\n          value={job_name}\r\n          onChange={(event) => {\r\n            let default_len = 100;\r\n            let textValue = event.target.value;\r\n\r\n            if (textValue.length > default_len) {\r\n              set_job_name(\"\");\r\n              let config = {\r\n                content: (\r\n                  <Row>\r\n                    {name_chinese[\"job_name_\"]} 不能超过 {default_len} 位\r\n                  </Row>\r\n                ),\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            } else {\r\n              set_job_name(textValue);\r\n            }\r\n          }}\r\n        ></Input>\r\n\r\n        <Divider dashed={true}></Divider>\r\n        <Row>\r\n          <Input\r\n            addonBefore={name_chinese[\"company_name_\"]}\r\n            value={company_name}\r\n            onChange={(event) => {\r\n              let default_len = 100;\r\n              let textValue = event.target.value;\r\n\r\n              if (textValue.length > default_len) {\r\n                set_company_name(\"\");\r\n                let config = {\r\n                  content: (\r\n                    <Row>\r\n                      {name_chinese[\"company_name_\"]} 不能超过 {default_len} 位\r\n                    </Row>\r\n                  ),\r\n                  duration: 3,\r\n                };\r\n                message.error(config);\r\n              } else {\r\n                set_company_name(textValue);\r\n              }\r\n            }}\r\n          ></Input>\r\n        </Row>\r\n        <Divider dashed={true}></Divider>\r\n        <Row>\r\n          <Input\r\n            addonBefore={name_chinese[\"company_tele_\"]}\r\n            value={company_tele}\r\n            onChange={(event) => {\r\n              let default_len = 100;\r\n              let textValue = event.target.value;\r\n\r\n              if (textValue.length > default_len) {\r\n                set_company_tele(\"\");\r\n                let config = {\r\n                  content: (\r\n                    <Row>\r\n                      {name_chinese[\"company_tele_\"]} 不能超过 {default_len} 位\r\n                    </Row>\r\n                  ),\r\n                  duration: 3,\r\n                };\r\n                message.error(config);\r\n              } else {\r\n                set_company_tele(textValue);\r\n              }\r\n            }}\r\n          ></Input>\r\n        </Row>\r\n        <Divider dashed={true}></Divider>\r\n        <Row>\r\n          <Input\r\n            addonBefore={name_chinese[\"min_salary_\"]}\r\n            value={min_salary}\r\n            onChange={(event) => {\r\n              let default_len = 100;\r\n              let textValue = event.target.value;\r\n\r\n              if (textValue.length > default_len) {\r\n                set_min_salary(\"\");\r\n                let config = {\r\n                  content: (\r\n                    <Row>\r\n                      {name_chinese[\"min_salary_\"]} 不能超过 {default_len} 位\r\n                    </Row>\r\n                  ),\r\n                  duration: 3,\r\n                };\r\n                message.error(config);\r\n              } else {\r\n                set_min_salary(textValue);\r\n              }\r\n            }}\r\n          ></Input>\r\n        </Row>\r\n        <Divider dashed={true}></Divider>\r\n      </Col>\r\n    );\r\n  };\r\n  let rightInputView = () => {\r\n    return (\r\n      <Col>\r\n        <Divider dashed={true}></Divider>\r\n        <Row>\r\n          <Input\r\n            addonBefore={name_chinese[\"job_category_\"]}\r\n            value={job_category}\r\n            onChange={(event) => {\r\n              let default_len = 100;\r\n              let textValue = event.target.value;\r\n\r\n              if (textValue.length > default_len) {\r\n                set_job_category(\"\");\r\n                let config = {\r\n                  content: (\r\n                    <Row>\r\n                      {name_chinese[\"job_category_\"]} 不能超过 {default_len} 位\r\n                    </Row>\r\n                  ),\r\n                  duration: 3,\r\n                };\r\n                message.error(config);\r\n              } else {\r\n                set_job_category(textValue);\r\n              }\r\n            }}\r\n          ></Input>\r\n        </Row>\r\n        <Divider dashed={true}></Divider>\r\n        <Row>{min_education_view(\"本科\", set_min_education)}</Row>\r\n        <Divider dashed={true}></Divider>\r\n        <Row>\r\n          <Input\r\n            addonBefore={name_chinese[\"company_email_\"]}\r\n            value={company_email}\r\n            onChange={(event) => {\r\n              let default_len = 100;\r\n              let textValue = event.target.value;\r\n\r\n              if (textValue.length > default_len) {\r\n                set_company_email(\"\");\r\n                let config = {\r\n                  content: (\r\n                    <Row>\r\n                      {name_chinese[\"company_email_\"]} 不能超过 {default_len} 位\r\n                    </Row>\r\n                  ),\r\n                  duration: 3,\r\n                };\r\n                message.error(config);\r\n              } else {\r\n                set_company_email(textValue);\r\n              }\r\n            }}\r\n          ></Input>\r\n        </Row>\r\n        <Divider dashed={true}></Divider>\r\n        <Row>\r\n          <Input\r\n            addonBefore={name_chinese[\"max_salary_\"]}\r\n            value={max_salary}\r\n            onChange={(event) => {\r\n              let default_len = 100;\r\n              let textValue = event.target.value;\r\n\r\n              if (textValue.length > default_len) {\r\n                set_max_salary(\"\");\r\n                let config = {\r\n                  content: (\r\n                    <Row>\r\n                      {name_chinese[\"max_salary_\"]} 不能超过 {default_len} 位\r\n                    </Row>\r\n                  ),\r\n                  duration: 3,\r\n                };\r\n                message.error(config);\r\n              } else {\r\n                set_max_salary(textValue);\r\n              }\r\n            }}\r\n          ></Input>\r\n        </Row>\r\n        <Divider dashed={true}></Divider>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  let jobDescribeView = () => {\r\n    let auto_config = { minRows: 5 };\r\n    return (\r\n      <Col>\r\n        <Tag color=\"blue\"> {name_chinese[\"job_describe_\"]} </Tag>\r\n        <TextArea\r\n          autoSize={auto_config}\r\n          value={job_describe}\r\n          onChange={(event) => {\r\n            let default_len = 1000;\r\n            let textValue = event.target.value;\r\n\r\n            if (textValue.length > default_len) {\r\n              set_job_describe(\"\");\r\n              let config = {\r\n                content: (\r\n                  <Row>\r\n                    {name_chinese[\"job_describe_\"]} 不能超过 {default_len} 位\r\n                  </Row>\r\n                ),\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            } else {\r\n              set_job_describe(textValue);\r\n            }\r\n          }}\r\n        />\r\n      </Col>\r\n    );\r\n  };\r\n  let jobDemandView = () => {\r\n    let auto_config = { minRows: 5 };\r\n    return (\r\n      <Col>\r\n        <Tag color=\"blue\"> {name_chinese[\"job_demand_\"]} </Tag>\r\n        <TextArea\r\n          autoSize={auto_config}\r\n          value={job_demand}\r\n          onChange={(event) => {\r\n            let default_len = 1000;\r\n            let textValue = event.target.value;\r\n\r\n            if (textValue.length > default_len) {\r\n              set_job_demand(\"\");\r\n              let config = {\r\n                content: (\r\n                  <Row>\r\n                    {name_chinese[\"job_demand_\"]} 不能超过 {default_len} 位\r\n                  </Row>\r\n                ),\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            } else {\r\n              set_job_demand(textValue);\r\n            }\r\n          }}\r\n        />\r\n      </Col>\r\n    );\r\n  };\r\n  let fill_card_view = () => {\r\n    return (\r\n      <Card>\r\n        <Col>\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          ></Row>\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {leftInputView()}\r\n            <Divider dashed={true} type=\"vertical\"></Divider>\r\n            {rightInputView()}\r\n          </Row>\r\n          {jobDescribeView()}\r\n          <Divider dashed={true}></Divider>\r\n          {jobDemandView()}\r\n          <Divider dashed={true}></Divider>\r\n          <Button\r\n            type=\"primary\"\r\n            disabled={job_name == \"\"}\r\n            onClick={async () => {\r\n              let params = {\r\n                job_name: job_name,\r\n                job_category: job_category,\r\n                company_name: company_name,\r\n                min_education: min_education,\r\n                company_tele: company_tele,\r\n                company_email: company_email,\r\n                min_salary: min_salary,\r\n                max_salary: max_salary,\r\n                job_describe: job_describe,\r\n                job_demand: job_demand,\r\n              };\r\n              let data = await publish_job_api(params);\r\n              if (_.isEqual(\"0\", _.get(data, \"code\"))) {\r\n                // console.log(\"求职信息\", data);\r\n                message.info(\"发布成功\");\r\n                clear_info();\r\n              }\r\n            }}\r\n          >\r\n            {job_name == \"\" ? \"工作名称不能为空\" : \"发布职位\"}\r\n          </Button>\r\n        </Col>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  let upload_job_file = () => {};\r\n\r\n  return (\r\n    <Row\r\n      style={{\r\n        width: \"100%\",\r\n        minHeight: maxHeight,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {fill_card_view()}\r\n    </Row>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { global_var } from \"../global/userInfo\";\r\nimport { user_login_api } from \"../net/netUser\";\r\nimport * as _ from \"lodash\";\r\nimport { admin_login_api } from \"../net/netAdmin\";\r\n\r\nexport let check_user_login_status = async () => {\r\n  let params = global_var[\"user_info\"];\r\n  let data = await user_login_api(params);\r\n  if (_.isEqual(\"0\", _.get(data, \"code\"))) {\r\n    return 0;\r\n  }\r\n  return -1;\r\n};\r\n\r\nexport let check_admin_login_status = async () => {\r\n  let params = global_var[\"admin_info\"];\r\n  let data = await admin_login_api(params);\r\n  if (_.isEqual(\"0\", _.get(data, \"code\"))) {\r\n    return 0;\r\n  }\r\n  return -1;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Divider, Row, Upload, Tag, message } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport * as _ from \"lodash\";\r\nimport {\r\n  get_resume_file_name_api,\r\n  upload_resume_file_api,\r\n} from \"../net/netUser\";\r\nimport { global_var } from \"../global/userInfo\";\r\nimport { PassThrough } from \"stream\";\r\nimport { downloadResByFileName } from \"../net/netDownloadFile\";\r\nimport { nginx_download_url } from \"../net/netConfig\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\n// 可以上传最多三份简历\r\nexport let PreviewResumeFilePanel = () => {\r\n  let [resume_data, set_resume_data] = useState([]);\r\n  let [fn, set_fn] = useState(\"未提交\");\r\n  let [f_size, set_f_size] = useState(0);\r\n  let [resume_file, set_resume_file] = useState(\"\");\r\n\r\n  let [remote_file_name, set_remote_file_name] = useState(\"null\");\r\n\r\n  let history = useHistory();\r\n\r\n  let get_file_name = async () => {\r\n    let params = {\r\n      user_uuid: _.get(global_var, \"user_info.user_uuid\", \"null\"),\r\n    };\r\n    let data = await get_resume_file_name_api(params);\r\n    //  console.log(\"=remote file name\", data);\r\n    set_remote_file_name(_.get(data, \"data.file_name\", \"未提交\"));\r\n  };\r\n\r\n  let maxWidth = document.body.clientWidth;\r\n  let maxHeight = document.body.clientHeight;\r\n\r\n  useEffect(() => {\r\n    get_file_name();\r\n  });\r\n\r\n  const props = {\r\n    name: \"input\",\r\n    accept: \".docx,.pdf,.html,.jpg,.png\",\r\n    beforeUpload: (file: any, fileList: any) => {\r\n      let async_upload = async () => {\r\n        let file_name = _.get(file, \"name\", \"未提交\");\r\n        let file_size = _.get(file, \"size\", 0);\r\n        set_fn(file_name);\r\n        set_f_size(file_size);\r\n        set_resume_file(file);\r\n        let formData = new FormData();\r\n        formData.set(\"resume_file_name\", file_name);\r\n        formData.set(\"file\", file);\r\n        formData.set(\r\n          \"user_uuid\",\r\n          _.get(global_var, \"user_info.user_uuid\", \"null\")\r\n        );\r\n        await upload_resume_file_api(formData);\r\n        setTimeout(() => {\r\n          get_file_name();\r\n        }, 1000);\r\n      };\r\n      async_upload();\r\n      return false;\r\n    },\r\n    showUploadList: false,\r\n    //   action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    onChange(info: any) {\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n        // let fileName = _.get(info, \"file.name\", \"未提交\");\r\n        // let fileSize = _.get(info, \"file.size\", 0);\r\n        // set_fn(fileName);\r\n        // set_f_size(fileSize);\r\n      }\r\n    },\r\n  };\r\n\r\n  let file_url =\r\n    nginx_download_url +\r\n    _.get(global_var, \"user_info.user_uuid\", \"\") +\r\n    \"/\" +\r\n    \"resumefile\" +\r\n    \"/\" +\r\n    remote_file_name;\r\n\r\n  let resume_file_warning_view = () => {\r\n    return (\r\n      <Col>\r\n        <Divider></Divider>\r\n        <Col style={{ fontSize: \"larger\" }}>简历附件未提交</Col>\r\n        <Col>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              history.replace(\"/main/fill_self_info/\");\r\n            }}\r\n            style={{ fontSize: \"larger\" }}\r\n          >\r\n            去提交\r\n          </Button>\r\n        </Col>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  let show_preview_panel = () => {\r\n    if (_.isEqual(\"未提交\", remote_file_name)) {\r\n      return resume_file_warning_view();\r\n    } else {\r\n      return (\r\n        <Col style={{ width: \"100%\" }}>\r\n          <Divider></Divider>\r\n          <Button\r\n            href={file_url}\r\n            target=\"_blank\"\r\n            style={{ fontSize: \"larger\" }}\r\n            type=\"link\"\r\n          >\r\n            点击此处,打开新网页查看简历\r\n          </Button>\r\n          <Divider></Divider>\r\n          <iframe\r\n            style={{ minWidth: \"100%\", minHeight: maxHeight }}\r\n            src={file_url}\r\n          ></iframe>\r\n        </Col>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row gutter={10} justify=\"center\" style={{ width: \"100%\" }}>\r\n      {show_preview_panel()}\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Menu, Row, Typography, Button, message, Modal } from \"antd\";\r\nimport { PoweroffOutlined } from \"@ant-design/icons\";\r\nimport * as _ from \"lodash\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport { global_var } from \"../global/userInfo\";\r\nimport { check_user_login_status } from \"./checkStatus\";\r\nimport { WatchJobInfoPanel } from \"./watchJobInfoPanel\";\r\nimport { FillSelfInfoPanel } from \"./fillSelfInfoPanel\";\r\nimport { PreviewResumeFilePanel } from \"./previewResumeFilePanel\";\r\nconst { Title } = Typography;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nexport let MainPanel = () => {\r\n  let [isCollapsed, setIsCollapsed] = useState(false);\r\n\r\n  let [jobType, setjobType] = useState(\"watch_job_info\");\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let check_res = async () => {\r\n      let res = await check_user_login_status();\r\n      if (res == -1) {\r\n        history.replace(\"/\");\r\n        message.info(\"未登录\");\r\n      }\r\n    };\r\n    check_res();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ShowJobPage();\r\n  }, [jobType]);\r\n\r\n  let [modalVisible, set_modalVisible] = useState(false);\r\n\r\n  let ShowPageRouteControl = () => {\r\n    return (\r\n      <Row>\r\n        <Route path={\"/main/watch_job_info/\"}>\r\n          <WatchJobInfoPanel />\r\n        </Route>\r\n        <Route path={\"/main/fill_self_info/\"}>\r\n          <FillSelfInfoPanel />\r\n        </Route>\r\n        <Route path={\"/main/preview_resume_file/\"}>\r\n          <PreviewResumeFilePanel />\r\n        </Route>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let ShowJobPage = () => {\r\n    if (_.isEqual(\"watch_job_info\", jobType)) {\r\n      history.replace(\"/main/watch_job_info/\");\r\n    } else if (_.isEqual(\"fill_self_info\", jobType)) {\r\n      history.replace(\"/main/fill_self_info/\");\r\n    } else if (_.isEqual(\"preview_resume_file\", jobType)) {\r\n      history.replace(\"/main/preview_resume_file/\");\r\n    }\r\n    return <Title>未上线</Title>;\r\n  };\r\n\r\n  // let ShowJobPage = () => {\r\n  //   if (_.isEqual(\"watch_job_info\", jobType)) {\r\n  //     return <WatchJobInfoPanel />;\r\n  //   } else if (_.isEqual(\"fill_self_info\", jobType)) {\r\n  //     return <FillSelfInfoPanel />;\r\n  //   } else if (_.isEqual(\"preview_resume_file\", jobType)) {\r\n  //     return <PreviewResumeFilePanel />;\r\n  //   }\r\n  //   return <Title>未上线</Title>;\r\n  // };\r\n\r\n  return (\r\n    <Layout style={{ opacity: 3 }}>\r\n      <Modal\r\n        title={<PoweroffOutlined />}\r\n        visible={modalVisible}\r\n        okText=\"退出\"\r\n        cancelText=\"取消\"\r\n        closable={false}\r\n        onOk={() => {\r\n          history.replace(\"/\");\r\n          set_modalVisible(false);\r\n        }}\r\n        onCancel={() => {\r\n          set_modalVisible(false);\r\n        }}\r\n      >\r\n        确定退出登录吗\r\n      </Modal>\r\n      <Sider\r\n        style={{\r\n          overflow: \"auto\",\r\n          height: \"100vh\",\r\n          left: 0,\r\n        }}\r\n        collapsible={true}\r\n        collapsed={isCollapsed}\r\n        onCollapse={() => {\r\n          setIsCollapsed(!isCollapsed);\r\n        }}\r\n      >\r\n        <Menu\r\n          theme=\"dark\"\r\n          defaultSelectedKeys={[\"watch_job_info\"]}\r\n          mode=\"inline\"\r\n        >\r\n          <Menu.Item\r\n            key=\"watch_job_info\"\r\n            onClick={() => {\r\n              history.replace(\"/main/watch_job_info/\");\r\n            }}\r\n          >\r\n            浏览招聘信息\r\n          </Menu.Item>\r\n          <SubMenu key=\"self_info\" title=\" 个人信息 \">\r\n            <Menu.Item\r\n              key=\"fill_self_info\"\r\n              onClick={() => {\r\n                history.replace(\"/main/fill_self_info/\");\r\n              }}\r\n            >\r\n              填写个人信息\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"preview_resume_file\"\r\n              onClick={() => {\r\n                history.replace(\"/main/preview_resume_file/\");\r\n              }}\r\n            >\r\n              预览简历\r\n            </Menu.Item>\r\n          </SubMenu>\r\n          {/* <Menu.Item key=\"notification\" onClick={() => {}}>\r\n            公告通知\r\n          </Menu.Item>\r\n          <Menu.Item key=\"about_ours\" onClick={() => {}}>\r\n            关于我们\r\n          </Menu.Item> */}\r\n          <Menu.Item\r\n            key=\"quit_login\"\r\n            onClick={() => {\r\n              set_modalVisible(true);\r\n            }}\r\n          >\r\n            退出登录\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header\r\n          style={{\r\n            lineHeight: \"20px\",\r\n            borderTop: \"0px\",\r\n            backgroundColor: \"orange\",\r\n            fontSize: \"20px\",\r\n            height: \"25px\",\r\n          }}\r\n        >\r\n          招聘信息网\r\n        </Header>\r\n        {/* <Content style={{ margin: \"24px 16px 0\", overflow: \"initial\" }}> */}\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          {/* {ShowJobPage()} */}\r\n          {ShowPageRouteControl()}\r\n        </Content>\r\n        <Footer\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: \"20px\",\r\n            backgroundColor: \"mintcream\",\r\n          }}\r\n        >\r\n          resume web site ©2020 Created by kiki\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Button, Card, Input, Row, message, Col, Divider, Tag } from \"antd\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Captcha from \"react-captcha-code\";\r\nimport * as _ from \"lodash\";\r\nimport ReactCanvasNest from \"react-canvas-nest\";\r\nimport \"./logInPanel.css\";\r\nimport { user_login_api } from \"../net/netUser\";\r\nimport { global_var } from \"../global/userInfo\";\r\n\r\nexport let LogInPanel = () => {\r\n  let [user_tele, set_user_tele] = useState(\"\");\r\n  let [user_pwd, set_user_pwd] = useState(\"\");\r\n  let [user_verify_code, set_user_verify_code] = useState(\"\");\r\n  let [verify_code, set_verify_code] = useState(\"\");\r\n\r\n  let [tele_len, set_tele_len] = useState(0);\r\n  let [pwd_len, set_pwd_len] = useState(0);\r\n  let [user_verify_code_len, set_user_verify_code_len] = useState(0);\r\n\r\n  let history = useHistory();\r\n\r\n  const handleClick = useCallback((captcha) => {\r\n    set_verify_code(captcha);\r\n  }, []);\r\n\r\n  // 整个 屏幕的 大小\r\n  // let maxHeight = window.screen.availHeight;\r\n  // let maxWidth = window.screen.availWidth;\r\n\r\n  //当前 窗口的 大小\r\n  let maxWidth = document.body.clientWidth;\r\n  let maxHeight = document.body.clientHeight;\r\n  let halfWidth = maxWidth / 1.8;\r\n  let halfHeight = maxHeight / 1.8;\r\n\r\n  let goTORegistPanel = () => {\r\n    return (\r\n      <Row justify=\"center\">\r\n        <Link to=\"/signin\">\r\n          <Button style={{ fontSize: \"larger\" }}>\r\n            未注册用户,点击此处进入 注册页面\r\n          </Button>\r\n        </Link>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let loginView = () => {\r\n    return (\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          {input_tele_col()}\r\n          <Divider dashed={true}></Divider>\r\n          {input_pwd_col()}\r\n          <Divider dashed={true}></Divider>\r\n          {input_verify_code_col()}\r\n          <Divider dashed={true}></Divider>\r\n          <Row>\r\n            <Button\r\n              disabled={!_.isEqual(verify_code, user_verify_code)}\r\n              onClick={async () => {\r\n                if (user_tele.length != 11) {\r\n                  message.info(\"电话号码不是 11 位\");\r\n                  return;\r\n                }\r\n                if (user_pwd.length < 6) {\r\n                  message.info(\"密码不足 6 位\");\r\n                  return;\r\n                }\r\n                let user_info = {\r\n                  user_tele: user_tele,\r\n                  user_pwd: user_pwd,\r\n                };\r\n                let data = await user_login_api(user_info);\r\n                if (_.isEqual(\"0\", _.get(data, \"code\"))) {\r\n                  global_var[\"user_info\"] = _.get(data, \"data\", {});\r\n                  history.replace(\"/main\");\r\n                }\r\n              }}\r\n            >\r\n              {_.isEqual(verify_code, user_verify_code)\r\n                ? \"验证通过,登录\"\r\n                : \"验证码错误\"}\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_tele_col = () => {\r\n    let tele_default_len = 11;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          addonBefore={\"电话号码\"}\r\n          value={user_tele}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[0-9]+$/.test(textValue)) {\r\n              set_user_tele(event.target.value);\r\n              set_tele_len(textValue.length);\r\n            } else {\r\n              set_user_tele(\"\");\r\n              set_tele_len(0);\r\n              let config = {\r\n                content: <Row>电话号码 只能包含数字</Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > tele_default_len) {\r\n              set_user_tele(\"\");\r\n              set_tele_len(0);\r\n              let config = {\r\n                content: <Row>电话号码 不能超过 {tele_default_len} 位</Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 注册时填写的电话号码 \"}\r\n          style={{ width: \"300px\" }}\r\n        ></Input>\r\n\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Tag color=\"blue\" style={{ fontSize: \"larger\" }}>\r\n          {tele_len}\r\n        </Tag>\r\n        <Tag color=\"green\" style={{ fontSize: \"larger\" }}>\r\n          位\r\n        </Tag>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_pwd_col = () => {\r\n    let pwd_default_len = 20;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          type=\"password\"\r\n          addonBefore={\"密码\"}\r\n          value={user_pwd}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[a-zA-Z0-9!?._#@]+$/.test(textValue)) {\r\n              set_user_pwd(event.target.value);\r\n              set_pwd_len(textValue.length);\r\n            } else {\r\n              set_user_pwd(\"\");\r\n              set_pwd_len(0);\r\n              let config = {\r\n                content: <Row> {\"密码 只能包含 a-zA-Z0-9!?._#@ \"} </Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > pwd_default_len) {\r\n              set_user_pwd(\"\");\r\n              set_pwd_len(0);\r\n              let config = {\r\n                content: <p>密码 不能超过 {pwd_default_len} 位</p>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 注册时填写的密码 \"}\r\n          style={{ width: \"300px\" }}\r\n        ></Input>\r\n\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Tag color=\"blue\" style={{ fontSize: \"larger\" }}>\r\n          {pwd_len}\r\n        </Tag>\r\n        <Tag color=\"green\" style={{ fontSize: \"larger\" }}>\r\n          位\r\n        </Tag>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_verify_code_col = () => {\r\n    let verify_code_default_len = 5;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          addonBefore={\"验证码\"}\r\n          value={user_verify_code}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[a-zA-Z0-9]+$/.test(textValue)) {\r\n              set_user_verify_code(event.target.value);\r\n              set_user_verify_code_len(textValue.length);\r\n            } else {\r\n              set_user_verify_code(\"\");\r\n              set_user_verify_code_len(0);\r\n              let config = {\r\n                content: <Row> {\"验证码 只能包含 a-zA-Z0-9 \"} </Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > verify_code_default_len) {\r\n              set_user_verify_code(\"\");\r\n              set_user_verify_code_len(0);\r\n              let config = {\r\n                content: <p>密码 不能超过 {verify_code_default_len} 位</p>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 点击刷新 \"}\r\n          style={{ width: \"200px\" }}\r\n        ></Input>\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Captcha\r\n          charNum={verify_code_default_len}\r\n          fontSize={40}\r\n          width={200}\r\n          height={80}\r\n          bgColor=\"white\"\r\n          onChange={handleClick}\r\n        />\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      className=\"login_bk0\"\r\n      style={{\r\n        // backgroundColor: \"black\",\r\n        width: maxWidth,\r\n        height: maxHeight,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Card\r\n        title={goTORegistPanel()}\r\n        style={{\r\n          width: halfWidth,\r\n          height: halfHeight,\r\n          backgroundColor: \"mintcream\",\r\n        }}\r\n      >\r\n        {loginView()}\r\n      </Card>\r\n      <ReactCanvasNest\r\n        style={{ backgroundColor: \"black\" }}\r\n        config={{ lineColor: \"255,255,255\", pointColor: \"153, 238, 221\" }}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Button, Card, Input, Row, message, Col, Divider, Tag } from \"antd\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Captcha from \"react-captcha-code\";\r\nimport * as _ from \"lodash\";\r\nimport ReactCanvasNest from \"react-canvas-nest\";\r\nimport \"./signInPanel.css\";\r\nimport { user_login_api, user_register_api } from \"../net/netUser\";\r\nimport { global_var } from \"../global/userInfo\";\r\n\r\nexport let SignInPanel = () => {\r\n  let [user_tele, set_user_tele] = useState(\"\");\r\n  let [user_pwd, set_user_pwd] = useState(\"\");\r\n  let [user_pwd_second, set_user_pwd_second] = useState(\"\");\r\n\r\n  let [user_email, set_user_email] = useState(\"@qq.com\");\r\n\r\n  let [user_verify_code, set_user_verify_code] = useState(\"\");\r\n  let [verify_code, set_verify_code] = useState(\"\");\r\n\r\n  let [tele_len, set_tele_len] = useState(0);\r\n  let [pwd_len, set_pwd_len] = useState(0);\r\n  let [pwd_second_len, set_pwd_second_len] = useState(0);\r\n  let [email_len, set_email_len] = useState(\"@qq.com\".length);\r\n  let [user_verify_code_len, set_user_verify_code_len] = useState(0);\r\n\r\n  let history = useHistory();\r\n\r\n  const handleClick = useCallback((captcha) => {\r\n    set_verify_code(captcha);\r\n  }, []);\r\n\r\n  // 整个 屏幕的 大小\r\n  // let maxHeight = window.screen.availHeight;\r\n  // let maxWidth = window.screen.availWidth;\r\n\r\n  //当前 窗口的 大小\r\n  let maxWidth = document.body.clientWidth;\r\n  let maxHeight = document.body.clientHeight;\r\n  let halfWidth = maxWidth / 1.8;\r\n  let halfHeight = maxHeight / 1.8;\r\n\r\n  let goTOLoginPanel = () => {\r\n    return (\r\n      <Row justify=\"center\">\r\n        <Link to=\"/\">\r\n          <Button style={{ fontSize: \"larger\" }}>返回登录页面</Button>\r\n        </Link>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let signinView = () => {\r\n    return (\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          {input_tele_col()}\r\n          <Divider dashed={true}></Divider>\r\n          {input_pwd_col()}\r\n          <Divider dashed={true}></Divider>\r\n          {input_pwd_second_col()}\r\n          <Divider dashed={true}></Divider>\r\n          {input_email_col()}\r\n          <Divider dashed={true}></Divider>\r\n          {input_verify_code_col()}\r\n          <Divider dashed={true}></Divider>\r\n          <Row>\r\n            <Button\r\n              disabled={!_.isEqual(verify_code, user_verify_code)}\r\n              onClick={async () => {\r\n                if (user_tele.length != 11) {\r\n                  message.info(\"电话号码不是 11 位\");\r\n                  return;\r\n                }\r\n                if (!_.isEqual(user_pwd, user_pwd_second)) {\r\n                  message.info(\"两次密码不一样,请重新输入\");\r\n                  return;\r\n                }\r\n                if (user_pwd.length < 6) {\r\n                  message.info(\"密码不足 6 位\");\r\n                  return;\r\n                }\r\n                let user_info = {\r\n                  user_tele: user_tele,\r\n                  user_pwd: user_pwd,\r\n                  user_email: user_email,\r\n                };\r\n                let data = await user_register_api(user_info);\r\n                // console.log(\"sinin\", data);\r\n                if (_.isEqual(\"0\", _.get(data, \"code\"))) {\r\n                  global_var[\"user_info\"] = _.get(data, \"data\", {});\r\n                  history.replace(\"/main\");\r\n                }\r\n              }}\r\n            >\r\n              {_.isEqual(verify_code, user_verify_code)\r\n                ? \"验证通过,注册\"\r\n                : \"验证码错误\"}\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_tele_col = () => {\r\n    let tele_default_len = 11;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          addonBefore={\"电话号码\"}\r\n          value={user_tele}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[0-9]+$/.test(textValue)) {\r\n              set_user_tele(event.target.value);\r\n              set_tele_len(textValue.length);\r\n            } else {\r\n              set_user_tele(\"\");\r\n              set_tele_len(0);\r\n              let config = {\r\n                content: <Row>电话号码 只能包含数字</Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > tele_default_len) {\r\n              set_user_tele(\"\");\r\n              set_tele_len(0);\r\n              let config = {\r\n                content: <Row>电话号码 不能超过 {tele_default_len} 位</Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 务必填写正确的 电话 \"}\r\n          style={{ width: \"300px\" }}\r\n        ></Input>\r\n\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Tag color=\"blue\" style={{ fontSize: \"larger\" }}>\r\n          {tele_len}\r\n        </Tag>\r\n        <Tag color=\"green\" style={{ fontSize: \"larger\" }}>\r\n          位\r\n        </Tag>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_pwd_col = () => {\r\n    let pwd_default_len = 20;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          type=\"password\"\r\n          addonBefore={\"密码\"}\r\n          value={user_pwd}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[a-zA-Z0-9!?._#@]+$/.test(textValue)) {\r\n              set_user_pwd(event.target.value);\r\n              set_pwd_len(textValue.length);\r\n            } else {\r\n              set_user_pwd(\"\");\r\n              set_pwd_len(0);\r\n              let config = {\r\n                content: <Row> {\"密码 只能包含 a-zA-Z0-9!?._#@ \"} </Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > pwd_default_len) {\r\n              set_user_pwd(\"\");\r\n              set_pwd_len(0);\r\n              let config = {\r\n                content: <p>密码 不能超过 {pwd_default_len} 位</p>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 注册时填写的密码 \"}\r\n          style={{ width: \"300px\" }}\r\n        ></Input>\r\n\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Tag color=\"blue\" style={{ fontSize: \"larger\" }}>\r\n          {pwd_len}\r\n        </Tag>\r\n        <Tag color=\"green\" style={{ fontSize: \"larger\" }}>\r\n          位\r\n        </Tag>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_pwd_second_col = () => {\r\n    let pwd_default_len = 20;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          type=\"password\"\r\n          addonBefore={\"二次确认密码\"}\r\n          value={user_pwd_second}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[a-zA-Z0-9!?._#@]+$/.test(textValue)) {\r\n              set_user_pwd_second(event.target.value);\r\n              set_pwd_second_len(textValue.length);\r\n            } else {\r\n              set_user_pwd_second(\"\");\r\n              set_pwd_second_len(0);\r\n              let config = {\r\n                content: <Row> {\"密码 只能包含 a-zA-Z0-9!?._#@ \"} </Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > pwd_default_len) {\r\n              set_user_pwd_second(\"\");\r\n              set_pwd_second_len(0);\r\n              let config = {\r\n                content: <p>密码 不能超过 {pwd_default_len} 位</p>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 核对密码 \"}\r\n          style={{ width: \"300px\" }}\r\n        ></Input>\r\n\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Tag color=\"blue\" style={{ fontSize: \"larger\" }}>\r\n          {pwd_second_len}\r\n        </Tag>\r\n        <Tag color=\"green\" style={{ fontSize: \"larger\" }}>\r\n          位\r\n        </Tag>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_email_col = () => {\r\n    let email_default_len = 30;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          addonBefore={\"邮箱\"}\r\n          value={user_email}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[a-zA-Z0-9!.@]+$/.test(textValue)) {\r\n              set_user_email(event.target.value);\r\n              set_email_len(textValue.length);\r\n            } else {\r\n              set_user_email(\"\");\r\n              set_email_len(0);\r\n              let config = {\r\n                content: <Row> {\"邮箱 只能包含 a-zA-Z0-9!.@ \"} </Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > email_default_len) {\r\n              set_user_email(\"\");\r\n              set_email_len(0);\r\n              let config = {\r\n                content: <p>邮箱 不能超过 {email_default_len} 位</p>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 务必填写正确的邮箱 \"}\r\n          style={{ width: \"300px\" }}\r\n        ></Input>\r\n\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Tag color=\"blue\" style={{ fontSize: \"larger\" }}>\r\n          {email_len}\r\n        </Tag>\r\n        <Tag color=\"green\" style={{ fontSize: \"larger\" }}>\r\n          位\r\n        </Tag>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_verify_code_col = () => {\r\n    let verify_code_default_len = 5;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          addonBefore={\"验证码\"}\r\n          value={user_verify_code}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[a-zA-Z0-9]+$/.test(textValue)) {\r\n              set_user_verify_code(event.target.value);\r\n              set_user_verify_code_len(textValue.length);\r\n            } else {\r\n              set_user_verify_code(\"\");\r\n              set_user_verify_code_len(0);\r\n              let config = {\r\n                content: <Row> {\"验证码 只能包含 a-zA-Z0-9 \"} </Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > verify_code_default_len) {\r\n              set_user_verify_code(\"\");\r\n              set_user_verify_code_len(0);\r\n              let config = {\r\n                content: <p>密码 不能超过 {verify_code_default_len} 位</p>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 点击刷新 \"}\r\n          style={{ width: \"200px\" }}\r\n        ></Input>\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Captcha\r\n          charNum={verify_code_default_len}\r\n          fontSize={40}\r\n          width={200}\r\n          height={80}\r\n          bgColor=\"white\"\r\n          onChange={handleClick}\r\n        />\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      className=\"signin_bk0\"\r\n      style={{\r\n        // backgroundColor: \"black\",\r\n        width: maxWidth,\r\n        minHeight: maxHeight,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Card\r\n        title={goTOLoginPanel()}\r\n        style={{\r\n          width: halfWidth,\r\n          minHeight: halfHeight,\r\n          backgroundColor: \"mintcream\",\r\n        }}\r\n      >\r\n        {signinView()}\r\n      </Card>\r\n      <ReactCanvasNest\r\n        style={{ backgroundColor: \"black\" }}\r\n        config={{ lineColor: \"255,255,255\", pointColor: \"153, 238, 221\" }}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Button, Card, Input, Row, message, Col, Divider, Tag } from \"antd\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Captcha from \"react-captcha-code\";\r\nimport * as _ from \"lodash\";\r\nimport ReactCanvasNest from \"react-canvas-nest\";\r\nimport { admin_login_url } from \"../net/netConfig\";\r\nimport { admin_login_api } from \"../net/netAdmin\";\r\nimport { global_var } from \"../global/userInfo\";\r\n\r\nexport let AdminLogInPanel = () => {\r\n  let [admin_tele, set_admin_tele] = useState(\"\");\r\n  let [admin_pwd, set_admin_pwd] = useState(\"\");\r\n  let [user_verify_code, set_user_verify_code] = useState(\"\");\r\n  let [verify_code, set_verify_code] = useState(\"\");\r\n\r\n  let [tele_len, set_tele_len] = useState(0);\r\n  let [pwd_len, set_pwd_len] = useState(0);\r\n  let [user_verify_code_len, set_user_verify_code_len] = useState(0);\r\n\r\n  let history = useHistory();\r\n\r\n  const handleClick = useCallback((captcha) => {\r\n    set_verify_code(captcha);\r\n  }, []);\r\n\r\n  // 整个 屏幕的 大小\r\n  // let maxHeight = window.screen.availHeight;\r\n  // let maxWidth = window.screen.availWidth;\r\n\r\n  //当前 窗口的 大小\r\n  let maxWidth = document.body.clientWidth;\r\n  let maxHeight = document.body.clientHeight;\r\n  let halfWidth = maxWidth / 1.8;\r\n  let halfHeight = maxHeight / 1.8;\r\n\r\n  let loginView = () => {\r\n    return (\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          {input_tele_col()}\r\n          <Divider dashed={true}></Divider>\r\n          {input_pwd_col()}\r\n          <Divider dashed={true}></Divider>\r\n          {input_verify_code_col()}\r\n          <Divider dashed={true}></Divider>\r\n          <Row>\r\n            <Button\r\n              disabled={!_.isEqual(verify_code, user_verify_code)}\r\n              onClick={async () => {\r\n                if (admin_tele.length != 11) {\r\n                  message.info(\"电话号码不是 11 位\");\r\n                  return;\r\n                }\r\n                if (admin_pwd.length < 6) {\r\n                  message.info(\"密码不足 6 位\");\r\n                  return;\r\n                }\r\n                let admin_info = {\r\n                  admin_tele: admin_tele,\r\n                  admin_pwd: admin_pwd,\r\n                };\r\n                let data = await admin_login_api(admin_info);\r\n                if (_.isEqual(\"0\", _.get(data, \"code\"))) {\r\n                  global_var[\"admin_info\"] = _.get(data, \"data\", {});\r\n                  history.replace(\"/admin_main\");\r\n                }\r\n              }}\r\n            >\r\n              {_.isEqual(verify_code, user_verify_code)\r\n                ? \"验证通过,登录\"\r\n                : \"验证码错误\"}\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_tele_col = () => {\r\n    let tele_default_len = 11;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          addonBefore={\"电话号码\"}\r\n          value={admin_tele}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[0-9]+$/.test(textValue)) {\r\n              set_admin_tele(event.target.value);\r\n              set_tele_len(textValue.length);\r\n            } else {\r\n              set_admin_tele(\"\");\r\n              set_tele_len(0);\r\n              let config = {\r\n                content: <Row>电话号码 只能包含数字</Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > tele_default_len) {\r\n              set_admin_tele(\"\");\r\n              set_tele_len(0);\r\n              let config = {\r\n                content: <Row>电话号码 不能超过 {tele_default_len} 位</Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 注册时填写的电话号码 \"}\r\n          style={{ width: \"300px\" }}\r\n        ></Input>\r\n\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Tag color=\"blue\" style={{ fontSize: \"larger\" }}>\r\n          {tele_len}\r\n        </Tag>\r\n        <Tag color=\"green\" style={{ fontSize: \"larger\" }}>\r\n          位\r\n        </Tag>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_pwd_col = () => {\r\n    let pwd_default_len = 20;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          type=\"password\"\r\n          addonBefore={\"密码\"}\r\n          value={admin_pwd}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[a-zA-Z0-9!?._#@]+$/.test(textValue)) {\r\n              set_admin_pwd(event.target.value);\r\n              set_pwd_len(textValue.length);\r\n            } else {\r\n              set_admin_pwd(\"\");\r\n              set_pwd_len(0);\r\n              let config = {\r\n                content: <Row> {\"密码 只能包含 a-zA-Z0-9!?._#@ \"} </Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > pwd_default_len) {\r\n              set_admin_pwd(\"\");\r\n              set_pwd_len(0);\r\n              let config = {\r\n                content: <p>密码 不能超过 {pwd_default_len} 位</p>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 注册时填写的密码 \"}\r\n          style={{ width: \"300px\" }}\r\n        ></Input>\r\n\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Tag color=\"blue\" style={{ fontSize: \"larger\" }}>\r\n          {pwd_len}\r\n        </Tag>\r\n        <Tag color=\"green\" style={{ fontSize: \"larger\" }}>\r\n          位\r\n        </Tag>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  let input_verify_code_col = () => {\r\n    let verify_code_default_len = 5;\r\n    return (\r\n      <Row>\r\n        <Input\r\n          addonBefore={\"验证码\"}\r\n          value={user_verify_code}\r\n          onChange={(event) => {\r\n            let textValue = event.target.value;\r\n            if (/^[a-zA-Z0-9]+$/.test(textValue)) {\r\n              set_user_verify_code(event.target.value);\r\n              set_user_verify_code_len(textValue.length);\r\n            } else {\r\n              set_user_verify_code(\"\");\r\n              set_user_verify_code_len(0);\r\n              let config = {\r\n                content: <Row> {\"验证码 只能包含 a-zA-Z0-9 \"} </Row>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n\r\n            if (textValue.length > verify_code_default_len) {\r\n              set_user_verify_code(\"\");\r\n              set_user_verify_code_len(0);\r\n              let config = {\r\n                content: <p>密码 不能超过 {verify_code_default_len} 位</p>,\r\n                duration: 3,\r\n              };\r\n              message.error(config);\r\n            }\r\n          }}\r\n          placeholder={\" 点击刷新 \"}\r\n          style={{ width: \"200px\" }}\r\n        ></Input>\r\n        <Divider dashed={true} type=\"vertical\"></Divider>\r\n        <Captcha\r\n          charNum={verify_code_default_len}\r\n          fontSize={40}\r\n          width={200}\r\n          height={80}\r\n          bgColor=\"white\"\r\n          onChange={handleClick}\r\n        />\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      className=\"login_bk0\"\r\n      style={{\r\n        // backgroundColor: \"black\",\r\n        width: maxWidth,\r\n        height: maxHeight,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Card\r\n        title={\"管理员登录入口\"}\r\n        style={{\r\n          width: halfWidth,\r\n          height: halfHeight,\r\n          backgroundColor: \"mintcream\",\r\n        }}\r\n      >\r\n        {loginView()}\r\n      </Card>\r\n      <ReactCanvasNest\r\n        style={{ backgroundColor: \"black\" }}\r\n        config={{ lineColor: \"255,255,255\", pointColor: \"153, 238, 221\" }}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Menu, Row, Typography, message, Modal } from \"antd\";\r\nimport { PoweroffOutlined } from \"@ant-design/icons\";\r\nimport * as _ from \"lodash\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport { RealseJobInfoPanel } from \"./releaseJobInfoPanel\";\r\nimport { MangeJobInfoPanel } from \"./mangeJobInfoPanel\";\r\nimport { check_admin_login_status } from \"../component/checkStatus\";\r\nimport { MangeDeliverInfoPanel } from \"./mangeDeliverInfoPanel\";\r\nconst { Title } = Typography;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nexport let AdminMainPanel = () => {\r\n  let [isCollapsed, setIsCollapsed] = useState(false);\r\n\r\n  let [jobType, setjobType] = useState(\"mange_job_info\");\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    history.replace(\"/admin_main/mange_job_info/\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let check_res = async () => {\r\n      let res = await check_admin_login_status();\r\n      if (res == -1) {\r\n        history.replace(\"/admin\");\r\n        message.info(\"未登录\");\r\n      }\r\n    };\r\n    check_res();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   ShowJobPage();\r\n  // }, [jobType]);\r\n\r\n  // let ShowJobPage = () => {\r\n  //   if (_.isEqual(\"release_job_info\", jobType)) {\r\n  //     history.replace(\"/admin_main/release_job_info/\");\r\n  //   } else if (_.isEqual(\"mange_job_info\", jobType)) {\r\n  //     history.replace(\"/admin_main/mange_job_info/\");\r\n  //   } else if (_.isEqual(\"candidate_record\", jobType)) {\r\n  //     history.replace(\"/admin_main/candidate_record/\");\r\n  //   } else if (_.isEqual(\"watch_self_info\", jobType)) {\r\n  //     history.replace(\"/admin_main/release_job_info/\");\r\n  //   }\r\n  // };\r\n\r\n  let [modalVisible, set_modalVisible] = useState(false);\r\n\r\n  let routeControl = () => {\r\n    return (\r\n      <Row>\r\n        <Route path=\"/admin_main/release_job_info/\">\r\n          <RealseJobInfoPanel />\r\n        </Route>\r\n        <Route path=\"/admin_main/mange_job_info/\">\r\n          <MangeJobInfoPanel />\r\n        </Route>\r\n        <Route path=\"/admin_main/candidate_record/\">\r\n          {MangeDeliverInfoPanel()}\r\n        </Route>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ opacity: 3 }}>\r\n      <Modal\r\n        title={<PoweroffOutlined />}\r\n        visible={modalVisible}\r\n        okText=\"退出\"\r\n        cancelText=\"取消\"\r\n        closable={false}\r\n        onOk={() => {\r\n          history.replace(\"/admin\");\r\n          set_modalVisible(false);\r\n        }}\r\n        onCancel={() => {\r\n          set_modalVisible(false);\r\n        }}\r\n      >\r\n        确定退出登录吗\r\n      </Modal>\r\n      <Sider\r\n        style={{\r\n          overflow: \"auto\",\r\n          height: \"100vh\",\r\n          left: 0,\r\n        }}\r\n        collapsible={true}\r\n        collapsed={isCollapsed}\r\n        onCollapse={() => {\r\n          setIsCollapsed(!isCollapsed);\r\n        }}\r\n      >\r\n        <Menu\r\n          theme=\"dark\"\r\n          defaultSelectedKeys={[\"mange_job_info\"]}\r\n          mode=\"inline\"\r\n        >\r\n          <Menu.Item\r\n            key=\"mange_job_info\"\r\n            onClick={() => {\r\n              history.replace(\"/admin_main/mange_job_info/\");\r\n            }}\r\n          >\r\n            查看与管理\r\n          </Menu.Item>\r\n\r\n          <Menu.Item\r\n            key=\"release_job_info\"\r\n            onClick={() => {\r\n              history.replace(\"/admin_main/release_job_info/\");\r\n            }}\r\n          >\r\n            发布招聘\r\n          </Menu.Item>\r\n\r\n          <Menu.Item\r\n            key=\"candidate_record\"\r\n            onClick={() => {\r\n              history.replace(\"/admin_main/candidate_record/\");\r\n            }}\r\n          >\r\n            投递记录\r\n          </Menu.Item>\r\n\r\n          {/* <Menu.Item\r\n            key=\"regist_record\"\r\n            onClick={() => {\r\n              history.replace(\"/admin_main/regist_record/\");\r\n            }}\r\n          >\r\n            注册记录\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"notification\" onClick={() => {}}>\r\n            公告通知\r\n          </Menu.Item>\r\n          <Menu.Item key=\"about_ours\" onClick={() => {}}>\r\n            关于我们\r\n          </Menu.Item> */}\r\n          <Menu.Item\r\n            key=\"quit_login\"\r\n            onClick={() => {\r\n              set_modalVisible(true);\r\n            }}\r\n          >\r\n            退出登录\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header\r\n          style={{\r\n            lineHeight: \"20px\",\r\n            borderTop: \"0px\",\r\n            backgroundColor: \"orange\",\r\n            fontSize: \"20px\",\r\n            height: \"25px\",\r\n          }}\r\n        >\r\n          招聘信息网\r\n        </Header>\r\n        {/* <Content style={{ margin: \"24px 16px 0\", overflow: \"initial\" }}> */}\r\n        <Content style={{ margin: \"0 16px\" }}>{routeControl()}</Content>\r\n        <Footer\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: \"20px\",\r\n            backgroundColor: \"mintcream\",\r\n          }}\r\n        >\r\n          resume web site ©2020 Created by kiki\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row } from \"antd\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { MainPanel } from \"./mainPanel\";\r\nimport { LogInPanel } from \"./logInPanel\";\r\nimport { SignInPanel } from \"./signInPanel\";\r\nimport { AdminLogInPanel } from \"../adminComponent/adminLogInPanel\";\r\nimport { AdminMainPanel } from \"../adminComponent/adminMainPanel\";\r\n\r\nexport let RouteControl = () => {\r\n  return (\r\n    <Row>\r\n      <Route exact path={\"/\"}>\r\n        <LogInPanel />\r\n      </Route>\r\n      <Route path={\"/signin/\"}>\r\n        <SignInPanel />\r\n      </Route>\r\n      <Route path={\"/main/\"}>\r\n        <MainPanel />\r\n      </Route>\r\n      <Route path={\"/admin/\"}>\r\n        <AdminLogInPanel />\r\n      </Route>\r\n      <Route path={\"/admin_main/\"}>\r\n        <AdminMainPanel />\r\n      </Route>\r\n    </Row>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport ReactCanvasNest from \"react-canvas-nest\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { RouteControl } from \"./component/RouteControl\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/#/\">\n    <RouteControl />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { doPostRequest, GetRequestCode } from \"./netDoRequest\";\r\nimport {\r\n  get_user_resume_info_url,\r\n  user_login_url,\r\n  user_register_url,\r\n  user_upload_resume_url,\r\n  upload_resume_file_url,\r\n  get_resume_file_name_url,\r\n  deliver_job_url,\r\n  get_deliver_status_url,\r\n  set_deliver_status_url,\r\n  upload_headimg_url,\r\n  get_headimg_name_url,\r\n} from \"./netConfig\";\r\n\r\nexport let user_register_api = async (params: any) => {\r\n  let data = await GetRequestCode(user_register_url, params);\r\n  return data;\r\n};\r\n\r\nexport let user_login_api = async (params: any) => {\r\n  let data = await GetRequestCode(user_login_url, params);\r\n  return data;\r\n};\r\n\r\nexport let user_upload_resume_api = async (params: any) => {\r\n  let data = await GetRequestCode(user_upload_resume_url, params);\r\n  return data;\r\n};\r\n\r\nexport let get_user_resume_info_api = async (params: any) => {\r\n  let data = await GetRequestCode(get_user_resume_info_url, params);\r\n  return data;\r\n};\r\n\r\nexport let get_resume_file_name_api = async (params: any) => {\r\n  let data = await GetRequestCode(get_resume_file_name_url, params);\r\n  return data;\r\n};\r\n\r\nexport let get_headimg_name_api = async (params: any) => {\r\n  let data = await GetRequestCode(get_headimg_name_url, params);\r\n  return data;\r\n};\r\n\r\nexport let upload_resume_file_api = (fromData: Object) => {\r\n  doPostRequest(upload_resume_file_url, fromData);\r\n};\r\n\r\nexport let upload_headimg_api = (fromData: Object) => {\r\n  doPostRequest(upload_headimg_url, fromData);\r\n};\r\n\r\nexport let deliver_job_api = async (params: any) => {\r\n  let data = await GetRequestCode(deliver_job_url, params);\r\n};\r\n\r\nexport let get_deliver_status_api = async (params: any) => {\r\n  let data = await GetRequestCode(get_deliver_status_url, params);\r\n  return data;\r\n};\r\n\r\n// export let set_deliver_status_api = async (params: any) => {\r\n//   let data = await GetRequestCode(set_deliver_status_url, params);\r\n//   return data;\r\n// };\r\n","import * as _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { message, Card } from \"antd\";\r\nmessage.config({\r\n  top: 100,\r\n  duration: 1,\r\n  maxCount: 1,\r\n  rtl: true,\r\n});\r\n\r\nexport let dealResp = (resq: any) => {\r\n  // console.log(resq);\r\n  let config: any = { top: 100, duration: 1 };\r\n  if (\r\n    _.isEqual(_.get(resq, \"status\", -1), 200) &&\r\n    _.isEqual(_.get(resq, \"data.code\", \"-1\"), \"0\")\r\n  ) {\r\n    config[\"content\"] = <pre>操作成功</pre>;\r\n    message.success(config);\r\n  } else if (\r\n    _.isEqual(_.get(resq, \"status\", -1), 200) &&\r\n    _.isEqual(_.get(resq, \"data.code\", \"-1\"), \"-1\")\r\n  ) {\r\n    config[\"content\"] = (\r\n      <Card title=\"操作失败\">{_.get(resq, \"data.message\", \"未知错误\")}</Card>\r\n    );\r\n    message.error(config);\r\n  } else if (!_.isEqual(_.get(resq, \"status\", -1), 200)) {\r\n    config[\"content\"] = (\r\n      <Card title=\"网络故障\">{_.get(resq, \"data.message\", \"未知错误\")}</Card>\r\n    );\r\n    message.error(config);\r\n  }\r\n};\r\n","import { dealResp } from \"./netDealResp\";\r\nimport { Gproxy, Gtimeout } from \"./netConfig\";\r\nimport axios from \"axios\";\r\nimport * as _ from \"lodash\";\r\nimport React, { useState } from \"react\";\r\nimport { message, Card } from \"antd\";\r\nimport { observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nexport async function doGetRequest(url: string, queryData: Object) {\r\n  let resq = {};\r\n  try {\r\n    resq = await axios.get(Gproxy + url, {\r\n      params: {\r\n        data: JSON.stringify(queryData),\r\n      },\r\n      timeout: Gtimeout,\r\n    });\r\n    dealResp(resq);\r\n  } catch (err) {\r\n    dealResp(resq);\r\n  }\r\n}\r\n\r\n//  由于上传文件 超时时间 太长没防止用户陷莫名其妙的等待\r\n//  我们可以再上传之前多一个  接口网络测试\r\n\r\nexport async function doPostRequest(url: string, formData: any) {\r\n  let complete: any = observable({ showTest: \"0 %\" });\r\n  let resq = {};\r\n  try {\r\n    let ShowNode = observer(() => {\r\n      return (\r\n        <Card title=\"上传中,请耐心等待\">\r\n          <p>{complete.showTest}</p>\r\n        </Card>\r\n      );\r\n    });\r\n    let uniqueKey = \"loadingdatafile\";\r\n    let config = {\r\n      content: <ShowNode></ShowNode>,\r\n      key: uniqueKey,\r\n      duration: 0,\r\n    };\r\n    message.loading(config);\r\n    //文件可能很大，把  超时 时间放大 一些\r\n    resq = await axios.post(Gproxy + url, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      timeout: 1000 * Gtimeout,\r\n      onUploadProgress: function (progressEvent) {\r\n        let tempcomplete =\r\n          (((progressEvent.loaded / progressEvent.total) * 100) | 0) + \"%\";\r\n        //  // console.log('上传 ' + tempcomplete);\r\n        complete.showTest = tempcomplete;\r\n      },\r\n    });\r\n    message.destroy();\r\n    dealResp(resq);\r\n  } catch (err) {\r\n    // console.log(err);\r\n    message.destroy();\r\n    dealResp(resq);\r\n  }\r\n}\r\n\r\nexport async function GetRequestData(url: string, queryData: Object) {\r\n  let resq = {};\r\n  try {\r\n    resq = await axios.get(Gproxy + url, {\r\n      params: {\r\n        data: JSON.stringify(queryData),\r\n      },\r\n      timeout: Gtimeout,\r\n    });\r\n    // console.log(\"resq\", resq);\r\n    return _.get(resq, \"data.data\", {});\r\n  } catch (err) {\r\n    dealResp(resq);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function GetRequestCode(url: string, queryData: Object) {\r\n  let resq = {};\r\n  try {\r\n    resq = await axios.get(Gproxy + url, {\r\n      params: {\r\n        data: JSON.stringify(queryData),\r\n      },\r\n      timeout: Gtimeout,\r\n    });\r\n    // console.log(\"resq\", resq);\r\n    dealResp(resq);\r\n    return _.get(resq, \"data\", {});\r\n  } catch (err) {\r\n    dealResp(resq);\r\n    return [];\r\n  }\r\n}\r\n","import {\r\n  publish_job_url,\r\n  select_job_by_id_url,\r\n  select_job_url,\r\n  set_job_status_url,\r\n} from \"./netConfig\";\r\nimport { GetRequestCode } from \"./netDoRequest\";\r\n\r\nexport let publish_job_api = async (params: any) => {\r\n  let data = await GetRequestCode(publish_job_url, params);\r\n  return data;\r\n};\r\n\r\nexport let select_job_api = async (params: any) => {\r\n  let data = await GetRequestCode(select_job_url, params);\r\n  return data;\r\n};\r\n\r\nexport let set_job_status_api = async (params: any) => {\r\n  let data = await GetRequestCode(set_job_status_url, params);\r\n  return data;\r\n};\r\n\r\nexport let select_job_by_id_api = async (params: any) => {\r\n  let data = await GetRequestCode(select_job_by_id_url, params);\r\n  return data;\r\n};\r\n","import {\r\n  admin_login_url,\r\n  get_candidate_info_url,\r\n  output_all_resume_info_url,\r\n  set_deliver_status_url,\r\n} from \"./netConfig\";\r\nimport { GetRequestCode } from \"./netDoRequest\";\r\nimport { doGetRequestDownFile } from \"./netDownloadFile\";\r\nexport let admin_login_api = async (params: any) => {\r\n  let data = await GetRequestCode(admin_login_url, params);\r\n  return data;\r\n};\r\n\r\nexport let get_candidate_info_api = async (params: any) => {\r\n  let data = await GetRequestCode(get_candidate_info_url, params);\r\n  return data;\r\n};\r\n\r\nexport let set_deliver_status_api = async (params: any) => {\r\n  let data = await GetRequestCode(set_deliver_status_url, params);\r\n};\r\n\r\nexport let output_all_resume_info_api = async (params: any) => {\r\n  let data = await doGetRequestDownFile(output_all_resume_info_url, params);\r\n};\r\n"],"sourceRoot":""}